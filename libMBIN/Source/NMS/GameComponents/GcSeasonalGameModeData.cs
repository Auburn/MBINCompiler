using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.GameComponents
{
    [NMS(GUID = 0xCCC632C77B9B7F73, NameHash = 0xFD6B0BE30E218605)]
    public class GcSeasonalGameModeData : NMSTemplate
    {
        /* 0x0000 */ public int SeasonId;
        /* 0x0008 */ public ulong StartTimeUTC;
        /* 0x0010 */ public ulong EndTimeUTC;
        /* 0x0018 */ public ulong Hash;
        /* 0x0020 */ public NMSString0x20 Title;
        /* 0x0040 */ public NMSString0x20 Subtitle;
        /* 0x0060 */ public NMSString0x20 Description;
        /* 0x0080 */ public NMSString0x20A FinalStageTitle;
        /* 0x00A0 */ public NMSString0x20A MilestoneWithStageLocId;
        /* 0x00C0 */ public GcAudioWwiseEvents SeasonStartMusicOverride;
        /* 0x00C4 */ public GcGameMode GameMode;
        /* 0x00C8 */ public GcDifficultyPresetType DifficultySettingPreset;
        /* 0x00CC */ public GcDifficultySettingsData DifficultyMinimums;
        /* 0x0124 */ public NMSString0x20 SeasonalUAOverride;
        /* 0x0148 */ public ulong UAOverrideValue;
        /* 0x0150 */ public NMSString0x10 FinalReward;
        /* 0x0160 */ public NMSString0x10 FinalRewardSwitchAlt;
        /* 0x0170 */ public NMSString0x20A FinalCantRewardMessage;
        /* 0x0190 */ public NMSString0x200 FinalRewardDescription;
        /* 0x0390 */ public TkTextureResource MainIcon;
        /* 0x0414 */ public int SeasonNumber;
        /* 0x0418 */ public int RemixNumber;
        /* 0x041C */ public int DisplayNumber;
        /* 0x0420 */ public NMSString0x20A SeasonName;
        /* 0x0440 */ public NMSString0x20A SeasonNameUpper;
        /* 0x0460 */ public NMSString0x20A MainMissionTitle;
        /* 0x0480 */ public NMSString0x20A MainMissionMessage;
        /* 0x04A0 */ public bool DoCommunityMissionTextSubstitutions;
        /* 0x04A8 */ public NMSString0x20A CommunityProgressTitle;
        /* 0x04C8 */ public bool DefaultToPvPOff;
        /* 0x04C9 */ public bool MustCraftInBases;
        /* 0x04D0 */ public List<NMSString0x10> AdditionalTradeProducts;
        /* 0x04E0 */ public List<NMSString0x10> NeverTradeProducts;
        /* 0x04F0 */ public int StartingSuitSlots;
        /* 0x04F4 */ public int StartingSuitTechSlots;
        /* 0x04F8 */ public int StartingSuitCargoSlots;
        /* 0x0500 */ public GcSeed WeaponSeed;
        /* 0x0510 */ public GcSeed ShipSeed;
        /* 0x0520 */ public GcSpaceshipClasses ShipType;
        /* 0x0524 */ public bool StartWithFreighter;
        /* 0x0525 */ public NMSString0x80 FreighterBaseOverrideFilename;
        /* 0x05A8 */ public GcAlienRace FreighterRace;
        /* 0x05AC */ public bool StartAboardFreighter;
        /* 0x05AD */ public bool ForceStartSystemTernary;
        /* 0x05AE */ public bool ForceStartSystemAbandoned;
        /* 0x05B0 */ public List<GcBuildingClassification> ValidSpawnBuildings;
        /* 0x05C0 */ public GcInventoryLayout WeaponInventoryLayout;
        /* 0x05E0 */ public GcInventoryLayout ShipInventoryLayout;
        /* 0x0600 */ public GcInventoryLayout ShipTechInventoryLayout;
        /* 0x0620 */ public bool UseDefaultAppearance;
        /* 0x0628 */ public GcInventoryContainer Inventory;
        /* 0x0780 */ public GcInventoryContainer Inventory_TechOnly;
        /* 0x08D8 */ public GcInventoryContainer Inventory_Cargo;
        /* 0x0A30 */ public GcInventoryContainer ShipInventory;
        /* 0x0B88 */ public GcInventoryContainer WeaponInventory;
        /* 0x0CE0 */ public bool UseRandomPet;
        /* 0x0CE8 */ public List<GcSeasonPetConstraints> RandomPetConstraints;
        [NMS(Size = 0x12)]
        /* 0x0CF8 */ public GcPetData[] SpecificPets;
        /* 0x3338 */ public List<GcSandwormTimerAndFrequencyOverride> SandwormOverrides;
        /* 0x3348 */ public bool SandwormGlobalOverride;
        /* 0x334C */ public float SandwormGlobalOverrideTimer;
        /* 0x3350 */ public float SandwormGlobalOverrideSpawnChance;
        /* 0x3354 */ public bool StartNextToShip;
        /* 0x3355 */ public bool ShipIsAtDifferentBuildingToPlayer;
        /* 0x3358 */ public float DistanceFromShipAtStartOfGame;
        /* 0x335C */ public float BuildingRadiusShipOffsetMultiplier;
        /* 0x3360 */ public bool ShipStartsDamaged;
        /* 0x3361 */ public bool BlockStormsAtStart;
        /* 0x3362 */ public bool AllowMissionDetailMessages;
        /* 0x3363 */ public bool UseStartPlanetObjectListOverrides;
        /* 0x3368 */ public NMSString0x10 StartPlanetRareSubstanceOverride;
        /* 0x3378 */ public bool TrashInventoryOnGalaxyTravel;
        /* 0x337C */ public int FreighterBattleEarlyWarpsOverride;
        /* 0x3380 */ public bool ForceDeepSpaceAmbientFrigatesOnInfested;
        /* 0x3384 */ public int TechCostMultiplier;
        /* 0x3388 */ public List<NMSString0x10> NeverLearnableTech;
        /* 0x3398 */ public List<NMSString0x10> ForgottenProducts;
        /* 0x33A8 */ public bool IncreaseXClassTechOddsWithCommTier;
        /* 0x33AC */ public float AbandonedFreighterHazardProtectionMul;
        /* 0x33B0 */ public float HazardProtectionDrainMultiplier;
        /* 0x33B4 */ public float EnergyDrainMultiplier;
        /* 0x33B8 */ public int QuestSubstanceReducer;
        /* 0x33C0 */ public List<GcSeasonalStage> Stages;
        /* 0x33D0 */ public GcScanEventTable ScanEventTable;
        /* 0x33E0 */ public bool ResetSaveOnDeath;
        /* 0x33E8 */ public List<GcPersistedStatData> StatsToPersistOnReset;
        /* 0x33F8 */ public bool CompatibleWithState;
        /* 0x33F9 */ public bool HasBeenConverted;
        /* 0x3400 */ public List<GcTechnology> TechnologyTable;
        /* 0x3410 */ public List<GcProductData> ProductTable;
        /* 0x3420 */ public List<GcRealitySubstanceData> SubstanceTable;
        /* 0x3430 */ public GcTradeData SeasonalUAStationTradeData;
        /* 0x3500 */ public bool UseSeasonalUAStationTradeData;
    }
}
