using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0x2AA99DA80860B343, NameHash = 0x5BED7FBA4647E787)]
    public class GcSkyGlobals : NMSTemplate
    {
        /* 0x000 */ public GcPlanetWeatherColourData NightSkyColours;
        /* 0x0B0 */ public GcSpaceSkyProperties SpaceSkyMax;
        /* 0x150 */ public GcSpaceSkyProperties SpaceSkyMin;
        /* 0x1F0 */ public Colour AbandonedFreighterFogColour;
        /* 0x200 */ public Colour AsteroidColour;
        /* 0x210 */ public Colour DayLightColour;
        /* 0x220 */ public Colour DuskLightColour;
        /* 0x230 */ public Colour HeavyAirColour1;
        /* 0x240 */ public Colour HeavyAirColour2;
        /* 0x250 */ public Colour NightFogColour;
        /* 0x260 */ public Colour NightHeavyAirColour;
        /* 0x270 */ public Colour NightHeightFogColour;
        /* 0x280 */ public Colour NightHorizonColour;
        /* 0x290 */ public Colour NightLightColour;
        /* 0x2A0 */ public Colour NightSkyColour;
        /* 0x2B0 */ public Vector3f SleepSunFromSettingsPos;
        /* 0x2C0 */ public Colour SpaceLightColour;
        /* 0x2D0 */ public Vector3f SunPosition;
        /* 0x2E0 */ public Vector3f SunRotationAxis;
        /* 0x2F0 */ public GcPlanetCloudProperties PlanetCloudsMax;
        /* 0x330 */ public GcPlanetCloudProperties PlanetCloudsMin;
        /* 0x370 */ public List<GcSpaceSkyColours> SpaceSkyColours;
        /* 0x380 */ public GcPlanetSkyProperties PlanetPrimeProperties;
        /* 0x730 */ public GcPlanetSkyProperties PlanetProperties;
        /* 0xAE0 */ public GcFogProperties AbandonedFreighterFog;
        /* 0xBC0 */ public GcPhotoModeAdjustData CloudAdjust;
        /* 0xBD0 */ public GcPhotoModeAdjustData FogAdjust;
        /* 0xBE0 */ public GcPhotoModeAdjustData VignetteAdjust;
        /* 0xBF0 */ public Vector2f PhotoModeVignette;
        /* 0xBF8 */ public float AmbientFactor;
        /* 0xBFC */ public float BinaryStarChance;
        /* 0xC00 */ public float CloudColourH;
        /* 0xC04 */ public float CloudColourS;
        /* 0xC08 */ public float CloudColourV;
        /* 0xC0C */ public float CloudCoverSmoothTime;
        /* 0xC10 */ public float CloudRatioSmoothTime;
        /* 0xC14 */ public float CreatureStormThreshold;
        /* 0xC18 */ public int DayLength;
        /* 0xC1C */ public float ExtremeAudioLevel;
        /* 0xC20 */ public float ForceFlightStrength;
        /* 0xC24 */ public float ForceNightBlendValue;
        /* 0xC28 */ public float ForceStormStrength;
        /* 0xC2C */ public float FreshStartTimeOfDay;
        /* 0xC30 */ public int FrozenSkyMaxIndex;
        /* 0xC34 */ public int FrozenSkyMinIndex;
        /* 0xC38 */ public float HeavyAirScale;
        /* 0xC3C */ public float InFlightStormStrength;
        /* 0xC40 */ public float LowFlightFogThreshold;
        /* 0xC44 */ public float MaxCloudCover;
        /* 0xC48 */ public float MaxColourS;
        /* 0xC4C */ public float MaxColourV;
        /* 0xC50 */ public float MaxFogSaturation;
        /* 0xC54 */ public float MaxFogValue;
        /* 0xC58 */ public float MaxNightFade;
        /* 0xC5C */ public float MaxRainWetness;
        /* 0xC60 */ public float MaxSaturation;
        /* 0xC64 */ public float MaxStormCloudCover;
        /* 0xC68 */ public float MaxStormLengthHigh;
        /* 0xC6C */ public float MaxStormLengthLow;
        /* 0xC70 */ public float MaxSunsetAtmosphereFade;
        /* 0xC74 */ public float MaxSunsetColourFade;
        /* 0xC78 */ public float MaxSunsetFade;
        /* 0xC7C */ public float MaxSunsetFogFade;
        /* 0xC80 */ public float MaxSunsetHorizonFade;
        /* 0xC84 */ public float MaxSunsetPosFade;
        /* 0xC88 */ public float MaxTimeBetweenStormsExtremeFallback;
        /* 0xC8C */ public float MaxTimeBetweenStormsHigh;
        /* 0xC90 */ public float MaxTimeBetweenStormsLow;
        /* 0xC94 */ public float MaxValue;
        /* 0xC98 */ public float MidColourH;
        /* 0xC9C */ public float MidColourS;
        /* 0xCA0 */ public float MidColourV;
        /* 0xCA4 */ public float MinColourS;
        /* 0xCA8 */ public float MinColourV;
        /* 0xCAC */ public float MinFogSaturation;
        /* 0xCB0 */ public float MinFogValue;
        /* 0xCB4 */ public float MinNightFade;
        /* 0xCB8 */ public float MinSaturation;
        /* 0xCBC */ public float MinStormLengthHigh;
        /* 0xCC0 */ public float MinStormLengthLow;
        /* 0xCC4 */ public float MinSunsetAtmosphereFade;
        /* 0xCC8 */ public float MinSunsetColourFade;
        /* 0xCCC */ public float MinSunsetFade;
        /* 0xCD0 */ public float MinSunsetFogFade;
        /* 0xCD4 */ public float MinSunsetHorizonFade;
        /* 0xCD8 */ public float MinSunsetPosFade;
        /* 0xCDC */ public float MinTimeBetweenStormsExtremeFallback;
        /* 0xCE0 */ public float MinTimeBetweenStormsHigh;
        /* 0xCE4 */ public float MinTimeBetweenStormsLow;
        /* 0xCE8 */ public float MinValue;
        /* 0xCEC */ public float MulticolourH;
        /* 0xCF0 */ public float NebulaColour1S;
        /* 0xCF4 */ public float NebulaColour1V;
        /* 0xCF8 */ public float NebulaColour2S;
        /* 0xCFC */ public float NebulaColour2V;
        /* 0xD00 */ public float NebulaColourH;
        /* 0xD04 */ public float NightHorizonBlendMax;
        /* 0xD08 */ public float NightHorizonBlendMin;
        /* 0xD0C */ public float NightLightBlendMax;
        /* 0xD10 */ public float NightLightBlendMin;
        /* 0xD14 */ public float NightSkyBlendMax;
        /* 0xD18 */ public float NightSkyBlendMin;
        /* 0xD1C */ public float NightThreshold;
        /* 0xD20 */ public float NoAtmosphereColourMax;
        /* 0xD24 */ public float NoAtmosphereColourStrength;
        /* 0xD28 */ public float NoAtmosphereFogMax;
        /* 0xD2C */ public float NoAtmosphereFogStrength;
        /* 0xD30 */ public float PhotoModeMacroMaxDOFAngle;
        /* 0xD34 */ public float PhotoModeMacroMaxDOFAperture;
        /* 0xD38 */ public float PhotoModeSunSpeed;
        /* 0xD3C */ public float RainbowAlpha;
        /* 0xD40 */ public float RainbowDistance;
        /* 0xD44 */ public float RainbowFadeWidth;
        /* 0xD48 */ public float RainbowScale;
        /* 0xD4C */ public float RainbowStormAlpha;
        /* 0xD50 */ public float RainbowWidth;
        /* 0xD54 */ public float RainWetnessFadeInTime;
        /* 0xD58 */ public float RainWetnessFadeOutTime;
        /* 0xD5C */ public int SafeSkyMaxIndex;
        /* 0xD60 */ public int SafeSkyMinIndex;
        /* 0xD64 */ public float SpaceAtmosphereThickness;
        /* 0xD68 */ public float StormAudioLevel;
        /* 0xD6C */ public float StormCloudBottomColourMaxBlend;
        /* 0xD70 */ public float StormCloudBottomColourMinBlend;
        /* 0xD74 */ public float StormCloudSmoothTime;
        /* 0xD78 */ public float StormCloudTopColourMaxBlend;
        /* 0xD7C */ public float StormCloudTopColourMinBlend;
        /* 0xD80 */ public float StormScreenFilterDistance;
        /* 0xD84 */ public float StormScreenFilterFadeTime;
        /* 0xD88 */ public float StormTransitionTime;
        /* 0xD8C */ public float StormWarningTime;
        /* 0xD90 */ public float SunClampAngle;
        /* 0xD94 */ public float TakeoffStormThreshold;
        /* 0xD98 */ public float TernaryStarChance;
        /* 0xD9C */ public float ToFlightFadeTime;
        /* 0xDA0 */ public float ToFootFadeTime;
        /* 0xDA4 */ public float WaterHeavyAirAlpha;
        /* 0xDA8 */ public float WeatherBloomGain;
        /* 0xDAC */ public float WeatherBloomGainSpeed;
        /* 0xDB0 */ public float WeatherBloomImpulseSpeed;
        /* 0xDB4 */ public float WeatherBloomThreshold;
        /* 0xDB8 */ public float WeatherBloomThresholdSpeed;
        /* 0xDBC */ public float WeatherFilterSpaceTransitionChangeTime;
        /* 0xDC0 */ public TkCurveType DoFAdjustMagnitudeMaxCurve;
        /* 0xDC1 */ public bool ForceFlightSetting;
        /* 0xDC2 */ public bool ForceNightBlend;
        /* 0xDC3 */ public bool ForceStormSetting;
        /* 0xDC4 */ public bool SleepSunFromSettings;
        /* 0xDC5 */ public bool UpdateWeatherWhenSunLocked;
        /* 0xDC6 */ public TkCurveType WeatherBloomCurve;
    }
}
