using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0xE49AEAEF27F6C070, NameHash = 0xB24409E83457E875)]
    public class GcGraphicsGlobals : NMSTemplate
    {
        /* 0x000 */ public TkImGuiSettings ImGui;
        [NMS(Size = 0x4, EnumType = typeof(TkGraphicsDetailTypes.GraphicDetailEnum))]
        /* 0x190 */ public Vector4f[] ShellsSettings;
        [NMS(Size = 0x4, EnumType = typeof(TkGraphicsDetailTypes.GraphicDetailEnum))]
        /* 0x1D0 */ public Vector4f[] TessSettings;
        /* 0x210 */ public GcLightShaftProperties LightShaftProperties;
        /* 0x240 */ public GcLightShaftProperties StormLightShaftProperties;
        /* 0x270 */ public Vector4f LensParams;
        /* 0x280 */ public Vector4f MipLevelDebug;
        /* 0x290 */ public Colour ScanColour;
        /* 0x2A0 */ public Vector4f ShadowBias;
        /* 0x2B0 */ public Vector4f ShadowSplit;
        /* 0x2C0 */ public Vector4f ShadowSplitCameraView;
        /* 0x2D0 */ public Vector4f ShadowSplitShip;
        /* 0x2E0 */ public Vector4f ShadowSplitSpace;
        /* 0x2F0 */ public Vector4f ShadowSplitStation;
        /* 0x300 */ public Vector4f TaaSettings;
        /* 0x310 */ public Vector4f TerrainMipDistanceHigh;
        /* 0x320 */ public Vector4f TerrainMipDistanceLow;
        /* 0x330 */ public Vector4f TerrainMipDistanceMed;
        /* 0x340 */ public Vector4f TerrainMipDistanceUlt;
        /* 0x350 */ public Colour UIColour;
        /* 0x360 */ public Colour UIShipColour;
        /* 0x370 */ public Colour VerticalColourBottom;
        /* 0x380 */ public Colour VerticalColourTop;
        /* 0x390 */ public Vector4f VerticalGradient;
        /* 0x3A0 */ public List<int> CascadeRenderSequence;
        [NMS(Size = 0x4, EnumType = typeof(TkGraphicsDetailTypes.GraphicDetailEnum))]
        /* 0x3B0 */ public TkGraphicsDetailPreset[] GraphicsDetailPresetsPC;
        /* 0x500 */ public TkGraphicsDetailPreset GraphicsDetailPresetiOS;
        /* 0x554 */ public TkGraphicsDetailPreset GraphicsDetailPresetMacOS;
        /* 0x5A8 */ public TkGraphicsDetailPreset GraphicsDetailPresetNX64Handheld;
        /* 0x5FC */ public TkGraphicsDetailPreset GraphicsDetailPresetOberon;
        /* 0x650 */ public TkGraphicsDetailPreset GraphicsDetailPresetPS4;
        /* 0x6A4 */ public TkGraphicsDetailPreset GraphicsDetailPresetPS4Pro;
        /* 0x6F8 */ public TkGraphicsDetailPreset GraphicsDetailPresetPS4ProVR;
        /* 0x74C */ public TkGraphicsDetailPreset GraphicsDetailPresetPS4VR;
        /* 0x7A0 */ public TkGraphicsDetailPreset GraphicsDetailPresetPS5;
        /* 0x7F4 */ public TkGraphicsDetailPreset GraphicsDetailPresetPS5VR;
        /* 0x848 */ public TkGraphicsDetailPreset GraphicsDetailPresetXB1;
        /* 0x89C */ public TkGraphicsDetailPreset GraphicsDetailPresetXB1X;
        [NMS(Size = 0x4, EnumType = typeof(TkGraphicsDetailTypes.GraphicDetailEnum))]
        /* 0x8F0 */ public float[] VariableUpdatePeriodModifers;
        /* 0x900 */ public Vector2f WindDir1;
        /* 0x908 */ public Vector2f WindDir2;
        /* 0x910 */ public float AlphaCutoutMax;
        /* 0x914 */ public float AlphaCutoutMin;
        /* 0x918 */ public float AtmosphereSize;
        /* 0x91C */ public float Brightness;
        /* 0x920 */ public float Contrast;
        /* 0x924 */ public float DirectionLightFOV;
        /* 0x928 */ public float DirectionLightRadius;
        /* 0x92C */ public float DirectionLightShadowBias;
        /* 0x930 */ public float DOFAmountManual;
        /* 0x934 */ public float DOFAmountManualFull;
        /* 0x938 */ public float DOFAmountManualFullIndoor;
        /* 0x93C */ public float DOFAmountManualLight;
        /* 0x940 */ public float DOFAmountManualLightIndoor;
        /* 0x944 */ public float DOFAutoFarAmount;
        /* 0x948 */ public float DOFAutoFarFarPlane;
        /* 0x94C */ public float DOFAutoFarFarPlaneFade;
        /* 0x950 */ public float DOFAutoFarNearPlane;
        /* 0x954 */ public float DOFFarFadeDistance;
        /* 0x958 */ public float DOFFarFadeDistanceCave;
        /* 0x95C */ public float DOFFarFadeDistanceInteraction;
        /* 0x960 */ public float DOFFarFadeDistanceManual;
        /* 0x964 */ public float DOFFarFadeDistanceManualIndoor;
        /* 0x968 */ public float DOFFarFadeDistanceSpace;
        /* 0x96C */ public float DOFFarFadeDistanceWater;
        /* 0x970 */ public float DOFFarPlane;
        /* 0x974 */ public float DOFFarPlaneCave;
        /* 0x978 */ public float DOFFarPlaneInteraction;
        /* 0x97C */ public float DOFFarPlaneManual;
        /* 0x980 */ public float DOFFarPlaneSpace;
        /* 0x984 */ public float DOFFarPlaneWater;
        /* 0x988 */ public float DOFFarStrengthWater;
        /* 0x98C */ public float DOFNearAdjustInteraction;
        /* 0x990 */ public float DOFNearFadeDistance;
        /* 0x994 */ public float DOFNearFadeDistanceManual;
        /* 0x998 */ public float DOFNearMinInteraction;
        /* 0x99C */ public float DOFNearPlane;
        /* 0x9A0 */ public float FarClipDistance;
        /* 0x9A4 */ public float FoliageSaturationMax;
        /* 0x9A8 */ public float FoliageSaturationMin;
        /* 0x9AC */ public float FoliageValueMax;
        /* 0x9B0 */ public float FoliageValueMin;
        /* 0x9B4 */ public float FrustumJitterAmount;
        /* 0x9B8 */ public float FrustumJitterAmountDLSS;
        /* 0x9BC */ public float GrassSaturationMax;
        /* 0x9C0 */ public float GrassSaturationMin;
        /* 0x9C4 */ public float GrassValueMax;
        /* 0x9C8 */ public float GrassValueMin;
        /* 0x9CC */ public float HBAOBias;
        /* 0x9D0 */ public float HBAOIntensity;
        /* 0x9D4 */ public float HBAORadius;
        /* 0x9D8 */ public float HDRExposure;
        /* 0x9DC */ public float HDRExposureCave;
        /* 0x9E0 */ public float HDRGamma;
        /* 0x9E4 */ public float HDRLutExposure;
        /* 0x9E8 */ public float HDRLutGamma;
        /* 0x9EC */ public float HDRLutToe;
        /* 0x9F0 */ public float HDROffset;
        /* 0x9F4 */ public float HDROffsetCave;
        /* 0x9F8 */ public float HDRThreshold;
        /* 0x9FC */ public float HDRThresholdCave;
        /* 0xA00 */ public float HUDDistance;
        /* 0xA04 */ public float HUDMotionPos;
        /* 0xA08 */ public float HUDMotionPosSpring;
        /* 0xA0C */ public float HUDMotionX;
        /* 0xA10 */ public float HUDMotionXSpring;
        /* 0xA14 */ public float HUDMotionY;
        /* 0xA18 */ public float HUDMotionYSpring;
        /* 0xA1C */ public float HueVariance;
        /* 0xA20 */ public float LensDirt;
        /* 0xA24 */ public float LensDirtCave;
        /* 0xA28 */ public float LensOffset;
        /* 0xA2C */ public float LensOffsetCave;
        /* 0xA30 */ public float LensScale;
        /* 0xA34 */ public float LensScaleCave;
        /* 0xA38 */ public float LensThreshold;
        /* 0xA3C */ public float LensThresholdCave;
        /* 0xA40 */ public float LowHealthDesaturationIntensityMax;
        /* 0xA44 */ public float LowHealthDesaturationIntensityMin;
        /* 0xA48 */ public float LowHealthDesaturationIntensityTimeSinceHit;
        /* 0xA4C */ public float LowHealthFadeInTime;
        /* 0xA50 */ public float LowHealthFadeOutTime;
        /* 0xA54 */ public float LowHealthOverlayIntensity;
        /* 0xA58 */ public float LowHealthPulseRateFullShield;
        /* 0xA5C */ public float LowHealthPulseRateLowShield;
        /* 0xA60 */ public float LowHealthStrengthFullShield;
        /* 0xA64 */ public float LowHealthStrengthLowShield;
        /* 0xA68 */ public float LowHealthVignetteEnd;
        /* 0xA6C */ public float LowHealthVignetteStart;
        /* 0xA70 */ public float LUTDistanceFlightMultiplier;
        /* 0xA74 */ public float MaxParticleRenderRange;
        /* 0xA78 */ public float MaxParticleRenderRangeSpace;
        /* 0xA7C */ public float MaxSpaceFogStrength;
        /* 0xA80 */ public float MinPixelSizeOfObjectsInShadowsCockpitOnPlanet;
        /* 0xA84 */ public float MinPixelSizeOfObjectsInShadowsPlanet;
        /* 0xA88 */ public float MinPixelSizeOfObjectsInShadowsSpace;
        /* 0xA8C */ public float ModelRendererLightIntensity;
        /* 0xA90 */ public float MotionBlurShutterAngle;
        /* 0xA94 */ public float MotionBlurShutterSpeed;
        /* 0xA98 */ public float MotionBlurThresholdDefault;
        /* 0xA9C */ public float MotionBlurThresholdInVehicle;
        /* 0xAA0 */ public float MotionBlurThresholdOnFoot;
        /* 0xAA4 */ public float MotionBlurThresholdSpace;
        /* 0xAA8 */ public float NearClipDistance;
        /* 0xAAC */ public float New_BounceLightIntensity;
        /* 0xAB0 */ public float New_BounceLightPower;
        /* 0xAB4 */ public float New_BounceLightWarp;
        /* 0xAB8 */ public float New_SideRimColourMixer;
        /* 0xABC */ public float New_SideRimWarp;
        /* 0xAC0 */ public float New_SkyLightIntensity;
        /* 0xAC4 */ public float New_SkyLightPower;
        /* 0xAC8 */ public float New_SkyLightWarp;
        /* 0xACC */ public float New_TopRimColourMixer;
        /* 0xAD0 */ public float New_TopRimIntensity;
        /* 0xAD4 */ public float New_TopRimPower;
        /* 0xAD8 */ public float New_TopRimWarp;
        /* 0xADC */ public float NoFocusMaxFPS;
        /* 0xAE0 */ public float Old_BounceLightIntensity;
        /* 0xAE4 */ public float Old_BounceLightPower;
        /* 0xAE8 */ public float Old_BounceLightWarp;
        /* 0xAEC */ public float Old_SideRimColourMixer;
        /* 0xAF0 */ public float Old_SideRimWarp;
        /* 0xAF4 */ public float Old_SkyLightIntensity;
        /* 0xAF8 */ public float Old_SkyLightPower;
        /* 0xAFC */ public float Old_SkyLightWarp;
        /* 0xB00 */ public float Old_TopRimColourMixer;
        /* 0xB04 */ public float Old_TopRimIntensity;
        /* 0xB08 */ public float Old_TopRimPower;
        /* 0xB0C */ public float Old_TopRimWarp;
        /* 0xB10 */ public float PetModelRendererLightIntensity;
        /* 0xB14 */ public float PhotoModeBloomGainMax;
        /* 0xB18 */ public float PhotoModeBloomGainMedium;
        /* 0xB1C */ public float PhotoModeBloomGainMin;
        /* 0xB20 */ public float PhotoModeBloomThresholdMax;
        /* 0xB24 */ public float PhotoModeBloomThresholdMedium;
        /* 0xB28 */ public float PhotoModeBloomThresholdMin;
        /* 0xB2C */ public float PhotoModeDefaultBloomValue;
        /* 0xB30 */ public float PhotoModeMediumValue;
        /* 0xB34 */ public float QuantizeTime;
        /* 0xB38 */ public float QuantizeTimeCameraView;
        /* 0xB3C */ public float QuantizeTimeShip;
        /* 0xB40 */ public float QuantizeTimeSpace;
        /* 0xB44 */ public float Redo_BounceIntensity;
        /* 0xB48 */ public float Redo_LightIntensity;
        /* 0xB4C */ public float Redo_SkyIntensity;
        /* 0xB50 */ public float ReflectionStrength;
        /* 0xB54 */ public float RingAvoidanceSphereInterpTime;
        /* 0xB58 */ public float RingRadius;
        /* 0xB5C */ public float RingSize;
        /* 0xB60 */ public float Saturation;
        /* 0xB64 */ public float SaturationVariance;
        /* 0xB68 */ public float ScanAlpha;
        /* 0xB6C */ public float ScanBandWidth;
        /* 0xB70 */ public float ScanClamp;
        /* 0xB74 */ public float ScanDistance;
        /* 0xB78 */ public float ScanEffectSpeed;
        /* 0xB7C */ public float ScanFadeInTime;
        /* 0xB80 */ public float ScanFadeOutTime;
        /* 0xB84 */ public float ScanFresnel;
        /* 0xB88 */ public float ScanHeightScale;
        /* 0xB8C */ public float ScanHorizontalScale;
        /* 0xB90 */ public float ScanObjectFade;
        /* 0xB94 */ public float ShadowBillboardOffset;
        /* 0xB98 */ public float ShadowLength;
        /* 0xB9C */ public float ShadowLengthCameraView;
        /* 0xBA0 */ public float ShadowLengthFreighter;
        /* 0xBA4 */ public float ShadowLengthFreighterAbandoned;
        /* 0xBA8 */ public float ShadowLengthShip;
        /* 0xBAC */ public float ShadowLengthSpace;
        /* 0xBB0 */ public float ShadowLengthStation;
        /* 0xBB4 */ public int ShadowMapSize;
        /* 0xBB8 */ public float SharpenFilterAmount;
        /* 0xBBC */ public float SharpenFilterDepthFactorEnd;
        /* 0xBC0 */ public float SharpenFilterDepthFactorStart;
        /* 0xBC4 */ public float ShieldDownScanlineTime;
        /* 0xBC8 */ public float Single1ScanBandWidth;
        /* 0xBCC */ public float Single1ScanEffectSpeed;
        /* 0xBD0 */ public float Single1ScanHeightScale;
        /* 0xBD4 */ public float Single1ScanHorizontalScale;
        /* 0xBD8 */ public float Single1ScanObjectFade;
        /* 0xBDC */ public float Single1ScanTime;
        /* 0xBE0 */ public float Single2ScanBandWidth;
        /* 0xBE4 */ public float Single2ScanEffectSpeed;
        /* 0xBE8 */ public float Single2ScanHeightScale;
        /* 0xBEC */ public float Single2ScanHorizontalScale;
        /* 0xBF0 */ public float Single2ScanObjectFade;
        /* 0xBF4 */ public float Single2ScanTime;
        /* 0xBF8 */ public float SkySaturationMax;
        /* 0xBFC */ public float SkySaturationMin;
        /* 0xC00 */ public float SkyValueMax;
        /* 0xC04 */ public float SkyValueMin;
        /* 0xC08 */ public float SpaceIBLBlendDistance;
        /* 0xC0C */ public float SpaceIBLBlendStart;
        /* 0xC10 */ public float SpaceMieFactor;
        /* 0xC14 */ public float SpaceScale;
        /* 0xC18 */ public float SpaceSunFactor;
        /* 0xC1C */ public float SunLightBlendTime;
        /* 0xC20 */ public float SunLightIntensity;
        /* 0xC24 */ public float SunRayDecay;
        /* 0xC28 */ public float SunRayDensity;
        /* 0xC2C */ public float SunRayExposure;
        /* 0xC30 */ public float SunRayWeight;
        /* 0xC34 */ public int SupersamplingLevel;
        /* 0xC38 */ public float TaaAccumDelay;
        /* 0xC3C */ public float TaaHighFreqConstant;
        /* 0xC40 */ public float TaaLowFreqConstant;
        /* 0xC44 */ public int TargetTextureMemUsageMB;
        /* 0xC48 */ public float TeleportFlashTime;
        /* 0xC4C */ public int TerrainAnisoHi;
        /* 0xC50 */ public int TerrainAnisoLow;
        /* 0xC54 */ public int TerrainAnisoMed;
        /* 0xC58 */ public int TerrainAnisoUlt;
        /* 0xC5C */ public int TerrainBlocksPerFrameHi;
        /* 0xC60 */ public int TerrainBlocksPerFrameLow;
        /* 0xC64 */ public int TerrainBlocksPerFrameMed;
        /* 0xC68 */ public int TerrainBlocksPerFrameOberon;
        /* 0xC6C */ public int TerrainBlocksPerFramePs430;
        /* 0xC70 */ public int TerrainBlocksPerFramePs460;
        /* 0xC74 */ public int TerrainBlocksPerFrameUlt;
        /* 0xC78 */ public int TerrainBlocksPerFrameXb130;
        /* 0xC7C */ public int TerrainBlocksPerFrameXb160;
        /* 0xC80 */ public int TerrainDroppedMipsLow;
        /* 0xC84 */ public int TerrainDroppedMipsMed;
        /* 0xC88 */ public float TerrainMipBiasLow;
        /* 0xC8C */ public float TerrainMipBiasMed;
        /* 0xC90 */ public float ToneMapExposure;
        /* 0xC94 */ public float ToneMapExposureCave;
        /* 0xC98 */ public float ValueVariance;
        /* 0xC9C */ public float VignetteEnd;
        /* 0xCA0 */ public float VignetteEndMoveVR;
        /* 0xCA4 */ public float VignetteEndMoveVRShip;
        /* 0xCA8 */ public float VignetteEndRidingVR;
        /* 0xCAC */ public float VignetteEndTurnRidingVR;
        /* 0xCB0 */ public float VignetteEndTurnVR;
        /* 0xCB4 */ public float VignetteEndTurnVRShip;
        /* 0xCB8 */ public float VignetteStart;
        /* 0xCBC */ public float VignetteStartMoveVR;
        /* 0xCC0 */ public float VignetteStartMoveVRShip;
        /* 0xCC4 */ public float VignetteStartRidingVR;
        /* 0xCC8 */ public float VignetteStartTurnRidingVR;
        /* 0xCCC */ public float VignetteStartTurnVR;
        /* 0xCD0 */ public float VignetteStartTurnVRShip;
        /* 0xCD4 */ public float VignetteVRMoveInterpTime;
        /* 0xCD8 */ public float VignetteVRMoveInterpTimeShip;
        /* 0xCDC */ public float VignetteVRRidingInterpTime;
        /* 0xCE0 */ public float VignetteVRTurnInterpTime;
        /* 0xCE4 */ public float VignetteVRTurnInterpTimeShip;
        /* 0xCE8 */ public float VignetteVRTurnRidingInterpTime;
        /* 0xCEC */ public float WarpK;
        /* 0xCF0 */ public float WarpKCube;
        /* 0xCF4 */ public float WarpKDispersion;
        /* 0xCF8 */ public float WarpScale;
        /* 0xCFC */ public float WaterHueShift;
        /* 0xD00 */ public float WaterSaturation;
        /* 0xD04 */ public float WaterValue;
        /* 0xD08 */ public float WonderModelRendererLightIntensity;
        /* 0xD0C */ public bool AllowPartialCascadeRender;
        /* 0xD0D */ public bool ApplyTaaTest;
        /* 0xD0E */ public bool CenterRenderSpaceOffset;
        /* 0xD0F */ public bool DebugLinesDepthTest;
        /* 0xD10 */ public bool DOFEnableBokeh;
        /* 0xD11 */ public bool DOFEnableNewBokehShader;
        /* 0xD12 */ public bool DOFEnablePhysCamera;
        /* 0xD13 */ public bool EnableCrossPipeSharing;
        /* 0xD14 */ public bool EnableSSR;
        /* 0xD15 */ public bool EnableTerrainCachePs4Base;
        /* 0xD16 */ public bool EnableTerrainCachePs4Pro;
        /* 0xD17 */ public bool EnableTerrainCacheXb1Base;
        /* 0xD18 */ public bool EnableTerrainCacheXb1X;
        /* 0xD19 */ public bool EnableTextureStreaming;
        /* 0xD1A */ public bool EnableVariableUpdate;
        /* 0xD1B */ public bool ForceCachedTerrain;
        /* 0xD1C */ public bool ForceEvictAllTextures;
        /* 0xD1D */ public bool ForceStreamAllTextures;
        /* 0xD1E */ public bool ForceUncachedTerrain;
        /* 0xD1F */ public bool FullscreenScanEffect;
        /* 0xD20 */ public bool IBLReflections;
        /* 0xD21 */ public bool Redo_On;
        /* 0xD22 */ public bool ShadowQuantized;
        /* 0xD23 */ public bool ShowReflectionProbes;
        /* 0xD24 */ public bool ShowTaaBuf;
        /* 0xD25 */ public bool ShowTaaCVarianceBuf;
        /* 0xD26 */ public bool ShowTaaNVarianceBuf;
        /* 0xD27 */ public bool ShowTaaVarianceBuf;
        /* 0xD28 */ public bool TonemapInLuminance;
        /* 0xD29 */ public bool UseImposters;
        /* 0xD2A */ public bool UseTaaResolve;
        /* 0xD2B */ public bool WaterReflections;
    }
}
