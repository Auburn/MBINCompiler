using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS( GUID = 0x49883295C12860BF)]
    public class GcGraphicsGlobals : NMSTemplate
    {
        /* 0x0 */ public float LUTDistanceFlightMultiplier;
        /* 0x4 */ public float SunLightIntensity;
        /* 0x8 */ public float HBAOBias;
        /* 0xC */ public float HBAORadius;
        /* 0x10 */ public float HBAOIntensity;
        /* 0x14 */ public float LightShaftScattering;
        /* 0x18 */ public float LightShaftStrength;
        /* 0x1C */ public float LightShaftBottom;
        /* 0x20 */ public float LightShaftTop;
        /* 0x30 */ public Colour LightShaftColourBottom;
        /* 0x40 */ public Colour LightShaftColourTop;
        /* 0x50 */ public float SunRayDensity;
        /* 0x54 */ public float SunRayDecay;
        /* 0x58 */ public float SunRayExposure;
        /* 0x5C */ public float SunRayWeight;
        /* 0x60 */ public float Brightness;
        /* 0x64 */ public float Contrast;
        /* 0x68 */ public float Saturation;
        /* 0x6C */ public bool Redo_On;
        /* 0x70 */ public float Redo_LightIntensity;
        /* 0x74 */ public float Redo_SkyIntensity;
        /* 0x78 */ public float Redo_BounceIntensity;
        /* 0x7C */ public float New_BounceLightWarp;
        /* 0x80 */ public float New_BounceLightPower;
        /* 0x84 */ public float New_BounceLightIntensity;
        /* 0x88 */ public float New_SkyLightWarp;
        /* 0x8C */ public float New_SkyLightPower;
        /* 0x90 */ public float New_SkyLightIntensity;
        /* 0x94 */ public float New_SideRimWarp;
        /* 0x98 */ public float New_SideRimColourMixer;
        /* 0x9C */ public float New_TopRimWarp;
        /* 0xA0 */ public float New_TopRimColourMixer;
        /* 0xA4 */ public float New_TopRimPower;
        /* 0xA8 */ public float New_TopRimIntensity;
        /* 0xAC */ public float Old_BounceLightWarp;
        /* 0xB0 */ public float Old_BounceLightPower;
        /* 0xB4 */ public float Old_BounceLightIntensity;
        /* 0xB8 */ public float Old_SkyLightWarp;
        /* 0xBC */ public float Old_SkyLightPower;
        /* 0xC0 */ public float Old_SkyLightIntensity;
        /* 0xC4 */ public float Old_SideRimWarp;
        /* 0xC8 */ public float Old_SideRimColourMixer;
        /* 0xCC */ public float Old_TopRimWarp;
        /* 0xD0 */ public float Old_TopRimColourMixer;
        /* 0xD4 */ public float Old_TopRimPower;
        /* 0xD8 */ public float Old_TopRimIntensity;
        /* 0xDC */ public float ModelRendererLightIntensity;
        /* 0xE0 */ public float ScanFresnel;
        /* 0xE4 */ public float ScanClamp;
        /* 0xE8 */ public float ScanAlpha;
        /* 0xF0 */ public Colour ScanColour;
        /* 0x100 */ public bool DebugLinesDepthTest;
        /* 0x101 */ public bool CenterRenderSpaceOffset;
        /* 0x110 */ public TkImGuiSettings ImGui;
        /* 0x2A0 */ public Colour UIColour;
        /* 0x2B0 */ public Colour UIShipColour;
        /* 0x2C0 */ public float HUDMotionXSpring;
        /* 0x2C4 */ public float HUDMotionYSpring;
        /* 0x2C8 */ public float HUDMotionPosSpring;
        /* 0x2CC */ public float HUDMotionX;
        /* 0x2D0 */ public float HUDMotionY;
        /* 0x2D4 */ public float HUDMotionPos;
        /* 0x2D8 */ public float HUDDistance;
        /* 0x2DC */ public float NearClipDistance;
        /* 0x2E0 */ public float FarClipDistance;
        /* 0x2E4 */ public float WarpK;
        /* 0x2E8 */ public float WarpKCube;
        /* 0x2EC */ public float WarpScale;
        /* 0x2F0 */ public float WarpKDispersion;
        /* 0x2F4 */ public int ShadowMapSize;
        /* 0x2F8 */ public float DirectionLightRadius;
        /* 0x2FC */ public float DirectionLightFOV;
        /* 0x300 */ public float DirectionLightShadowBias;
        /* 0x304 */ public float ShadowLength;
        /* 0x308 */ public float ShadowLengthShip;
        /* 0x30C */ public float ShadowLengthSpace;
        /* 0x310 */ public float ShadowLengthStation;
        /* 0x314 */ public float ShadowLengthCameraView;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x318 */ public byte[] Padding318;
        /* 0x320 */ public Vector4f ShadowSplit;
        /* 0x330 */ public Vector4f ShadowSplitShip;
        /* 0x340 */ public Vector4f ShadowSplitSpace;
        /* 0x350 */ public Vector4f ShadowSplitStation;
        /* 0x360 */ public Vector4f ShadowSplitCameraView;
        /* 0x370 */ public Vector4f ShadowBias;
        /* 0x380 */ public bool ShadowQuantized;
        /* 0x384 */ public float ShadowBillboardOffset;
        /* 0x388 */ public float QuantizeTime;
        /* 0x38C */ public float QuantizeTimeShip;
        /* 0x390 */ public float QuantizeTimeSpace;
        /* 0x394 */ public float QuantizeTimeCameraView;
        /* 0x398 */ public float ToneMapExposure;
        /* 0x39C */ public float HDRExposure;
		/* 0x3A0 */ public float HDRGamma;
		/* 0x3A4 */ public float HDRLutExposure;
		/* 0x3A8 */ public float HDRLutGamma;
		/* 0x3AC */ public float HDRLutToe;
		/* 0x3B0 */ public float HDRThreshold;
		/* 0x3B4 */ public float HDROffset;
		/* 0x3B8 */ public float LensThreshold;
		/* 0x3BC */ public float LensOffset;
		/* 0x3C0 */ public float LensScale;
		/* 0x3C4 */ public float LensDirt;
		/* 0x3C8 */ public float ToneMapExposureCave;
		/* 0x3CC */ public float HDRExposureCave;
		/* 0x3D0 */ public float HDRThresholdCave;
		/* 0x3D4 */ public float HDROffsetCave;
		/* 0x3D8 */ public float LensThresholdCave;
		/* 0x3DC */ public float LensOffsetCave;
		/* 0x3E0 */ public float LensScaleCave;
		/* 0x3E4 */ public float LensDirtCave;
		/* 0x3E8 */ public float DOFNearPlane;
		/* 0x3EC */ public float DOFFarPlane;
        /* 0x3F0 */ public float Unknown0x3F0;                  // this value and next value may be swapped
		/* 0x3F4 */ public float DOFNearFadeDistance;
		/* 0x3F8 */ public float DOFNearFadeDistanceManual;
		/* 0x3FC */ public float DOFFarFadeDistance;
		/* 0x400 */ public float DOFFarPlaneCave;
		/* 0x404 */ public float DOFFarFadeDistanceCave;
		/* 0x408 */ public float DOFFarPlaneSpace;
		/* 0x40C */ public float DOFFarFadeDistanceSpace;
		/* 0x410 */ public float DOFFarStrengthWater;
		/* 0x414 */ public float DOFFarPlaneWater;
		/* 0x418 */ public float DOFFarFadeDistanceWater;
		/* 0x41C */ public float DOFFarPlaneManual;
		/* 0x420 */ public float DOFFarFadeDistanceManual;
		/* 0x424 */ public float DOFNearMinInteraction;
		/* 0x428 */ public float DOFNearAdjustInteraction;
		/* 0x42C */ public float DOFFarPlaneInteraction;
		/* 0x430 */ public float DOFFarFadeDistanceInteraction;
		/* 0x434 */ public bool DOFEnableBokeh;
		/* 0x438 */ public float VignetteStart;
		/* 0x43C */ public float VignetteEnd;
        /* 0x440 */ public float Unknown0x440;
        /* 0x444 */ public float Unknown0x444;
        /* 0x448 */ public float Unknown0x448;
        /* 0x44C */ public float Unknown0x44C;
        /* 0x450 */ public float Unknown0x450;
        /* 0x454 */ public float Unknown0x454;
        /* 0x458 */ public float Unknown0x458;
        /* 0x45C */ public float Unknown0x45C;
        /* 0x460 */ public float Unknown0x460;
        /* 0x464 */ public float Unknown0x464;
        /* 0x468 */ public float Unknown0x468;
        /* 0x46C */ public float Unknown0x46C;
		/* 0x470 */ public float LowHealthVignetteStart;
		/* 0x474 */ public float LowHealthVignetteEnd;
		/* 0x478 */ public float LowHealthDesaturationIntensity;
		/* 0x47C */ public float LowHealthOverlayIntensity;
		/* 0x480 */ public float LowHealthFadeInTime;
		/* 0x484 */ public float LowHealthFadeOutTime;
		/* 0x488 */ public float LowHealthPulseRateLowShield;
		/* 0x48C */ public float LowHealthPulseRateFullShield;
		/* 0x490 */ public float LowHealthStrengthLowShield;
		/* 0x494 */ public float LowHealthStrengthFullShield;
		/* 0x498 */ public float ShieldDownScanlineTime;
		/* 0x49C */ public bool FullscreenScanEffect;
		/* 0x49D */ public bool UseImposters;
        [NMS(Size = 0x2, Ignore = true)]
        /* 0x49E */ public byte[] Padding49E;
        /* 0x4A0 */ public Vector4f MipLevelDebug;
        /* 0x4B0 */ public Vector4f LensParams;
        /* 0x4C0 */ public Colour VerticalColourTop;
        /* 0x4D0 */ public Colour VerticalColourBottom;
        /* 0x4E0 */ public Vector4f VerticalGradient;
        /* 0x4F0 */ public float ScanFadeInTime;
        /* 0x4F4 */ public float ScanFadeOutTime;
        /* 0x4F8 */ public float ScanEffectSpeed;
        /* 0x4FC */ public float ScanObjectFade;
        /* 0x500 */ public float ScanBandWidth;
        /* 0x504 */ public float ScanHeightScale;
        /* 0x508 */ public float ScanDistance;
        /* 0x50C */ public float ScanHorizontalScale;
        /* 0x510 */ public float Single1ScanTime;
        /* 0x514 */ public float Single1ScanHeightScale;
        /* 0x518 */ public float Single1ScanBandWidth;
        /* 0x51C */ public float Single1ScanEffectSpeed;
        /* 0x520 */ public float Single1ScanObjectFade;
        /* 0x524 */ public float Single1ScanHorizontalScale;
        /* 0x528 */ public float Single2ScanTime;
        /* 0x52C */ public float Single2ScanHeightScale;
        /* 0x530 */ public float Single2ScanBandWidth;
        /* 0x534 */ public float Single2ScanEffectSpeed;
        /* 0x538 */ public float Single2ScanObjectFade;
        /* 0x53C */ public float Single2ScanHorizontalScale;
        /* 0x540 */ public float TeleportFlashTime;
        /* 0x544 */ public Vector2f WindDir1;
        /* 0x54C */ public Vector2f WindDir2;
        /* 0x554 */ public float AtmosphereSize;
        /* 0x558 */ public float RingSize;
        /* 0x55C */ public float RingRadius;
        /* 0x560 */ public float HueVariance;
        /* 0x564 */ public float SaturationVariance;
        /* 0x568 */ public float ValueVariance;
        /* 0x56C */ public float FoliageSaturationMin;
        /* 0x570 */ public float FoliageSaturationMax;
        /* 0x574 */ public float FoliageValueMin;
        /* 0x578 */ public float FoliageValueMax;
        /* 0x57C */ public float GrassSaturationMin;
        /* 0x580 */ public float GrassSaturationMax;
        /* 0x584 */ public float GrassValueMin;
        /* 0x588 */ public float GrassValueMax;
        /* 0x58C */ public float SkySaturationMin;
        /* 0x590 */ public float SkySaturationMax;
        /* 0x594 */ public float SkyValueMin;
        /* 0x598 */ public float SkyValueMax;
        /* 0x59C */ public float SpaceScale;
        /* 0x5A0 */ public float SpaceMieFactor;
        /* 0x5A4 */ public float SpaceSunFactor;
        /* 0x5A8 */ public float MaxSpaceFogStrength;
        /* 0x5AC */ public float ReflectionStrength;
        /* 0x5B0 */ public float AlphaCutoutMin;
        /* 0x5B4 */ public float AlphaCutoutMax;
        /* 0x5B8 */ public float WaterHueShift;
        /* 0x5BC */ public float WaterSaturation;
        /* 0x5C0 */ public float WaterValue;
		/* 0x5C4 */ public float MaxParticleRenderRange;
		/* 0x5C8 */ public float MaxParticleRenderRangeSpace;
		/* 0x5CC */ public float MotionBlurShutterSpeed;
		/* 0x5D0 */ public float MotionBlurShutterAngle;
		/* 0x5D4 */ public float TaaLowFreqConstant;
		/* 0x5D8 */ public float TaaHighFreqConstant;
		/* 0x5DC */ public float TaaAccumDelay;
		/* 0x5E0 */ public float FrustumJitterAmount;
        // 7 of the following variables below are used... No idea how to figure out which...
		//* 0x5E4 */ public bool EnableFxaa;
		//* 0x5E6 */ public bool UseTaaResolve;
		//* 0x5E8 */ public bool ApplyTaaCheap;
		//* 0x5E9 */ public bool ApplyTaaTest;
		//* 0x5EA */ public bool ShowTaaBuf;
		//* 0x5EB */ public bool TonemapInLuminance;
		//* 0x5EC */ public bool ShowTaaVarianceBuf;
		//* 0x5ED */ public bool ShowTaaNVarianceBuf;
		//* 0x5EE */ public bool ShowTaaCVarianceBuf;
        /* 0x5E4 */ public bool Unknown0x5E4;
        /* 0x5E5 */ public bool Unknown0x5E5;
        /* 0x5E6 */ public bool Unknown0x5E6;
        /* 0x5E7 */ public bool Unknown0x5E7;
        /* 0x5E8 */ public bool Unknown0x5E8;
        /* 0x5E9 */ public bool Unknown0x5E9;
        /* 0x5EA */ public bool Unknown0x5EA;
        [NMS(Size = 0x5, Ignore = true)]
        /* 0x5EB */ public byte[] Padding5EB;
        /* 0x5F0 */ public Vector4f TaaSettings;
        /* 0x600 */ public Vector4f Unknown0x600;
        /* 0x610 */ public Vector4f TessSettingsMed;
        /* 0x620 */ public Vector4f TessSettingsHi;
        /* 0x630 */ public Vector4f TessSettingsUlt;
		/* 0x640 */ public int TerrainAnisoLow;
		/* 0x644 */ public int TerrainAnisoMed;
		/* 0x648 */ public int TerrainAnisoHi;
		/* 0x64C */ public int TerrainAnisoUlt;
		/* 0x650 */ public int TerrainDroppedMipsLow;
		/* 0x654 */ public int TerrainDroppedMipsMed;
		/* 0x658 */ public float TerrainMipBiasLow;
		/* 0x65C */ public float TerrainMipBiasMed;
		/* 0x660 */ public int TerrainBlocksPerFrameLow;
		/* 0x664 */ public int TerrainBlocksPerFrameMed;
		/* 0x668 */ public int TerrainBlocksPerFrameHi;
		/* 0x66C */ public int TerrainBlocksPerFrameUlt;
		/* 0x670 */ public int TerrainBlocksPerFramePs430;
		/* 0x674 */ public int TerrainBlocksPerFramePs460;
		/* 0x678 */ public int TerrainBlocksPerFrameXb130;
		/* 0x67C */ public int TerrainBlocksPerFrameXb160;
		/* 0x680 */ public bool EnableTerrainCachePs4Base;
		/* 0x681 */ public bool EnableTerrainCachePs4Pro;
		/* 0x682 */ public bool EnableTerrainCacheXb1Base;
		/* 0x683 */ public bool EnableTerrainCacheXb1X;
		/* 0x684 */ public bool ForceCachedTerrain;
		/* 0x685 */ public bool ForceUncachedTerrain;
		/* 0x688 */ public float MinPixelSizeOfObjectsInShadowsSpace;
		/* 0x68C */ public float MinPixelSizeOfObjectsInShadowsPlanet;
		/* 0x690 */ public float MinPixelSizeOfObjectsInShadowsCockpitOnPlanet;
		/* 0x694 */ public bool AllowPartialCascadeRender;
        [NMS(Size = 0x4)]
		/* 0x698 */ public int[] CascadeRenderSequence;
		/* 0x6A8 */ public int SupersamplingLevel;
		/* 0x6AC */ public bool EnableTextureStreaming;
		/* 0x6AD */ public bool ForceStreamAllTextures;
		/* 0x6AE */ public bool ForceEvictAllTextures;
		/* 0x6B0 */ public int TargetTextureMemUsageMB;
		/* 0x6B4 */ public float MotionBlurThresholdOnFoot;
		/* 0x6B8 */ public float MotionBlurThresholdInVehicle;
		/* 0x6BC */ public float MotionBlurThresholdSpace;
		/* 0x6C0 */ public float MotionBlurThresholdDefault;
		/* 0x6C4 */ public float SpaceIBLBlendStart;
		/* 0x6C8 */ public float SpaceIBLBlendDistance;
		/* 0x6CC */ public float NoFocusMaxFPS;
		/* 0x6D0 */ public bool EnableCrossPipeSharing;
        /* 0x6D4 */ public float Unknown0x6D4;
        /* 0x6D8 */ public float Unknown0x6D8;
        /* 0x6DC */ public float Unknown0x6DC;
        [NMS(Size = 0xA)]
        /* 0x6E0 */ public TkGraphicsDetailPreset[] GraphicsDetailPresets;
    }
}
