using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0xDED57E1241DD31B, NameHash = 0xDD7401143C40F868)]
    public class GcRobotGlobals : NMSTemplate
    {
        /* 0x0000 */ public GcDroneData DroneControl;
        /* 0x03A0 */ public GcScanEffectData DroneScanEffect;
        /* 0x03F0 */ public GcRobotLaserData QuadLaser;
        /* 0x0440 */ public GcRobotLaserData WalkerLaser;
        /* 0x0490 */ public Vector3f DroneCriticalOffset;
        /* 0x04A0 */ public Vector3f DroneRepairOffset;
        /* 0x04B0 */ public Vector3f QuadCriticalOffset;
        /* 0x04C0 */ public Vector3f WalkerGunOffset1;
        /* 0x04D0 */ public Vector3f WalkerGunOffset2;
        /* 0x04E0 */ public Vector3f WalkerHeadEyeOffset;
        [NMS(Size = 0x4, EnumType = typeof(GcSentinelQuadWeaponMode.SentinelQuadWeaponModeEnum))]
        /* 0x04F0 */ public GcSentinelQuadWeaponData[] QuadWeapons;
        [NMS(Size = 0xB, EnumType = typeof(GcSentinelTypes.SentinelTypeEnum))]
        /* 0x0810 */ public GcSentinelDamagedData[] DamageData;
        [NMS(Size = 0x3, EnumType = typeof(GcSentinelMechWeaponMode.SentinelMechWeaponModeEnum))]
        /* 0x0AD0 */ public GcSentinelMechWeaponData[] SentinelMechWeaponData;
        /* 0x0C50 */ public NMSString0x10 AttackScan;
        /* 0x0C60 */ public List<GcDroneWeaponData> DroneWeapons;
        /* 0x0C70 */ public NMSString0x10 ForceDroneWeapon;
        /* 0x0C80 */ public NMSString0x10 RepairEffect;
        /* 0x0C90 */ public NMSString0x10 SummonerDroneBuildupEffect;
        /* 0x0CA0 */ public NMSString0x10 SummonerDroneSpawnEffect;
        /* 0x0CB0 */ public List<NMSString0x20> WalkerLeftLegArmourNodes;
        /* 0x0CC0 */ public List<NMSString0x20> WalkerRightLegArmourNodes;
        /* 0x0CD0 */ public NMSString0x10 WalkerTitanFallEffect;
        /* 0x0CE0 */ public NMSString0x10 WalkerTitanFallShake;
        [NMS(Size = 0xB, EnumType = typeof(GcSentinelTypes.SentinelTypeEnum))]
        /* 0x0CF0 */ public GcSentinelResource[] SentinelResources;
        [NMS(Size = 0xB, EnumType = typeof(GcSentinelTypes.SentinelTypeEnum))]
        /* 0x134C */ public GcSentinelPounceBalance[] PounceData;
        /* 0x14AC */ public GcCamouflageData RobotCamoData;
        /* 0x1548 */ public GcMechTargetSelectionWeightingSettings MechTargetSelectionWeightingSettings;
        [NMS(Size = 0xB, EnumType = typeof(GcSentinelTypes.SentinelTypeEnum))]
        /* 0x1578 */ public float[] FireRateModifierScores;
        [NMS(Size = 0xB, EnumType = typeof(GcSentinelTypes.SentinelTypeEnum))]
        /* 0x15A4 */ public int[] SentinelSpawnLimits;
        /* 0x15D0 */ public Vector2f MechPatrolPauseTime;
        /* 0x15D8 */ public Vector2f QuadAttackTurnSpeeds;
        /* 0x15E0 */ public Vector2f QuadLookTurnSpeeds;
        /* 0x15E8 */ public Vector2f QuadPatrolPauseTime;
        /* 0x15F0 */ public float AttackMoveArrivalDistance;
        /* 0x15F4 */ public float AttackMoveMaxTime;
        /* 0x15F8 */ public int AttackSentinelWantedValue;
        /* 0x15FC */ public float CollisionDistance;
        /* 0x1600 */ public float CombatSpawnSquadRadiusDrones;
        /* 0x1604 */ public float CombatSpawnSquadRadiusRobots;
        /* 0x1608 */ public float CombatWaveSpawnTime;
        /* 0x160C */ public float CorruptedDroneRepairInteruptCooldownTime;
        /* 0x1610 */ public float CriticalHitSizeDrone;
        /* 0x1614 */ public float CriticalHitSizeMech;
        /* 0x1618 */ public float CriticalHitSizeQuad;
        /* 0x161C */ public float CriticalHitSizeWalker;
        /* 0x1620 */ public float DroneAggressiveInvestigateAttackTime;
        /* 0x1624 */ public int DroneAggroDamage;
        /* 0x1628 */ public float DroneAttackGetInRangeBoost;
        /* 0x162C */ public float DroneAttackMaxAngleDownFromPlayer;
        /* 0x1630 */ public float DroneAttackPlayerHeightOffset;
        /* 0x1634 */ public float DroneCombatSpawnAngle;
        /* 0x1638 */ public float DroneCrimeCooldown;
        /* 0x163C */ public float DroneCrimeCooldownWaitTime;
        /* 0x1640 */ public float DroneCrimeCooldownWaitTimeAtMax;
        /* 0x1644 */ public float DroneCrimePostInvestigateWaitTime;
        /* 0x1648 */ public float DroneCrimeWitnessInvestigateDistance;
        /* 0x164C */ public float DroneCriminalScanTime;
        /* 0x1650 */ public float DroneDecisionTime;
        /* 0x1654 */ public float DroneHeightAngle;
        /* 0x1658 */ public float DroneHitImpulseCooldown;
        /* 0x165C */ public float DroneHitImpulseFlipForceDownBound;
        /* 0x1660 */ public float DroneHitImpulseLaserMultiplier;
        /* 0x1664 */ public float DroneHitImpulseMinVerticalComponentScale;
        /* 0x1668 */ public float DroneHitImpulseMultiplier;
        /* 0x166C */ public float DroneInvestigateMaxPositionAngle;
        /* 0x1670 */ public float DroneInvestigateMinChaseRange;
        /* 0x1674 */ public float DroneInvestigateMinCrimeInterval;
        /* 0x1678 */ public float DroneInvestigateMinPositionAngle;
        /* 0x167C */ public float DroneInvestigateMinScanTime;
        /* 0x1680 */ public float DroneInvestigateMinWitnessRange;
        /* 0x1684 */ public float DroneInvestigateMinWitnessRangeCantSee;
        /* 0x1688 */ public float DroneInvestigateMinWitnessTime;
        /* 0x168C */ public float DroneInvestigateRepositionTime;
        /* 0x1690 */ public float DroneInvestigateSpeedBoost;
        /* 0x1694 */ public float DroneInvestigateSpeedBoostRange;
        /* 0x1698 */ public float DroneInvestigateSpeedBoostStartDistance;
        /* 0x169C */ public float DroneMaxScanAngle;
        /* 0x16A0 */ public float DroneMaxScanLength;
        /* 0x16A4 */ public float DroneMoveDistancePlayerMechMultiplier;
        /* 0x16A8 */ public float DronePatrolAttackSightTime;
        /* 0x16AC */ public float DronePatrolInvestigateSpeedBoost;
        /* 0x16B0 */ public float DronePatrolSearchTime;
        /* 0x16B4 */ public float DronePerceptionMinHearingSpeed;
        /* 0x16B8 */ public float DronePerceptionRange;
        /* 0x16BC */ public float DronePerceptionRangeHostile;
        /* 0x16C0 */ public float DronePerceptionSightAngle;
        /* 0x16C4 */ public float DronePerceptionSightRange;
        /* 0x16C8 */ public float DronePerceptionSightRangeHostile;
        /* 0x16CC */ public float DronePushLaserForce;
        /* 0x16D0 */ public float DronePushMaxSpeed;
        /* 0x16D4 */ public float DronePushMaxTurn;
        /* 0x16D8 */ public float DroneRadius;
        /* 0x16DC */ public float DroneReAttackTime;
        /* 0x16E0 */ public float DroneScale;
        /* 0x16E4 */ public float DroneScanMinPerpSpeed;
        /* 0x16E8 */ public float DroneScanRadius;
        /* 0x16EC */ public float DroneScanWaitTime;
        /* 0x16F0 */ public float DroneSearchLookDistance;
        /* 0x16F4 */ public float DroneSearchLookSpeed;
        /* 0x16F8 */ public float DroneSearchPickNearbyAngleMax;
        /* 0x16FC */ public float DroneSearchPickNearbyAngleMin;
        /* 0x1700 */ public float DroneSearchPickNearbyTime;
        /* 0x1704 */ public float DroneSpawnFadeTime;
        /* 0x1708 */ public float DroneSpawnHeight;
        /* 0x170C */ public float DroneSpawnTime;
        /* 0x1710 */ public float DroneSquadSpawnRadius;
        /* 0x1714 */ public float DroneUpdateDistForMax;
        /* 0x1718 */ public float DroneUpdateDistForMin;
        /* 0x171C */ public float DroneUpdateFPSMax;
        /* 0x1720 */ public float DroneUpdateFPSMin;
        /* 0x1724 */ public float EncounterRangeToAllowPulledIntoFight;
        /* 0x1728 */ public float EncounterRangeToBlockWantedSpawns;
        /* 0x172C */ public float EnergyExplodeTime;
        /* 0x1730 */ public float ExoMechJumpCooldownTimeInCombat;
        /* 0x1734 */ public float ExoMechJumpCooldownTimeOutOfCombat;
        /* 0x1738 */ public float FakeQuadGuard;
        /* 0x173C */ public float FireRateLastHitBypassTime;
        /* 0x1740 */ public float FireRateModifierMax;
        /* 0x1744 */ public float FireRateModifierMin;
        /* 0x1748 */ public float FollowRoutineArriveRadius;
        /* 0x174C */ public float FriendlyDroneBeepReplaceChatChance;
        /* 0x1750 */ public float FriendlyDroneChatChanceBecomeWanted;
        /* 0x1754 */ public float FriendlyDroneChatChanceIdle;
        /* 0x1758 */ public float FriendlyDroneChatChanceLoseWanted;
        /* 0x175C */ public float FriendlyDroneChatChanceSummoned;
        /* 0x1760 */ public float FriendlyDroneChatChanceUnsummoned;
        /* 0x1764 */ public float FriendlyDroneChatCooldown;
        /* 0x1768 */ public float FriendlyDroneDissolveTime;
        /* 0x176C */ public float GrenadeLaunchFlightTime;
        /* 0x1770 */ public float HeightTestSampleDistance;
        /* 0x1774 */ public float HeightTestSampleTime;
        /* 0x1778 */ public int HitsToCancelStealth;
        /* 0x177C */ public int HitsToCancelStealthSmall;
        /* 0x1780 */ public float LabelOffsetDrone;
        /* 0x1784 */ public float LabelOffsetMech;
        /* 0x1788 */ public float LabelOffsetQuad;
        /* 0x178C */ public float LabelOffsetSpiderQuad;
        /* 0x1790 */ public float LabelOffsetWalker;
        /* 0x1794 */ public float LaserFadeTime;
        /* 0x1798 */ public float LaserFadeTime2;
        /* 0x179C */ public float LineOfSightReturnCheckMinDistance;
        /* 0x17A0 */ public float LineOfSightReturnCheckRadius;
        /* 0x17A4 */ public float LineOfSightReturnRange;
        /* 0x17A8 */ public int MaxNumInvestigatingDrones;
        /* 0x17AC */ public int MaxNumPatrolDrones;
        /* 0x17B0 */ public float MechAlertRange;
        /* 0x17B4 */ public float MechAttackMoveAngleToleranceDeg;
        /* 0x17B8 */ public float MechAttackMoveFacingAngleTolerance;
        /* 0x17BC */ public float MechAttackMoveHoldPositionTime;
        /* 0x17C0 */ public float MechAttackMoveMaxOffsetRotation;
        /* 0x17C4 */ public float MechAttackMoveMinOffsetRotation;
        /* 0x17C8 */ public float MechAttackRange;
        /* 0x17CC */ public float MechAttackRate;
        /* 0x17D0 */ public float MechEndJumpMinDistanceInCombat;
        /* 0x17D4 */ public float MechEndJumpMinDistanceOutOfCombat;
        /* 0x17D8 */ public float MechFadeInDistance;
        /* 0x17DC */ public float MechFadeInTime;
        /* 0x17E0 */ public float MechFadeOutTime;
        /* 0x17E4 */ public float MechHearingRange;
        /* 0x17E8 */ public float MechMinMaintainFireTargetTime;
        /* 0x17EC */ public float MechMinMaintainTargetTime;
        /* 0x17F0 */ public float MechMinTurretAngle;
        /* 0x17F4 */ public float MechPatrolRadius;
        /* 0x17F8 */ public float MechSightAngle;
        /* 0x17FC */ public float MechSightRange;
        /* 0x1800 */ public float MechStartJumpMinDistanceInCombat;
        /* 0x1804 */ public float MechStartJumpMinDistanceOutOfCombat;
        /* 0x1808 */ public float MedicDroneMinHealTime;
        /* 0x180C */ public float MinInvestigateMessageTime;
        /* 0x1810 */ public int MinRobotKillsForHint;
        /* 0x1814 */ public float QuadAlertRange;
        /* 0x1818 */ public float QuadAttackMinMoveTime;
        /* 0x181C */ public float QuadAttackMoveMinDist;
        /* 0x1820 */ public float QuadAttackMoveMinRange;
        /* 0x1824 */ public float QuadAttackMoveRange;
        /* 0x1828 */ public float QuadAttackRate;
        /* 0x182C */ public float QuadAttackTurnAngleMax;
        /* 0x1830 */ public float QuadAttackTurnAngleMin;
        /* 0x1834 */ public float QuadCannotSeeTargetRepositionTime;
        /* 0x1838 */ public int QuadDamageMoveThreshold;
        /* 0x183C */ public float QuadEvadeCooldown;
        /* 0x1840 */ public float QuadEvadeFacingAngle;
        /* 0x1844 */ public float QuadHearingRange;
        /* 0x1848 */ public float QuadHeight;
        /* 0x184C */ public float QuadJumpBackCheckRange;
        /* 0x1850 */ public float QuadJumpBackDoFlipDistance;
        /* 0x1854 */ public float QuadJumpBackFacingAngle;
        /* 0x1858 */ public float QuadJumpBackHeightRange;
        /* 0x185C */ public float QuadJumpBackJumpDistance;
        /* 0x1860 */ public float QuadJumpBackJumpMinLength;
        /* 0x1864 */ public float QuadJumpBackMinTime;
        /* 0x1868 */ public float QuadJumpBackRange;
        /* 0x186C */ public float QuadJumpBackRecoveryTime;
        /* 0x1870 */ public float QuadJumpBackTestHeightOffset;
        /* 0x1874 */ public float QuadJumpBackTestRadius;
        /* 0x1878 */ public float QuadLaserSpringMax;
        /* 0x187C */ public float QuadLaserSpringMin;
        /* 0x1880 */ public float QuadLookAngleMax;
        /* 0x1884 */ public float QuadLookAngleMin;
        /* 0x1888 */ public float QuadMinStationaryTime;
        /* 0x188C */ public float QuadNavRadius;
        /* 0x1890 */ public float QuadObstacleSize;
        /* 0x1894 */ public float QuadPatrolRadius;
        /* 0x1898 */ public float QuadPounceDamageRadius;
        /* 0x189C */ public float QuadPounceOffset;
        /* 0x18A0 */ public float QuadRepositionHealthThresholdPercent;
        /* 0x18A4 */ public float QuadRepositionMaxTimeSinceHit;
        /* 0x18A8 */ public float QuadRepositionMinMoveDist;
        /* 0x18AC */ public float QuadRepositionMinTargetDist;
        /* 0x18B0 */ public float QuadRepositionTargetDist;
        /* 0x18B4 */ public float QuadRepositionTimeout;
        /* 0x18B8 */ public float QuadSightAngle;
        /* 0x18BC */ public float QuadSightRange;
        /* 0x18C0 */ public float QuadStealthCooldown;
        /* 0x18C4 */ public float QuadStealthRepositionHealthThresholdPercent;
        /* 0x18C8 */ public float QuadStealthRepositionHealthThresholdPercentSmall;
        /* 0x18CC */ public float QuadStealthRepositionMaxTimeSinceHit;
        /* 0x18D0 */ public float QuadTurnBlendTime;
        /* 0x18D4 */ public float RepairChargeTime;
        /* 0x18D8 */ public float RepairCheckForTargetCooldownTime;
        /* 0x18DC */ public float RepairEffectScaleDrone;
        /* 0x18E0 */ public float RepairEffectScaleQuad;
        /* 0x18E4 */ public float RepairOffset;
        /* 0x18E8 */ public float RepairOffsetChangeTime;
        /* 0x18EC */ public float RepairRate;
        /* 0x18F0 */ public float RepairScanArriveDistance;
        /* 0x18F4 */ public float RepairScanRadius;
        /* 0x18F8 */ public float RobotHUDMarkerFalloff;
        /* 0x18FC */ public float RobotHUDMarkerRange;
        /* 0x1900 */ public float RobotMapScale;
        /* 0x1904 */ public float RobotSightAngle;
        /* 0x1908 */ public float RobotSightTimer;
        /* 0x190C */ public float RobotSteeringAvoidCreaturesWeight;
        /* 0x1910 */ public float RobotSteeringAvoidDangerWeight;
        /* 0x1914 */ public float RobotSteeringAvoidTurnWeight;
        /* 0x1918 */ public float RobotSteeringFollowWeight;
        /* 0x191C */ public int ScoreForMaxFireRateModifier;
        /* 0x1920 */ public int ScoreForMinFireRateModifier;
        /* 0x1924 */ public float SentinelMechJumpCooldownTimeInCombat;
        /* 0x1928 */ public float SentinelMechJumpCooldownTimeOutOfCombat;
        /* 0x192C */ public float SpiderPounceAngle;
        /* 0x1930 */ public float SpiderPounceMinRange;
        /* 0x1934 */ public float SpiderPounceRange;
        /* 0x1938 */ public float SpiderQuadHeadTrackSmoothTime;
        /* 0x193C */ public float SpiderQuadHeight;
        /* 0x1940 */ public float SpiderQuadMiniHeight;
        /* 0x1944 */ public float SpiderQuadMiniNavRadius;
        /* 0x1948 */ public float SpiderQuadMiniObstacleSize;
        /* 0x194C */ public float SpiderQuadNavRadius;
        /* 0x1950 */ public float SummonerDroneBeginTime;
        /* 0x1954 */ public float SummonerDroneBuildupTime;
        /* 0x1958 */ public float SummonerDroneCooldown;
        /* 0x195C */ public float SummonerDroneCooldownOffset;
        /* 0x1960 */ public int SummonerDroneResummonThreshold;
        /* 0x1964 */ public float SummonPreviewInterpSpeedMax;
        /* 0x1968 */ public float SummonPreviewInterpSpeedMin;
        /* 0x196C */ public float SummonRadius;
        /* 0x1970 */ public float SummonVerticalOffset;
        /* 0x1974 */ public float TrackArrowOffsetMultiplier;
        /* 0x1978 */ public float UnderwaterPerceptionMargin;
        /* 0x197C */ public float WalkerAttackAngle;
        /* 0x1980 */ public float WalkerAttackRange;
        /* 0x1984 */ public float WalkerAttackRate;
        /* 0x1988 */ public float WalkerClosingRange;
        /* 0x198C */ public float WalkerEnergyLength;
        /* 0x1990 */ public float WalkerEnergyMaxAlpha;
        /* 0x1994 */ public float WalkerEnergyMinAlpha;
        /* 0x1998 */ public float WalkerEnergyRadiusStartMax;
        /* 0x199C */ public float WalkerEnergyRadiusStartMin;
        /* 0x19A0 */ public float WalkerEnergySpeedMax;
        /* 0x19A4 */ public float WalkerEnergySpeedMin;
        /* 0x19A8 */ public float WalkerFastMoveFactor;
        /* 0x19AC */ public float WalkerGuardAlertRange;
        /* 0x19B0 */ public float WalkerGunChargeTime;
        /* 0x19B4 */ public float WalkerGunRate;
        /* 0x19B8 */ public float WalkerGunShootTime;
        /* 0x19BC */ public float WalkerHeadMaxPitch;
        /* 0x19C0 */ public float WalkerHeadMaxYaw;
        /* 0x19C4 */ public float WalkerHeadMoveTimeActive;
        /* 0x19C8 */ public float WalkerHeadMoveTimeIdle;
        /* 0x19CC */ public float WalkerHeight;
        /* 0x19D0 */ public float WalkerLaserBodyOffset;
        /* 0x19D4 */ public float WalkerLaserOvershootEnd;
        /* 0x19D8 */ public float WalkerLaserOvershootStart;
        /* 0x19DC */ public float WalkerLaserOvershootVehicleReducer;
        /* 0x19E0 */ public float WalkerLegShotDefendTime;
        /* 0x19E4 */ public float WalkerLegShotEnrageShotInterval;
        /* 0x19E8 */ public int WalkerLegShotEnrageShotsPerVolley;
        /* 0x19EC */ public float WalkerLegShotEnrageShotSpreadMax;
        /* 0x19F0 */ public float WalkerLegShotEnrageShotSpreadMin;
        /* 0x19F4 */ public float WalkerLegShotEnrageVolleyInterval;
        /* 0x19F8 */ public float WalkerMoveSpeed;
        /* 0x19FC */ public float WalkerNavRadius;
        /* 0x1A00 */ public float WalkerObstacleSize;
        /* 0x1A04 */ public float WalkerPauseTime;
        /* 0x1A08 */ public float WalkerPushRadius;
        /* 0x1A0C */ public float WalkerPushTime;
        /* 0x1A10 */ public float WalkerTitanFallEffectScale;
        /* 0x1A14 */ public float WalkerTitanFallHeight;
        /* 0x1A18 */ public float WalkerTitanFallSpeed;
        /* 0x1A1C */ public bool DisableDronePerception;
        /* 0x1A1D */ public bool DroneChatter;
        /* 0x1A1E */ public bool DroneClickToMove;
        /* 0x1A1F */ public bool DroneEnableVariableUpdate;
        /* 0x1A20 */ public bool DroneHitImpulseEnabled;
        /* 0x1A21 */ public bool DronePatrolScanPlayer;
        /* 0x1A22 */ public bool DronesUseEscalationTimer;
        /* 0x1A23 */ public bool ForceShowDebugMoveTrail;
        /* 0x1A24 */ public bool SpawnFriendlyDrone;
        /* 0x1A25 */ public bool SummonerTestSummonEffects;
        /* 0x1A26 */ public bool WalkerLegShotDefendEnabled;
        /* 0x1A27 */ public bool WalkerLegShotEnrageEnabled;
    }
}
