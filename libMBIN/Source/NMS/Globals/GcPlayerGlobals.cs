using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0x9EDF704E68FE0D91, NameHash = 0x49E4A0E330E783EE)]
    public class GcPlayerGlobals : NMSTemplate
    {
        /* 0x00   */ public Vector3f LeftHandModeWeaponAttachSocketCorrection;
        /* 0x0000 */ public bool ForceFreighterProcTechRandom;
        /* 0x0004 */ public float AlienPodAggroDecay;
        /* 0x0008 */ public float AlienPodAggroSpring;
        /* 0x000C */ public float FoodValueThresholdBest;
        /* 0x0010 */ public float FoodValueThresholdGood;
        /* 0x0014 */ public float FoodValueThresholdAverage;
        /* 0x0018 */ public float FoodValueThresholdBad;
        /* 0x001C */ public float FoodValueThresholdWorst;
        /* 0x0020 */ public float TeleportAppearEffectSpeed;
        /* 0x0024 */ public float TeleportDisappearEffectSpeed;
        /* 0x0028 */ public float MiniportalAppearEffectTime;
        /* 0x002C */ public float MiniportalDisappearEffectTime;
        /* 0x0030 */ public bool RecenterViewWhenEnteringShip;
        ///* 0x0031 */ public bool UseInitialFacingForMoveDirection;
        ///* 0x0032 */ public bool EmulateNoHandsForHandScreens;
        /* 0x0034 */ public float BinocularAimOffset;
        /* 0x0038 */ public float BinocularScopeScale;
        /* 0x003C */ public float BinocularScopeSmoothing;
        /* 0x0040 */ public float MaxArmExtension;
        /* 0x0044 */ public float MinArmExtension;
        /* 0x00   */ public float ThirdPersonWeaponAttachRotationCorrectionAngle;
        /* 0x00   */ public float ThirdPersonWeaponXOffset;
        /* 0x0048 */ public float SummonArcRange;
        /* 0x004C */ public float InteractionAimOffset;
        /* 0x0050 */ public GcProjectorOffsetData QuickMenuLauncherTransforms;
        /* 0x00   */ public GcProjectorOffsetData QuickMenuLauncherTransformsNoBuildMenu;
        /* 0x00C0 */ public GcProjectorOffsetData WeaponMenuLauncherTransforms;
        /* 0x00   */ public GcProjectorOffsetData LargeWeaponMenuLauncherTransforms;
        /* 0x0130 */ public GcInWorldUIScreenData QuickMenuOffset;
        /* 0x0160 */ public GcInWorldUIScreenData InventoryOffset;
        /* 0x0190 */ public GcInWorldUIScreenData FrontendOffset;
        /* 0x01   */ public GcInWorldUIScreenData QuickMenuOffsetV2;
        /* 0x01   */ public GcInWorldUIScreenData InventoryOffsetV2;
        /* 0x01   */ public GcInWorldUIScreenData FrontendOffsetV2;
        /* 0x01C0 */ public GcInWorldUIScreenData FrontendMessagesOffset;
        /* 0x01F0 */ public GcInWorldUIScreenData DefaultLeftHandTransform;
        /* 0x0220 */ public GcInWorldUIScreenData DefaultLeftHandTransformVehicle;
        /* 0x0250 */ public GcInWorldUIScreenData BinocularInfoScreenOffset;
        /* 0x0280 */ public GcInWorldUIScreenData BinocularInfoScreenOffsetGun;
        /* 0x02B0 */ public GcInWorldUIScreenData FrontendPhotoModeVROffset;
        /* 0x02E0 */ public GcInWorldUIScreenData FrontendBaseScreenshotVROffset;
        /* 0x0310 */ public float BinocularRayThicknessVR;
        /* 0x0314 */ public float BincoularRayThickness;
        /* 0x0320 */ public Vector3f BinocularScopeOffset;
        /* 0x0330 */ public float BinocularsHUDDistanceVR;
        /* 0x0334 */ public float BinocularsHUDScaleVR;
        /* 0x0338 */ public float TeleportMaxTravelDistance;
        /* 0x033C */ public float TeleportMaxTravelDistanceVertical;
        /* 0x0340 */ public float TeleportChargeMinDistance;
        /* 0x0344 */ public float TeleportChargeMaxDistance;
        /* 0x0348 */ public float TeleportChargeMoveSpeed;
        /* 0x034C */ public float TeleportChargeMinTime;
        /* 0x0350 */ public float TeleportChargeFadeInTime;
        /* 0x0354 */ public float TeleportBallFadeMinDistance;
        /* 0x0358 */ public float TeleportBallFadeRange;
        /* 0x035C */ public float TeleportBallDistanceFadeAlpha;
        /* 0x0360 */ public float TeleportBallRadius;
        /* 0x0364 */ public float TeleportTravelSurfaceAngle;
        /* 0x0368 */ public float TeleportBallCompletionFactorFadeout;
        /* 0x036C */ public float FingerTipOffset;
        /* 0x0370 */ public float FingerButtonClickSize;
        /* 0x0374 */ public float FingerButtonRadiusOffset;
        /* 0x0378 */ public float FingerButtonClickTime;
        /* 0x037C */ public float FingerButtonQuickMenuOffset;
        /* 0x0380 */ public Vector2f FingerButtonQuickMenuButtonSize;
        /* 0x0388 */ public float HandInteractionLightIntensity;
        /* 0x038C */ public float HandInteractionLightIntensityMax;
        /* 0x0390 */ public float HandInteractionFresnel;
        /* 0x0394 */ public float HandInteractionFresnelMax;
        /* 0x0398 */ public float HandInteractionLightOffset;
        /* 0x039C */ public float HandInteractionLightOffsetAt;
        /* 0x03A0 */ public float HandInteractionLightTime;
        /* 0x03A4 */ public float HandScreenLookActiveAngle;
        /* 0x03A8 */ public float HandScreenMinAngle;
        /* 0x03AC */ public float HandScreenMinAngleWithPoint;
        /* 0x03B0 */ public float HandScreenAngleRange;
        /* 0x03B4 */ public float HandScreenActivationRange;
        /* 0x03B8 */ public float HandScreenActivationAngle;
        /* 0x03BC */ public float HandScreenActivationAngleOffset;
        /* 0x03C0 */ public float HandScreenActivationAngleDown;
        /* 0x03C4 */ public float HandScreenPenetration;
        /* 0x03C8 */ public float HandScreenRestingTurnAngle;
        /* 0x03D0 */ public Vector3f HandScreenRoboOnScreenOffset;
        /* 0x03E0 */ public GcInWorldUIScreenData InWorldCompass;
        /* 0x0410 */ public float FistClenchBlendInTime;
        /* 0x0414 */ public float FistClenchBlendOutTime;
        /* 0x0418 */ public bool DoPlayerAppearInVehicleEffect;
        /* 0x041C */ public float StickYDampingThreshold;
        /* 0x0420 */ public bool RequireHandsOnShipControls;
        /* 0x0421 */ public bool ShowFirstPersonCharacterShadowPCVR;
        /* 0x0422 */ public bool ShowFirstPersonCharacterShadowPSVR;
        /* 0x0423 */ public bool InteractNearbyRadiusEnabled;
        /* 0x0424 */ public float InteractNearbyRadius;
        /* 0x0428 */ public bool PassiveLook;
        /* 0x042C */ public float BodyRealignmentDelay;
        /* 0x0430 */ public float PointDownToMoveAngle;
        /* 0x0434 */ public float PointDownToMoveBackAngle;
        /* 0x0438 */ public bool EnableLeaning;
        /* 0x0439 */ public bool EnablePointDownToSmoothMove;
        /* 0x043A */ public bool HmdSmoothTurnAlways;
        /* 0x043C */ public float HmdTurnSpeed;
        /* 0x0440 */ public float HmdTurnSpeedPad;
        /* 0x0448 */ public ulong PointingWristAdjustmentTimeMilliseconds;
        /* 0x0450 */ public Vector3f PointingWristAngles;
        /* 0x0460 */ public bool HolsterOnHip;
        /* 0x0464 */ public float HolsterHeadRotX;
        /* 0x0470 */ public Vector3f HolsterHeadOffset;
        /* 0x0480 */ public Vector3f HolsterGunHandOffset;
        /* 0x0490 */ public float GroundWalkForceMultiplier;
        /* 0x0494 */ public float GroundWalkBrake;
        /* 0x0498 */ public float GroundWalkBrakeWhileMoving;
        /* 0x049C */ public float GroundWalkSpeed;
        /* 0x04A0 */ public float GroundWalkSpeedTeleportHmd;
        /* 0x04A4 */ public float GroundRunSpeed;
        /* 0x04A8 */ public float GroundWalkSpeedLowG;
        /* 0x04AC */ public float GroundRunSpeedLowG;
        /* 0x04B0 */ public float GroundWalkRecoverySpeedDamper;
        /* 0x04B4 */ public float HandSmoothMinAngle;
        /* 0x04B8 */ public float HandSmoothAngleRange;
        /* 0x04BC */ public float HmdResetButtonTime;
        /* 0x04C0 */ public float SummonShipDirectionChangeDeadZoneAngle;
        /* 0x04C4 */ public float TeleportArcRadius;
        /* 0x04C8 */ public float TeleportArcRadiusInner;
        /* 0x04CC */ public float TeleportStrafeDistance;
        /* 0x04D0 */ public float NoStickTeleportDirectionChangeDeadzoneAngle;
        /* 0x04D4 */ public float TeleportHmdMinFade;
        /* 0x04D8 */ public float TeleportHmdMaxFade;
        /* 0x04DC */ public float TeleportHmdOutFactor;
        /* 0x04E0 */ public float TeleportBeamGravity;
        /* 0x04E4 */ public float TeleportBeamGravityMax;
        /* 0x04E8 */ public float TeleportArcLengthMultiplier;
        /* 0x04EC */ public float TeleportBeamAnimSpeed;
        /* 0x04F0 */ public float TeleportBeamAnimHeight;
        /* 0x04F4 */ public float TeleportLastKnownThreshold;
        /* 0x04F8 */ public float TeleportLineEndFadeStart;
        /* 0x04FC */ public float TeleportLineEndFadeEnd;
        /* 0x0500 */ public float TeleportLineFadeStart;
        /* 0x0504 */ public float TeleportLineFadeRange;
        /* 0x0508 */ public float TeleportInitiateThreshold;
        /* 0x050C */ public bool TeleportRecentre;
        /* 0x0510 */ public float TeleportLineBezierOffset;
        /* 0x0514 */ public float TeleportLineBezierDistanceFactor;
        /* 0x0518 */ public float InteractionLineSplineOffset;
        /* 0x051C */ public float InteractionLineSplineOffsetMin;
        /* 0x0520 */ public float InteractionLineSplineMinDistance;
        /* 0x0524 */ public float InteractionLineSplineOffsetRange;
        /* 0x0528 */ public float InteractionLineCircleRadius;
        /* 0x052C */ public float InteractionLineCircleThickness;
        /* 0x0530 */ public float InteractionLineCircleSpeed;
        /* 0x0534 */ public float InteractionLineCircleOffsetMin;
        /* 0x0538 */ public float InteractionLineCircleOffsetMax;
        /* 0x053C */ public float InteractionLineNumCirclesPerMetre;
        /* 0x0540 */ public int WordCategoriesRequiredToConverse;
        /* 0x0544 */ public int MaxWordCategoriesToSayPerNPC;
        /* 0x0550 */ public Colour InteractionLineActiveColour;
        /* 0x0560 */ public Colour InteractionLineBaseColour;
        /* 0x0570 */ public GcScanEffectData InteractHighlightEffect;
        /* 0x05C0 */ public GcScanEffectData HolsterHighlightEffect;
        /* 0x0610 */ public float HandHoldInteractDistanceRate;
        /* 0x0614 */ public float HandHoldInteractAngleRate;
        /* 0x0618 */ public float HandSwimMin;
        /* 0x061C */ public float HandSwimMax;
        /* 0x0620 */ public float HandSwimDecayTime;
        /* 0x0624 */ public float HandSwimForce;
        /* 0x0628 */ public float HandSwimMaxForce;
        /* 0x062C */ public bool HandSwimEnabled;
        /* 0x0630 */ public float HmdTurnThreshold;
        /* 0x0634 */ public float HmdTurnAngle;
        /* 0x0638 */ public float HmdTurnAnglePad;
        /* 0x063C */ public float TeleportInstantTravelDistance;
        /* 0x0640 */ public float TeleportDirectionAltHandRange;
        /* 0x0644 */ public float TeleportMotionOffsetAmount;
        /* 0x0648 */ public float TeleportMotionOffsetUp;
        /* 0x064C */ public float TeleportTotalTime;
        /* 0x0650 */ public NMSString0x80 NoShadowMaterial;
        /* 0x06D0 */ public float HolsterGrabRadius;
        /* 0x06D4 */ public float HolsterGrabFrontOffset;
        /* 0x06D8 */ public float HolsterScale;
        /* 0x06DC */ public float HolsterRotY;
        /* 0x06E0 */ public float HolsterRotZ;
        /* 0x06E4 */ public bool HolsterHold;
        /* 0x06F0 */ public Vector3f HolsterOffset;
        /* 0x0700 */ public float HeadBinocularsOffset;
        /* 0x0704 */ public float HeadBinocularsRadius;
        /* 0x0708 */ public NMSString0x10 DebugSearchGroup;
        /* 0x0720 */ public Colour SearchGroupIconColour;
        /* 0x0730 */ public NMSString0x80 DefaultShipFilename;
        /* 0x07B0 */ public GcSeed DefaultShipSeed;
        /* 0x07C0 */ public GcScanEffectData ArmourHighlightScanEffect;
        /* 0x0810 */ public float HitReactNoiseAmount;
        /* 0x0814 */ public float HitReactBlendOutSpeedMin;
        /* 0x0818 */ public float HitReactBlendOutSpeedMax;
        /* 0x081C */ public float JetpackUnderwaterDrainRate;
        /* 0x0820 */ public float JetpackUnderwaterFillRate;
        /* 0x0824 */ public float UnderwaterMargin;
        /* 0x0828 */ public float UnderwaterMinDepth;
        /* 0x082C */ public float UnderwaterSurfaceTension;
        /* 0x0830 */ public float UnderwaterSurfaceTensionOffset;
        /* 0x0834 */ public float UnderwaterSurfaceForceFlattenAngleMin;
        /* 0x0838 */ public float UnderwaterSurfaceForceFlattenAngleRange;
        /* 0x083C */ public float UnderwaterImpact;
        /* 0x0840 */ public float UnderwaterMaxSpeed;
        /* 0x0844 */ public float UnderwaterForce;
        /* 0x0848 */ public float UnderwaterMaxJetpackSpeed;
        /* 0x084C */ public float UnderwaterJetpackForce;
        /* 0x0850 */ public float UnderwaterMaxJetpackEscapeSpeed;
        /* 0x0854 */ public float UnderwaterJetpackEscapeForce;
        /* 0x0858 */ public float UnderwaterBrake;
        /* 0x085C */ public float UnderwaterFloat;
        /* 0x0860 */ public float UnderwaterFloatForce;
        /* 0x0864 */ public float UnderwaterFloatRange;
        /* 0x0868 */ public float UnderwaterFloatFreq;
        /* 0x086C */ public float RespawnOnPadRadius;
        /* 0x0870 */ public float DeepWaterDepth;
        /* 0x0874 */ public float CockpitEjectTestRadius;
        /* 0x0878 */ public float CockpitEjectTestStartHeightOffset;
        /* 0x087C */ public float CockpitEjectTestEndHeightOffset;
        /* 0x0880 */ public float CockpitEjectFirstPersonOffsetTime;
        /* 0x0884 */ public float CockpitEjectFirstPersonOffset;
        /* 0x0888 */ public float BinocularRangePlanet;
        /* 0x088C */ public float BinocularRangeSpace;
        /* 0x0890 */ public float MinBinocActiveTime;
        /* 0x0894 */ public float BinocularCreatureCastSphereSize;
        /* 0x0898 */ public int RobotMultiplierWithFriends;
        /* 0x089C */ public float DroneStartLocationRadius;
        /* 0x08A0 */ public float ShipSummonLastSafeMargin;
        /* 0x08A4 */ public float FreighterSpawnedOnYouFadeInTime;
        /* 0x08A8 */ public float CreativeModeDeathFadeInTime;
        /* 0x08AC */ public float CreativeModeDeathFadeOutTime;
        /* 0x08B0 */ public bool CreatureRideFade;
        /* 0x08B4 */ public float CreatureRideFadeInTime;
        /* 0x08B8 */ public float CreatureRideFadeOutTime;
        /* 0x08BC */ public float HMDResetFlashTime;
        /* 0x08C0 */ public int NumberOfWarpsRequiredForFreightersToSpawn;
        /* 0x08C4 */ public float SpawningDistanceBetweenPlayersAfterWarp;
        /* 0x08C8 */ public float SpawningSpaceBattleLookOffset;
        /* 0x08CC */ public float SpawningSpaceBattleLookOffsetUp;
        /* 0x08D0 */ public bool MultiplayerShareWanted;
        /* 0x08D1 */ public bool ReportAllProjectileDamage;
        /* 0x08D4 */ public int DefaultHitPoints;
        /* 0x08D8 */ public int DefaultHealthPips;
        /* 0x08DC */ public int DefaultShipHealthPips;
        /* 0x08E0 */ public int MaxHealthPips;
        /* 0x08E4 */ public bool UseLargeHealthBar;
        /* 0x08E8 */ public float DroneSpawnAccelerator;
        /* 0x08EC */ public float TrackArrowStaticTargetOffsetMultiplier;
        /* 0x08F0 */ public float WitnessSenseEnhancementTime;
        /* 0x08F4 */ public float WitnessSenseEnhancement;
        /* 0x08F8 */ public float MultiplayerMinWanteEscalationTime;
        /* 0x08FC */ public float HealthRechargeMinTimeSinceDamage;
        /* 0x0900 */ public float HealthPipRechargeRate;
        /* 0x0904 */ public float MinEnergyPercentOnRespawn;
        /* 0x0908 */ public float VehicleRaceResultsHintTime;
        /* 0x090C */ public float OtherPlayerTrackArrowRange;
        /* 0x0910 */ public float WantedLevelPlayerRange;
        /* 0x0914 */ public float WantedLevelPlayerRangeSpace;
        /* 0x0918 */ public float PlayerTransferRange;
        /* 0x091C */ public float PlayerSpaceTransferRange;
        /* 0x0920 */ public float DroneScanTimeToForget;
        /* 0x0924 */ public float GhostbusterStartLength;
        /* 0x0928 */ public float GhostbusterStart1;
        /* 0x092C */ public float GhostbusterSpeed1;
        /* 0x0930 */ public float GhostbusterFreq1;
        /* 0x0934 */ public float GhostbusterAmp1;
        /* 0x0938 */ public float GhostbusterStart2;
        /* 0x093C */ public float GhostbusterSpeed2;
        /* 0x0940 */ public float GhostbusterFreq2;
        /* 0x0944 */ public float GhostbusterAmp2;
        /* 0x0948 */ public float GhostbusterStart3;
        /* 0x094C */ public float GhostbusterSpeed3;
        /* 0x0950 */ public float GhostbusterFreq3;
        /* 0x0954 */ public float GhostbusterAmp3;
        /* 0x0958 */ public bool FireButtonReloadsWeapon;
        /* 0x0959 */ public bool ShowLowAmmoWarning;
        /* 0x095A */ public bool WeaponZoomEnabled;
        /* 0x095C */ public float WeaponZoomFOV;
        /* 0x0960 */ public float PassiveWeaponZoomFOV;
        /* 0x0964 */ public float PassiveWeaponZoomFOVThirdPerson;
        /* 0x0968 */ public float WeaponZoomRecoilMultiplier;
        /* 0x096C */ public float WeaponZoomVertRotation;
        /* 0x0970 */ public float WeaponZoomHorzRotation;
        /* 0x0974 */ public bool FrontShieldEnabled;
        /* 0x0978 */ public float FrontShieldOffsetOff;
        /* 0x097C */ public float FrontShieldOffsetOn;
        /* 0x0980 */ public float FrontShieldSpeedSlowdown;
        /* 0x0984 */ public float FrontShieldSlerpTime;
        /* 0x09   */ public float FrontShieldScaleVR;
        /* 0x09   */ public float FrontShieldUpOffsetVR;
        /* 0x09   */ public float FrontShieldOffsetOffVR;
        /* 0x09   */ public float FrontShieldOffsetOnVR;
        /* 0x09   */ public float FrontShieldSlerpTimeVR;
        /* 0x09 */ public float CombatSpawnMinWantedTime;
        /* 0x098C */ public float ExperiencePiratesDifficultyVariance;
        /* 0x0990 */ public float ExperienceHardPiratesDamageMaxOdds;
        /* 0x0994 */ public float ExperienceMediumPiratesDamageMaxOdds;
        /* 0x0998 */ public float CommunicatorSpeed;
        /* 0x099C */ public float MinDistanceToCommunicatorTarget;
        /* 0x09A0 */ public float GrenadeBounceDamping;
        /* 0x09A4 */ public float GrenadeBounceMaxSpeed;
        /* 0x09A8 */ public float GrenadeStopExplodeTime;
        /* 0x09AC */ public float CockpitEjectTestSphereRadius;
        /* 0x09B0 */ public float CockpitEjectTestSphereRange;
        /* 0x09B4 */ public float CockpitEjectSideTestRange;
        /* 0x09B8 */ public float WeaponShotgunSlowdown;
        // size: 0x2
        public enum MouseSmoothModeEnum : uint {
            Off,
            Sprung,
        }
        /* 0x09BC */ public MouseSmoothModeEnum MouseSmoothMode;
        /* 0x09C0 */ public Vector2f MouseSpringStrength;
        /* 0x09C8 */ public Vector2f MouseSpringStrengthMinDelta;
        /* 0x09D0 */ public Vector2f MouseSpringStrengthMaxDelta;
        /* 0x09D8 */ public float HazardDamageMinTime;
        /* 0x09DC */ public float EnergyDamageMinTime;
        /* 0x09E0 */ public float EnergyDischargeRateLow;
        /* 0x09E4 */ public float EnergyDischargeRateMedium;
        /* 0x09E8 */ public float EnergyDischargeRateHigh;
        /* 0x09EC */ public float EnergyDischargeRateFloatingInSpace;
        /* 0x09F0 */ public float EnergyPainRate;
        /* 0x09F4 */ public float SolarRegenFactor;
        /* 0x0A00 */ public Colour DefaultMuzzleColour;
        /* 0x0A10 */ public Colour TerrainEditorMuzzleColourSubtract;
        /* 0x0A20 */ public Colour TerrainEditorMuzzleColourAdd;
        /* 0x0A30 */ public Colour TerrainEditorMuzzleColourFlatten;
        /* 0x0A40 */ public Colour TerrainEditorMuzzleColourUndo;
        /* 0x0A50 */ public Colour DefaultMuzzleLaserColour;
        /* 0x0A60 */ public float JetpackJetAnimateOutTime;
        /* 0x0A64 */ public float JetpackJetAnimateInTime;
        /* 0x0A68 */ public float FreeJetpackRange;
        /* 0x0A6C */ public float FreeJetpackRangePrime;
        /* 0x0A70 */ public float FreeJetpackRangeNonTerrain;
        /* 0x0A74 */ public float JetpackDrainHorizontalFactor;
        /* 0x0A78 */ public float MinTimeAfterMeleeBeforeBoost;
        /* 0x0A7C */ public float MaxTimeAfterMeleeBeforeBoost;
        /* 0x0A80 */ public float MeleeBoostAirForce;
        /* 0x0A84 */ public float MeleeToAirBoostInitialImpulse;
        /* 0x0A88 */ public float MaxTimeInMeleeBoost;
        /* 0x0A8C */ public bool RocketBootsEnabled;
        /* 0x0A8D */ public bool RocketBootsUseCustomCamera;
        /* 0x0A90 */ public float RocketBootsActivationWindow;
        /* 0x0A94 */ public float RocketBootsDoubleTapTime;
        /* 0x0A98 */ public float RocketBootsImpulse;
        /* 0x0A9C */ public float RocketBootsBoostForce;
        /* 0x0AA0 */ public float RocketBootsDriftForce;
        /* 0x0AA4 */ public float RocketBootsForceStartTime;
        /* 0x0AA8 */ public float RocketBootsForceDuration;
        /* 0x0AAC */ public float RocketBootsMinDesiredHeight;
        /* 0x0AB0 */ public float RocketBootsMaxDesiredHeight;
        /* 0x0AB4 */ public float RocketBootsHeightAdjustTime;
        /* 0x0AB8 */ public float RocketBootsHeightAdjustUpStrength;
        /* 0x0ABC */ public float RocketBootsHeightAdjustDownStrength;
        /* 0x0AC0 */ public float RocketBootsJetpackMinLevel;
        /* 0x0AC4 */ public float RocketBootsBoostTankDrainSpeed;
        /* 0x0AC8 */ public float RocketBootsDriftTankDrainSpeed;
        /* 0x0ACC */ public float RocketBootsBoostOnTime;
        /* 0x0AD0 */ public float RocketBootsBoostOffTime;
        /* 0x0AD4 */ public float RocketBootsZigZagStrength;
        /* 0x0AD8 */ public float RocketBootsZigZagForceDuration;
        /* 0x0ADC */ public float RocketBootsMaxSpeed;
        /* 0x0AE0 */ public float RocketBootsDriftEndTime;
        /* 0x0AE4 */ public float RocketBootsWindUpBraking;
        /* 0x0AE8 */ public float RocketBootsDriftBraking;
        /* 0x0AEC */ public float RocketBootsDriftDownwardForce;
        /* 0x0AF0 */ public float StealthMinLevel;
        /* 0x0AF4 */ public float StealthDrainRate;
        /* 0x0AF8 */ public float StealthRechargeRate;
        /* 0x0AFC */ public float JetpackForce;
        /* 0x0B00 */ public float JetpackBrake;
        /* 0x0B04 */ public float JetpackMinLevel;
        /* 0x0B08 */ public float JetpackMaxSpeed;
        /* 0x0B0C */ public float JetpackMaxUpSpeed;
        /* 0x0B10 */ public float JetpackUpForce;
        /* 0x0B14 */ public float JetpackIgnitionForce;
        /* 0x0B18 */ public float JetpackIgnitionTime;
        /* 0x0B1C */ public float JetpackMinIgnitionTime;
        /* 0x0B20 */ public List<float> JetpackTankTimes;
        /* 0x0B30 */ public float JetpackFillRate;
        /* 0x0B34 */ public float JetpackFillRateMidair;
        /* 0x0B38 */ public float JetpackFillRateSpaceStationMultiplier;
        /* 0x0B3C */ public float JetpackFillRateFleetMultiplier;
        /* 0x0B40 */ public float JetpackFillRateNexusMultiplier;
        /* 0x0B44 */ public float JetpackUpForceDeadPlanetExtra;
        /* 0x0B48 */ public float JetpackForceDeadPlanetExtra;
        /* 0x0B4C */ public float JetpackIgnitionForceDeadPlanetExtra;
        /* 0x0B50 */ public float JoystickOrientationTrimAltOc;
        /* 0x0B54 */ public float JoystickOrientationTrimAltOp;
        /* 0x0B58 */ public float SpaceJetpackForce;
        /* 0x0B5C */ public float SpaceJetpackUpForce;
        /* 0x0B60 */ public float SpaceJetpackIgnitionForce;
        /* 0x0B64 */ public float SpaceJetpackMaxSpeed;
        /* 0x0B68 */ public float SpaceJetpackDrainRate;
        /* 0x0B6C */ public bool EnableHeadMovements;
        /* 0x0B6D */ public bool ClampPitch;
        /* 0x0B70 */ public float DamageRepairFactor;
        /* 0x0B74 */ public float AbandonedFreighterStaminaRecoveryMod;
        /* 0x0B78 */ public float AbandonedFreighterStaminaRate;
        /* 0x0B7C */ public float VRModeHazardTimeMultiplier;
        /* 0x0B80 */ public float VRStartHazardTimeMultiplier;
        /* 0x0B84 */ public float EarlyHazardTimeMultiplier;
        /* 0x0B88 */ public float StartHazardTimeMultiplier;
        /* 0x0B8C */ public float FreighterAbandonedHazardTimeMultiplier;
        /* 0x0B90 */ public float AbandonedFreighterRechargeMod;
        /* 0x0B94 */ public float NormalModeHazardTimeMultiplier;
        /* 0x0B98 */ public float NormalModeHazardDamageRateMultiplier;
        /* 0x0B9C */ public float NormalModeHazardDamageWoundRateMultiplier;
        /* 0x0BA0 */ public float NormalModeHazardRechargeUnderground;
        /* 0x0BA4 */ public float HardModeHazardTimeMultiplier;
        /* 0x0BA8 */ public float HardModeHazardDamageRateMultiplier;
        /* 0x0BAC */ public float HardModeHazardDamageWoundRateMultiplier;
        /* 0x0BB0 */ public float HardModeHazardRechargeUnderground;
        /* 0x0BB4 */ public float VehicleHazardDampingModifier;
        /* 0x0BB8 */ public float FreighterProbeScanTime;
        /* 0x0BBC */ public int MaxNumDestroyEffects;
        /* 0x0BC0 */ public int MinNumDestroyEffects;
        /* 0x0BC4 */ public float ProjectileEndTime;
        /* 0x0BC8 */ public float ExplosionTimePerEffect;
        /* 0x0BCC */ public float ExplosionTimeVariance;
        /* 0x0BD0 */ public float ExplosionScaleVariance;
        /* 0x0BD4 */ public float ExplosionBoundingInset;
        /* 0x0BD8 */ public float ExplosionBoundingInsetRange;
        /* 0x0BDC */ public float DestroyEffectFinalDelay;
        /* 0x0BE0 */ public float ShipPriceExp2;
        /* 0x0BE4 */ public float WeaponPriceExp2;
        /* 0x0BE8 */ public float FreighterPriceExp2;
        /* 0x0BEC */ public float ShipCoolFactor;
        /* 0x0BF0 */ public float WeaponCoolFactor;
        /* 0x0BF4 */ public float FreighterCoolFactor;
        /* 0x0BF8 */ public bool MouseCrosshairVisible;
        /* 0x0BFC */ public float MouseMaxLengthOld;
        /* 0x0C00 */ public float MouseDeadZoneOld;
        /* 0x0C04 */ public float MouseMaxLength;
        /* 0x0C08 */ public float MouseDeadZone;
        /* 0x0C0C */ public float MouseMaxLengthVehicle;
        /* 0x0C10 */ public float MouseDeadZoneVehicle;
        /* 0x0C14 */ public float MouseAimZone;
        /* 0x0C18 */ public float MouseCrosshairMaxAlpha;
        /* 0x0C1C */ public float MouseCrosshairAlphaFade;
        /* 0x0C20 */ public float MouseCrosshairAlphaFadeSpeed;
        /* 0x0C24 */ public float MouseCrosshairLineAlpha;
        /* 0x0C28 */ public float MouseCrosshairLineWidth;
        /* 0x0C2C */ public float MouseCrosshairShipStrength;
        /* 0x0C30 */ public float MouseCrosshairMultiplier;
        /* 0x0C34 */ public float MouseCrosshairShipStrengthOld;
        /* 0x0C38 */ public float MouseFlightCorrectionMultiplier;
        /* 0x0C3C */ public float MouseFlightCorrectionBrakeMultiplier;
        /* 0x0C40 */ public TkCurveType MouseFlightCurve;
        /* 0x0C44 */ public float MaximumCrouchVR;
        /* 0x0C48 */ public float MaximumHeadHeightIncreaseVR;
        /* 0x0C4C */ public float MaximumHorizontalOffsetVR;
        /* 0x0C50 */ public float CrouchHeightToDisableLegBlendingVR;
        /* 0x0C54 */ public bool UseEnergy;
        /* 0x0C55 */ public bool UseHazardProtection;
        /* 0x0C56 */ public bool HideHazardPanel;
        /* 0x0C57 */ public bool InventoryDamage;
        /* 0x0C58 */ public bool NeverPreyedOn;
        /* 0x0C59 */ public bool PermanantFire;
        /* 0x0C5A */ public bool PermanantAltFire;
        /* 0x0C5B */ public bool LuckyWithTech;
        /* 0x0C5C */ public int ChanceHighGradeIllegal;
        /* 0x0C60 */ public int BulletCostReducer;
        /* 0x0C64 */ public int BulletClipMultiplier;
        /* 0x0C68 */ public float LootForceMultiplier;
        /* 0x0C6C */ public float WoundTimeMinimum;
        /* 0x0C70 */ public float WoundDamageLimit;
        /* 0x0C74 */ public float WoundDamageLimitShip;
        /* 0x0C78 */ public float WoundDamageDecayTime;
        /* 0x0C7C */ public float ResourceBlobFinalScaleDistance;
        /* 0x0C80 */ public float LaserPlayerOffset;
        /* 0x0C84 */ public float WalkerAlertRange;
        /* 0x0C88 */ public float WalkerSightRange;
        /* 0x0C8C */ public float WalkerSightAngle;
        /* 0x0C90 */ public float CombatEscalateTime;
        /* 0x0C94 */ public float CombatEscapeRadius;
        /* 0x0C98 */ public float CombatEscapeTime;
        /* 0x0C9C */ public bool UpgradeExosuitWithProduct;
        /* 0x0CA0 */ public NMSString0x10 ExosuitUpgradeProduct;
        /* 0x0CB0 */ public int SuitInventoryStartSeed;
        /* 0x0CB4 */ public int MaxNumShipsAttackingPlayer;
        /* 0x0CB8 */ public float ObjectScanTime;
        /* 0x0CBC */ public float DroneProbeScanTime;
        /* 0x0CC0 */ public int PirateHailPercent;
        /* 0x0CC4 */ public float PirateBountyInitTime;
        /* 0x0CC8 */ public float PirateBountyMaxDistance;
        /* 0x0CCC */ public float PirateBountyTimeoutTime;
        /* 0x0CD0 */ public float PirateProbeInitTime;
        /* 0x0CD4 */ public float PirateProbeAttackWaitTime;
        /* 0x0CD8 */ public float PirateProbeAttackWarnTime;
        /* 0x0CDC */ public float PirateProbeScanTime;
        /* 0x0CE0 */ public float PirateProbeScanTotalTime;
        /* 0x0CE4 */ public float PirateProbeHailPause;
        /* 0x0CE8 */ public float PirateFlybyAttackDistancePastPlayer;
        /* 0x0CEC */ public float PirateFlybyAttackProbability;
        /* 0x0CF0 */ public float PirateFlybyAttackMinTime;
        /* 0x0CF4 */ public float PirateFlybyAttackMaxTime;
        /* 0x0CF8 */ public float PirateRaidMinTime;
        /* 0x0CFC */ public float PirateRaidMaxTime;
        /* 0x0D00 */ public float PirateBattleMarkerRange;
        /* 0x0D04 */ public float PirateBattleWarnTime;
        /* 0x0D08 */ public float PirateBattleMarkerTime;
        /* 0x0D0C */ public float PirateBattleMaxTime;
        /* 0x0D10 */ public NMSString0x20A TraderHailReceiveOSDLoc;
        /* 0x0D30 */ public NMSString0x20A TraderHailRefusedOSDLoc;
        /* 0x0D50 */ public float TraderHailTime;
        /* 0x0D54 */ public float TraderApproachTime;
        /* 0x0D58 */ public float TraderHailDistance;
        /* 0x0D5C */ public float TraderApproachDistance;
        /* 0x0D60 */ public float TraderSpamTimeWait;
        /* 0x0D64 */ public float TraderStayCloseLockOffset;
        /* 0x0D68 */ public float TraderStayCloseLockSin1Coeff;
        /* 0x0D6C */ public float TraderStayCloseLockSin1Offset;
        /* 0x0D70 */ public float TraderStayCloseLockSin2Coeff;
        /* 0x0D74 */ public float TraderStayCloseLockSin2Offset;
        /* 0x0D78 */ public float TraderStayCloseLockSinsAdd;
        /* 0x0D7C */ public float TraderStayCloseLockSpread;
        /* 0x0D80 */ public float TraderStayCloseLockSpreadAdd;
        /* 0x0D84 */ public float TraderStayCloseLockSpreadTime;
        /* 0x0D90 */ public Vector3f TraderStayCloseLockBaseOffset;
        /* 0x0DA0 */ public float TraderHealthFightThreshold;
        /* 0x0DA4 */ public int TraderCommunicationBanMinTime;
        /* 0x0DA8 */ public int TraderCommunicationBanMaxTime;
        /* 0x0DAC */ public float FrigateFlybyMarkerAlwaysShowDistance;
        /* 0x0DB0 */ public float FrigateFlybyMarkerAlwaysHideDistance;
        /* 0x0DB4 */ public float PulseEncounterMinTimeInPulse;
        /* 0x0DB8 */ public float PulseEncounterProbeTime;
        /* 0x0DBC */ public float PulseEncounterProbeTimeRare;
        /* 0x0DC0 */ public float PulseEncounterMarkerShowAngle;
        /* 0x0DC4 */ public float PulseEncounterMarkerAlwaysShowDistance;
        /* 0x0DC8 */ public float PulseEncounterMarkerAlwaysHideDistance;
        /* 0x0DCC */ public float PulseEncounterSpawnEffectDistance;
        /* 0x0DD0 */ public float PulseEncounterSpawnEffectTime;
        /* 0x0DD8 */ public NMSString0x10 PulseEncounterSpaceEggID;
        /* 0x0DE8 */ public float LaserMiningDamageMultiplier;
        /* 0x0DEC */ public float ShieldRechargeMinTimeSinceDamage;
        /* 0x0DF0 */ public float ShieldRechargeRate;
        /* 0x0DF4 */ public float MoveStickHighRangeLimit;
        /* 0x0DF8 */ public float WitnessAIDamageDistance;
        /* 0x0DFC */ public float WitnessAIDamageAngle;
        /* 0x0E00 */ public float DeathDamageDrainChargeFactor;
        /* 0x0E04 */ public int DeathDamageTechBrokenPercent;
        /* 0x0E08 */ public float MaxProjectileRadiusMultiplier;
        /* 0x0E0C */ public float HardLandPainTime;
        /* 0x0E10 */ public int GunBaseClipSize;
        /* 0x0E14 */ public int GrenadeBaseClipSize;
        /* 0x0E18 */ public float MeleeCooldown;
        /* 0x0E1C */ public float ChargeMeleeCooldown;
        /* 0x0E20 */ public float MeleeDistance;
        /* 0x0E24 */ public float MeleeDistance3P;
        /* 0x0E28 */ public float MeleeRadius;
        /* 0x0E2C */ public float MeleeHitTime;
        /* 0x0E30 */ public float MeleeSpeedBoost;
        /* 0x0E34 */ public float MeleeSpeedDamageBoost;
        /* 0x0E38 */ public float MeleeSpeedBoostRangeMultiplier;
        /* 0x0E3C */ public float MeleeStaminaDrain;
        /* 0x0E40 */ public float MeleeCooldownAlt;
        /* 0x0E44 */ public float MeleePosDelta;
        /* 0x0E48 */ public float MeleeDamageScale;
        /* 0x0E4C */ public float MeleeRadiusAlt;
        /* 0x0E50 */ public float MeleeDistanceAlt;
        /* 0x0E60 */ public GcScanEffectData MeleeHitEffect;
        /* 0x0EB0 */ public float TemperatureDisplaySampleTime;
        /* 0x0EC0 */ public Colour StarFieldColour;
        /* 0x0ED0 */ public float StarFieldRadius;
        /* 0x0ED4 */ public float StarFieldDensity;
        /* 0x0ED8 */ public float StarFieldStarSize;
        /* 0x0EDC */ public float SpeedLinesSpeedMin;
        /* 0x0EE0 */ public float SpeedLinesSpeedMax;
        /* 0x0EE4 */ public float SpeedLinesLength;
        /* 0x0EE8 */ public float SpeedLinesTotalLength;
        /* 0x0EEC */ public float SpeedLinesWidthMin;
        /* 0x0EF0 */ public float SpeedLinesWidthMax;
        /* 0x0EF4 */ public float SpeedLinesRadiusStartMin;
        /* 0x0EF8 */ public float SpeedLinesRadiusStartMax;
        /* 0x0EFC */ public float SpeedLinesRadiusIncrement;
        /* 0x0F00 */ public float SpeedLinesStartFade;
        /* 0x0F04 */ public float SpeedLinesMinAlpha;
        /* 0x0F08 */ public float SpeedLinesMaxAlpha;
        /* 0x0F0C */ public float SpeedLinesOffset;
        /* 0x0F10 */ public float SleepFadeTime;
        /* 0x0F14 */ public float StaminaRate;
        /* 0x0F18 */ public float StaminaRecoveryRate;
        /* 0x0F1C */ public float StaminaRecoveredFactor;
        /* 0x0F20 */ public float ScanLabelTime;
        /* 0x0F24 */ public float ScanWobbleFreq;
        /* 0x0F28 */ public float ScanWobbleAmp;
        /* 0x0F2C */ public float ScanWobbleFreq2;
        /* 0x0F30 */ public float ScanWobbleAmp2;
        /* 0x0F34 */ public float ScanRotate;
        /* 0x0F38 */ public float ScanRotateDist;
        /* 0x0F3C */ public float ScanRotateWobbleAmp;
        /* 0x0F40 */ public float ScanFadeInTime;
        /* 0x0F44 */ public float ScanFadeOutTime;
        /* 0x0F48 */ public float ScanBeamWidth;
        /* 0x0F4C */ public float ScanRotateBeamWdith;
        /* 0x0F50 */ public float ScanBeamMainWidth;
        /* 0x0F54 */ public float WantedDroneEventRadius;
        /* 0x0F58 */ public float WantedMinSpaceTime;
        /* 0x0F5C */ public float WantedMinPlanetTime;
        /* 0x0F60 */ public float WantedLevelDelay;
        /* 0x0F64 */ public float WantedWitnessTimer;
        /* 0x0F68 */ public float WantedWitnessFuzzyTime;
        /* 0x0F6C */ public float WantedMinorCrimeAmount;
        /* 0x0F70 */ public float WantedTimeoutAggressive;
        /* 0x0F78 */ public List<float> WantedTimeout;
        /* 0x0F88 */ public List<float> WantedEscalateTime;
        /* 0x0F98 */ public List<float> WantedExtremeEscalateTime;
        // size: 0x3
        public enum ControlModesEnum : uint {
            Normal,
            FlightStick,
            Inverted,
        }
        /* 0x0FA8 */ public ControlModesEnum ControlModes;
        /* 0x0FAC */ public float PlayerViewTargetRange;
        /* 0x0FB0 */ public float InteractionScanRange;
        /* 0x0FB4 */ public float InteractionButtonRange;
        /* 0x0FB8 */ public float InteractionButtonRangeVehicle;
        /* 0x0FBC */ public float InteractionFocusIncrease;
        /* 0x0FC0 */ public float InteractionFocusIncreaseCreature;
        /* 0x0FC4 */ public float InteractionFocusIncreasePet;
        /* 0x0FC8 */ public float InteractionFocusTime;
        /* 0x0FCC */ public float InteractionFocusTimeCreature;
        /* 0x0FD0 */ public float InteractionFocusTimePet;
        /* 0x0FD4 */ public float InteractionSubstanceRange;
        /* 0x0FD8 */ public float HeatShieldTime;
        /* 0x0FDC */ public float LaserShakeMin;
        /* 0x0FE0 */ public float LaserShakeMax;
        /* 0x0FE4 */ public float GunRecoil;
        /* 0x0FE8 */ public float LaserRecoil;
        /* 0x0FEC */ public float BeamRecoil;
        /* 0x0FF0 */ public float GrenadeRecoil;
        /* 0x0FF4 */ public float GunRecoilSpring;
        /* 0x0FF8 */ public float BlastRecoilSpring;
        /* 0x0FFC */ public float RailRecoilSpring;
        /* 0x1000 */ public float PulseRecoilSpring;
        /* 0x1004 */ public float CannonRecoilSpring;
        /* 0x1008 */ public float GunRecoilSettleSpring;
        /* 0x100C */ public float ThirdPersonRecoilMultiplier;
        /* 0x1010 */ public float GunRecoilMin;
        /* 0x1014 */ public float GunRecoilMax;
        /* 0x1018 */ public bool BoltcasterHasTracer;
        /* 0x101C */ public float ProjectileDamageFalloff;
        /* 0x1020 */ public float ShotgunDispersion;
        /* 0x1024 */ public float FlamethrowerDispersion;
        /* 0x1028 */ public float MuzzleFlashMulThirdPerson;
        /* 0x102C */ public GcResourceCollectEffect TerrainResourceCollect;
        /* 0x1060 */ public GcResourceCollectEffect TerrainResourceMiniCollect;
        /* 0x1094 */ public GcResourceCollectEffect TerrainResourceMeleeCollect;
        /* 0x10C8 */ public GcResourceCollectEffect CrystalResourceCollect;
        /* 0x10FC */ public GcResourceCollectEffect ShardResourceCollect;
        /* 0x1130 */ public GcBoidData MissileSwarm;
        /* 0x115C */ public GcPlayerStickData StickData;
        /* 0x1178 */ public bool AutoAim;
        /* 0x117C */ public float AutoAimMaxAccelFactor;
        /* 0x1180 */ public float AutoAimFixedInterceptSpeed;
        /* 0x1184 */ public float AutoAimTimeOut;
        /* 0x1188 */ public float AutoAimMaxAngle;
        /* 0x118C */ public float AutoAimMinScreenDistance;
        /* 0x1190 */ public float AutoAimRadiusExtra;
        /* 0x1194 */ public float AutoAimStickyRailgun;
        /* 0x1198 */ public float AutoAimStickyMin;
        /* 0x119C */ public float AutoAimStickyMax;
        /* 0x11A0 */ public TkCurveType AutoAimDotCurve;
        /* 0x11A4 */ public TkCurveType AutoAimCentreOffsetCurve;
        /* 0x11A8 */ public float AimDistanceShip;
        /* 0x11AC */ public float AimSpeed;
        /* 0x11B0 */ public float AimWeightAdd;
        /* 0x11B4 */ public float AimMinWeight;
        /* 0x11B8 */ public float AimDecay;
        /* 0x11BC */ public float AimOffset;
        /* 0x11C0 */ public float AimShootableTargetAngle;
        /* 0x11C4 */ public float AimDisperseTime;
        /* 0x11C8 */ public float AimDisperseMinTime;
        /* 0x11CC */ public float AimDisperseCooldownTime;
        /* 0x11D0 */ public float AimDisperseCooldownFactor;
        /* 0x11D4 */ public TkCurveType AimDisperseCurve;
        /* 0x11D8 */ public float CrosshairTime;
        /* 0x11DC */ public float BeaconActivateRange;
        /* 0x11E0 */ public int ExperienceMaxCivilianShipSpawnsOnPlanet;
        /* 0x11E4 */ public int ExperienceMaxCivilianShipSpawnsInSpace;
        /* 0x11E8 */ public float ExperiencePirateFreighterAttackRange;
        /* 0x11EC */ public float ExperienceWalkerSize;
        /* 0x11F0 */ public float ExperienceInterestingPoliceDistance;
        /* 0x11F4 */ public float ExperienceInterestingShipDistance;
        /* 0x11F8 */ public float ExperienceInterestingFreighterDistance;
        /* 0x11FC */ public float ExperienceInterestingDroneDistance;
        /* 0x1200 */ public float ExperienceShipTimeMin;
        /* 0x1204 */ public float ExperienceShipTimeMax;
        /* 0x1208 */ public int ExperiencePirateCloseAttackPercentage;
        /* 0x120C */ public float ExperiencePirateTimeMin;
        /* 0x1210 */ public float ExperiencePirateTimeMax;
        /* 0x1214 */ public float ExperienceDroneTimeMin;
        /* 0x1218 */ public float ExperienceDroneTimeMax;
        /* 0x121C */ public float ExperienceFlybyScareRadius;
        /* 0x1220 */ public float ExperienceFlybyScareTime;
        /* 0x1224 */ public Vector2f ExperienceFlybyStartAngle;
        /* 0x122C */ public float ExperienceAlertRange;
        /* 0x1230 */ public float ExperienceAlertSightRange;
        /* 0x1234 */ public float ExperienceAlertSightAngle;
        /* 0x1238 */ public float ExperienceDroneSpawnOffset;
        /* 0x123C */ public float ExperienceDroneSpawnAngle;
        /* 0x1240 */ public float ExperienceMessageBroadcastNearbyDistance;
        /* 0x1244 */ public float ExperienceDefeatLevel5SentinelsRewardDelay;
        /* 0x1248 */ public NMSString0x10 ExperienceDefeatLevel5SentinelsReward;
        /* 0x1258 */ public NMSString0x10 ExperienceDefeatLevel5SentinelsNearHiveReward;
        /* 0x1268 */ public float ExperienceDefeatLevel5SentinelsDisableWantedTime;
        /* 0x126C */ public float WantedEnemyAttackAmount;
        /* 0x1270 */ public NMSString0x80 Gun;
        /* 0x12F0 */ public float StickDeadZoneMin;
        /* 0x12F4 */ public float StickDeadZoneMax;
        /* 0x12F8 */ public TkCurveType StickCurve;
        /* 0x12FC */ public float AutoLandRange;
        /* 0x1300 */ public float AutoLandTime;
        /* 0x1304 */ public float LabelSpringTime;
        /* 0x1308 */ public float LabelOffset;
        /* 0x130C */ public float AtmosphereEffectTime;
        /* 0x1310 */ public float AtmosphereEffectOffset;
        /* 0x1318 */ public List<GcCreatureAlertData> AlertTable;
        /* 0x1328 */ public float PainFlickerAmount;
        /* 0x132C */ public float PainColourSeperateAmount;
        /* 0x1330 */ public float PainTime;
        /* 0x1334 */ public GcProjectileLineData PlayerBullet;
        /* 0x135C */ public GcProjectileLineData RobotBullet;
        /* 0x1384 */ public GcProjectileLineData ShipBullet;
        /* 0x13AC */ public float ExplodeShakeMaxDist;
        /* 0x13B0 */ public float ExplodeShakeMaxDistSpace;
        /* 0x13B4 */ public float ExplodeShakeStrength;
        /* 0x13B8 */ public float FlashSize;
        /* 0x13BC */ public float FlashPosX;
        /* 0x13C0 */ public float FlashPosY;
        /* 0x13C4 */ public float FlashPosZ;
        /* 0x13C8 */ public float FlashSpeed;
        /* 0x13CC */ public float FlashPulse;
        /* 0x13D0 */ public float FlashGrow;
        /* 0x13D4 */ public float GunRightOffset;
        /* 0x13D8 */ public float GunUpOffset;
        /* 0x13DC */ public float LaserBeamMineRate;
        /* 0x13E0 */ public float LaserBeamCore;
        /* 0x13E4 */ public float LaserBeamFlickerAmp;
        /* 0x13E8 */ public float LaserBeamFlickerFreq;
        /* 0x13EC */ public float LaserEndOffset;
        /* 0x13F0 */ public float GrenadeTerrainDeformRadius;
        /* 0x13F4 */ public float LaserBeamTerrainDeformRadius;
        /* 0x13F8 */ public float LaserBeamTerrainDeformVariance;
        /* 0x13FC */ public float LaserBeamAmmoUseTime;
        /* 0x1400 */ public float ReloadButtonHoldTimeToHolster;
        /* 0x1404 */ public float WeaponChangeModeTime;
        /* 0x1410 */ public Vector3f WeaponBarrelOffset;
        /* 0x1420 */ public Vector3f WeaponOffset;
        /* 0x1430 */ public float WeaponLowerDelay;
        /* 0x1434 */ public float WeaponHolsterDelay;
        /* 0x1438 */ public float WeaponLag;
        /* 0x143C */ public float WeaponBobFactorWalkDeadZone;
        /* 0x1440 */ public float WeaponBobFactorWalk;
        /* 0x1444 */ public float WeaponBobFactorRun;
        /* 0x1448 */ public float WeaponBobBlendTime;
        /* 0x144C */ public TkCurveType WeaponBobBlendCurve;
        /* 0x1450 */ public float WeaponCannonMinWeaponTimer;
        /* 0x1454 */ public float WeaponCannonMinUnchargedShotThreshold;
        /* 0x1458 */ public float WeaponCannonMinUnchargedShotTime;
        /* 0x145C */ public float WeaponGrenadeTime;
        /* 0x1460 */ public float WeaponGunTime;
        /* 0x1464 */ public float WeaponRailFireTime;
        /* 0x1468 */ public float WeaponRailRechargeTime;
        /* 0x146C */ public int MaxBuildHeight;
        /* 0x1470 */ public float SpaceMaxGravityDist;
        /* 0x1474 */ public float SpaceMinGravityDist;
        /* 0x1478 */ public float BulletBend;
        /* 0x147C */ public float ShootSizeMinZ;
        /* 0x1480 */ public float ShootSizeMaxZ;
        /* 0x1484 */ public float ShootSizeMinXY;
        /* 0x1488 */ public float ShootSizeMaxXY;
        /* 0x148C */ public float ShootSizeTime;
        /* 0x1490 */ public float ShootSizeBase;
        /* 0x1494 */ public float ShootOffset;
        /* 0x1498 */ public float ShootPrepTime;
        /* 0x149C */ public float GrenadeCarveRadius;
        /* 0x14A0 */ public float ChargeTime;
        /* 0x14A4 */ public float EnergyBallSpeed;
        /* 0x14A8 */ public float ChargedEnergyBallSpeed;
        /* 0x14AC */ public float LookRayRadius;
        /* 0x14B0 */ public float PickRange;
        /* 0x14B4 */ public float DamageRateWhenUnderNoGravity;
        /* 0x14B8 */ public float TakeDamageImpulse;
        /* 0x14BC */ public float HardLandTime;
        /* 0x14C0 */ public float HardLandMin;
        /* 0x14C4 */ public float HardLandMax;
        /* 0x14C8 */ public float MeleeRange;
        /* 0x14CC */ public float MeleeTime;
        /* 0x14D0 */ public float MeleeForcePush;
        /* 0x14D4 */ public float MeleeOffset;
        /* 0x14D8 */ public float PushForceAirFactor;
        /* 0x14DC */ public int HUDHeightPosX;
        /* 0x14E0 */ public int HUDHeightPosY;
        /* 0x14E4 */ public float TargetDistance;
        /* 0x14E8 */ public float TargetRadius;
        /* 0x14EC */ public float HoldForce;
        /* 0x14F0 */ public float HoldTime;
        /* 0x14F4 */ public float HoldActionDistX;
        /* 0x14F8 */ public float HoldActionDistY;
        /* 0x14FC */ public float HoldActionDistZ;
        /* 0x1500 */ public float HoldDistX;
        /* 0x1504 */ public float HoldDistY;
        /* 0x1508 */ public float HoldDistZ;
        /* 0x150C */ public float HoldMaxForce;
        /* 0x1510 */ public float HoldRotate;
        /* 0x1514 */ public float BalanceStrength;
        /* 0x1518 */ public float BalanceSpeed;
        /* 0x151C */ public float ExertionSmoothTime;
        /* 0x1520 */ public float ExertionFromPainTime;
        /* 0x1524 */ public float AnimWalkSpeed;
        /* 0x1528 */ public float AnimRunSpeed;
        /* 0x152C */ public float AnimWalkToRunSpeed;
        /* 0x1530 */ public float AnimWalkBlendPoint;
        /* 0x1534 */ public float AnimRunBlendPoint;
        /* 0x1538 */ public float MaxSlopeAngle;
        /* 0x153C */ public float SlopeSlidingSpeed;
        /* 0x1540 */ public float SlopeSlideBrake;
        /* 0x1544 */ public float MinSlideTime;
        /* 0x1548 */ public float MaxWalkableSlopeAngle;
        /* 0x154C */ public float MinSpidermanSlopeAngle;
        /* 0x1550 */ public float MinTimeToHoldSpidermanPose;
        /* 0x1554 */ public float MaxSpidermanSlopeAngle;
        /* 0x1558 */ public float MaxClingableSlopeAngle;
        /* 0x155C */ public float MinimumPushOffForceToSlide;
        /* 0x1560 */ public float FreeJetpackSlopeAngle;
        /* 0x1564 */ public float FreeJetpackSlopeAnglePrime;
        /* 0x1568 */ public float FullClipReloadSpeedMultiplier;
        /* 0x156C */ public float ReloadTapButtonSpeedIncrease;
        /* 0x1570 */ public NMSString0x10 FootDustEffect;
        /* 0x1580 */ public float FootDustScale;
        /* 0x1584 */ public float ClingBrakeMultiplier;
        /* 0x1588 */ public float ClingAngleThreshold;
        /* 0x158C */ public float ClingSpeedThreshold;
        /* 0x1590 */ public float ClimbableStickinessAngle;
        /* 0x1594 */ public float MinUpAmount;
        /* 0x1598 */ public float FootOffset;
        /* 0x159C */ public float MaxFallSpeed;
        /* 0x15A0 */ public float PushForceDecay;
        /* 0x15A4 */ public float LeanFwdMaxAngle;
        /* 0x15A8 */ public float LeanBackMaxAngle;
        /* 0x15AC */ public float LeanLeftMaxAngle;
        /* 0x15B0 */ public float LeanRightMaxAngle;
        /* 0x15B4 */ public float LeanAmount;
        /* 0x15B8 */ public float LeanAmountFwd;
        /* 0x15BC */ public float HelmetLag;
        /* 0x15C0 */ public float HelmetMaxLag;
        /* 0x15C4 */ public float HelmetBob;
        /* 0x15C8 */ public float JetpackHelmetBob;
        /* 0x15CC */ public float ShipCameraLag;
        /* 0x15D0 */ public float MaxResource;
        /* 0x15D4 */ public int ShieldMaximum;
        /* 0x15D8 */ public float ShieldRestoreSpeed;
        /* 0x15DC */ public float ShieldRestoreDelay;
        /* 0x15E0 */ public float TimeHoldDownAccelerateToLaunchFromOutpost;
        /* 0x15E4 */ public float DeathScreenFadeInThirdPerson;
        /* 0x15E8 */ public float DeathScreenFadeInUnderwaterThirdPerson;
        /* 0x15EC */ public float DeathScreenFadeInTime;
        /* 0x15F0 */ public float DeathScreenShipFadeInTime;
        /* 0x15F4 */ public float DeathScreenPauseTime;
        /* 0x15F8 */ public float DeathScreenMaxRegenWaitTime;
        /* 0x15FC */ public float DeathScreenMinRegenWaitTime;
        /* 0x1600 */ public float DeathScreenFadeOutTime;
        /* 0x1608 */ public ulong AutoSaveMaxTime;
        /* 0x1610 */ public ulong AutoSaveMinTime;
        /* 0x1618 */ public float AutoSaveRangeOnFoot;
        /* 0x161C */ public float AutoSaveRangeInVehicle;
        /* 0x1620 */ public float AutoSaveRangeInSpace;
        /* 0x1624 */ public GcPlayerStickData LookStickData;
        /* 0x1640 */ public GcPlayerStickData AmbientModeLookStickData;
        /* 0x165C */ public int LowHealthEffectPips;
        /* 0x1660 */ public int LowHealthEffectShield;
        /* 0x1664 */ public float CriticalHitTime;
        /* 0x1668 */ public float CriticalHitDesatTime;
        /* 0x166C */ public float CriticalHitDesatFreq;
        /* 0x1670 */ public List<GcCameraSpawnSetupData> FirstSpawnDataTable;
        /* 0x1680 */ public GcInventoryValueData ShipValueData;
        /* 0x169C */ public GcInventoryValueData WeaponValueData;
        /* 0x16B8 */ public GcInventoryValueData FreighterValueData;
        /* 0x16D8 */ public List<float> TechRarityData;
        /* 0x16E8 */ public List<float> TechLearningProbabilities;
        /* 0x16F8 */ public int NumTechShopSlots;
        /* 0x16FC */ public float GrassPushDistance;
        /* 0x1700 */ public float GrassPushDistanceFeet;
        /* 0x1710 */ public GcCameraAnomalySetupData AnomalyBlachHoleSpawnData;
        /* 0x1750 */ public GcCameraAnomalySetupData AnomalyAtlasStationSpawnData;
        /* 0x1790 */ public GcCameraAnomalySetupData AnomalyMiniStationSpawnData;
        /* 0x17D0 */ public GcJourneyMedalTiers MedalTiers;
        /* 0x17E0 */ public int LowGuildRank;
        /* 0x17E4 */ public int MedGuildRank;
        /* 0x17E8 */ public int HighGuildRank;
        /* 0x17EC */ public int BestGuildRank;
        /* 0x17F0 */ public float LaserWeaponRange;
        /* 0x17F4 */ public float LaserShipRange;
        /* 0x17F8 */ public float TerrainLaserRange;
        /* 0x17FC */ public float VehicleLaserRange;
        /* 0x1800 */ public GcPlayerCommunicatorMessage PoliceScanHailMessage;
        /* 0x1850 */ public GcPlayerCommunicatorMessage PirateHailMessage;
        /* 0x18A0 */ public GcShipDialogue TraderHailMessages;
        [NMS(Size = 0x4)]
        /* 0x1B08 */ public GcShipDialogueTreeEnum[] TraderHailReceiveRegular;
        [NMS(Size = 0x2)]
        /* 0x1B18 */ public GcShipDialogueTreeEnum[] TraderHailReceiveFight;
        [NMS(Size = 0x2)]
        /* 0x1B20 */ public GcShipDialogueTreeEnum[] TraderHailSend;
    }
}
