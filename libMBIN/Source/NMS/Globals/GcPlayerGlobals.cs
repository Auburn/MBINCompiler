using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0x1B10, GUID = 0xFE408F6E87C028D9)]
    public class GcPlayerGlobals : NMSTemplate
    {
        /* 0x0 */ public float FoodValueThresholdBest;
		/* 0x4 */ public float FoodValueThresholdGood;
		/* 0x8 */ public float FoodValueThresholdAverage;
		/* 0xC */ public float FoodValueThresholdBad;
		/* 0x10 */ public float FoodValueThresholdWorst;
		/* 0x14 */ public float TeleportAppearEffectSpeed;
		/* 0x18 */ public float TeleportDisappearEffectSpeed;
		/* 0x1C */ public bool RecenterViewWhenEnteringShip;
		/* 0x1D */ public bool UseInitialFacingForMoveDirection;
		/* 0x1E */ public bool EmulateNoHandsForHandScreens;
		/* 0x20 */ public float BinocularAimOffset;
		/* 0x24 */ public float BinocularScopeScale;
		/* 0x28 */ public float MaxArmExtension;
		/* 0x2C */ public float MinArmExtension;
		/* 0x30 */ public float SummonArcRange;
		/* 0x34 */ public float InteractionAimOffset;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x38 */ public byte[] Padding38;
		/* 0x40 */ public GcProjectorOffsetData QuickMenuLauncherTransforms;
		/* 0xB0 */ public GcProjectorOffsetData WeaponMenuLauncherTransforms;
		/* 0x120 */ public GcInWorldUIScreenData QuickMenuOffset;
		/* 0x150 */ public GcInWorldUIScreenData InventoryOffset;
		/* 0x180 */ public GcInWorldUIScreenData FrontendOffset;
		/* 0x1B0 */ public GcInWorldUIScreenData FrontendMessagesOffset;
		/* 0x1E0 */ public GcInWorldUIScreenData DefaultLeftHandTransform;
		/* 0x210 */ public GcInWorldUIScreenData DefaultLeftHandTransformVehicle;
		/* 0x240 */ public GcInWorldUIScreenData BinocularInfoScreenOffset;
		/* 0x270 */ public GcInWorldUIScreenData BinocularInfoScreenOffsetGun;
		/* 0x2A0 */ public GcInWorldUIScreenData FrontendPhotoModeVROffset;
		/* 0x2D0 */ public GcInWorldUIScreenData FrontendBaseScreenshotVROffset;
		/* 0x300 */ public float BinocularRayThicknessVR;
		/* 0x304 */ public float BincoularRayThickness;
		/* 0x310 */ public Vector3f BinocularScopeOffset;
		/* 0x320 */ public float TeleportMaxTravelDistance;
		/* 0x324 */ public float TeleportMaxTravelDistanceVertical;
		/* 0x328 */ public float TeleportChargeMinDistance;
		/* 0x32C */ public float TeleportChargeMaxDistance;
		/* 0x330 */ public float TeleportChargeMoveSpeed;
		/* 0x334 */ public float TeleportChargeMinTime;
		/* 0x338 */ public float TeleportChargeFadeInTime;
		/* 0x33C */ public float TeleportBallFadeMinDistance;
		/* 0x340 */ public float TeleportBallFadeRange;
		/* 0x344 */ public float TeleportBallDistanceFadeAlpha;
		/* 0x348 */ public float TeleportBallRadius;
		/* 0x34C */ public float TeleportTravelSurfaceAngle;
		/* 0x350 */ public float TeleportBallCompletionFactorFadeout;
		/* 0x354 */ public float FingerTipOffset;
		/* 0x358 */ public float FingerButtonClickSize;
		/* 0x35C */ public float FingerButtonRadiusOffset;
		/* 0x360 */ public float FingerButtonClickTime;
		/* 0x364 */ public float FingerButtonQuickMenuOffset;
		/* 0x368 */ public Vector2f FingerButtonQuickMenuButtonSize;
		/* 0x370 */ public float HandInteractionLightIntensity;
		/* 0x374 */ public float HandInteractionLightIntensityMax;
		/* 0x378 */ public float HandInteractionFresnel;
		/* 0x37C */ public float HandInteractionFresnelMax;
		/* 0x380 */ public float HandInteractionLightOffset;
		/* 0x384 */ public float HandInteractionLightOffsetAt;
		/* 0x388 */ public float HandInteractionLightTime;
		/* 0x38C */ public float HandScreenLookActiveAngle;
		/* 0x390 */ public float HandScreenMinAngle;
		/* 0x394 */ public float HandScreenMinAngleWithPoint;
		/* 0x398 */ public float HandScreenAngleRange;
		/* 0x39C */ public float HandScreenActivationRange;
		/* 0x3A0 */ public float HandScreenActivationAngle;
		/* 0x3A4 */ public float HandScreenActivationAngleOffset;
		/* 0x3A8 */ public float HandScreenActivationAngleDown;
		/* 0x3AC */ public float HandScreenPenetration;
		/* 0x3B0 */ public float HandScreenRestingTurnAngle;
		/* 0x3C0 */ public Vector3f HandScreenRoboOnScreenOffset;
		/* 0x3D0 */ public GcInWorldUIScreenData InWorldCompass;
		/* 0x400 */ public float FistClenchBlendInTime;
		/* 0x404 */ public float FistClenchBlendOutTime;
		/* 0x408 */ public bool DoPlayerAppearInVehicleEffect;
		/* 0x40C */ public float StickYDampingThreshold;
		/* 0x410 */ public bool RequireHandsOnShipControls;
		/* 0x411 */ public bool ShowFirstPersonCharacterShadowPCVR;
		/* 0x412 */ public bool ShowFirstPersonCharacterShadowPSVR;
		/* 0x413 */ public bool InteractNearbyRadiusEnabled;
		/* 0x414 */ public bool PassiveLook;
		/* 0x418 */ public float BodyRealignmentDelay;
		/* 0x41C */ public float PointDownToMoveAngle;
		/* 0x420 */ public float PointDownToMoveBackAngle;
		/* 0x424 */ public bool EnableLeaning;
		/* 0x425 */ public bool EnablePointDownToSmoothMove;
		/* 0x426 */ public bool HmdSmoothTurnAlways;
		/* 0x428 */ public float HmdTurnSpeed;
		/* 0x42C */ public float HmdTurnSpeedPad;
		/* 0x430 */ public ulong PointingWristAdjustmentTimeMilliseconds;
		/* 0x440 */ public Vector3f PointingWristAngles;
		/* 0x450 */ public bool HolsterOnHip;
		/* 0x454 */ public float HolsterHeadRotX;
		/* 0x460 */ public Vector3f HolsterHeadOffset;
		/* 0x470 */ public Vector3f HolsterGunHandOffset;
		/* 0x480 */ public float GroundWalkForce;
		/* 0x484 */ public float GroundWalkBrake;
		/* 0x488 */ public float GroundWalkBrakeWhileMoving;
		/* 0x48C */ public float GroundWalkSpeed;
		/* 0x490 */ public float GroundWalkSpeedTeleportHmd;
		/* 0x494 */ public float GroundRunSpeed;
		/* 0x498 */ public float GroundWalkRecoverySpeedDamper;
		/* 0x49C */ public float HandSmoothMinAngle;
		/* 0x4A0 */ public float HandSmoothAngleRange;
		/* 0x4A4 */ public float HmdResetButtonTime;
		/* 0x4A8 */ public float SummonShipDirectionChangeDeadZoneAngle;
		/* 0x4AC */ public float TeleportArcRadius;
		/* 0x4B0 */ public float TeleportArcRadiusInner;
		/* 0x4B4 */ public float TeleportStrafeDistance;
		/* 0x4B8 */ public float NoStickTeleportDirectionChangeDeadzoneAngle;
		/* 0x4BC */ public float TeleportHmdMinFade;
		/* 0x4C0 */ public float TeleportHmdMaxFade;
		/* 0x4C4 */ public float TeleportHmdOutFactor;
		/* 0x4C8 */ public float TeleportBeamGravity;
		/* 0x4CC */ public float TeleportBeamGravityMax;
		/* 0x4D0 */ public float TeleportArcLengthMultiplier;
		/* 0x4D4 */ public float TeleportBeamAnimSpeed;
		/* 0x4D8 */ public float TeleportBeamAnimHeight;
		/* 0x4DC */ public float TeleportLastKnownThreshold;
		/* 0x4E0 */ public float TeleportLineEndFadeStart;
		/* 0x4E4 */ public float TeleportLineEndFadeEnd;
		/* 0x4E8 */ public float TeleportLineFadeStart;
		/* 0x4EC */ public float TeleportLineFadeRange;
		/* 0x4F0 */ public float TeleportInitiateThreshold;
		/* 0x4F4 */ public bool TeleportRecentre;
		/* 0x4F8 */ public float TeleportLineBezierOffset;
		/* 0x4FC */ public float TeleportLineBezierDistanceFactor;
		/* 0x500 */ public float InteractionLineSplineOffset;
		/* 0x504 */ public float InteractionLineSplineOffsetMin;
		/* 0x508 */ public float InteractionLineSplineMinDistance;
		/* 0x50C */ public float InteractionLineSplineOffsetRange;
		/* 0x510 */ public float InteractionLineCircleRadius;
		/* 0x514 */ public float InteractionLineCircleThickness;
		/* 0x518 */ public float InteractionLineCircleSpeed;
		/* 0x51C */ public float InteractionLineCircleOffsetMin;
		/* 0x520 */ public float InteractionLineCircleOffsetMax;
		/* 0x524 */ public float InteractionLineNumCirclesPerMetre;
		/* 0x528 */ public int WordCategoriesRequiredToConverse;
		/* 0x52C */ public int MaxWordCategoriesToSayPerNPC;
		/* 0x530 */ public Colour InteractionLineActiveColour;
		/* 0x540 */ public Colour InteractionLineBaseColour;
		/* 0x550 */ public GcScanEffectData InteractHighlightEffect;
		/* 0x5A0 */ public GcScanEffectData HolsterHighlightEffect;
		/* 0x5F0 */ public float HandHoldInteractDistanceRate;
		/* 0x5F4 */ public float HandHoldInteractAngleRate;
		/* 0x5F8 */ public float HandSwimMin;
		/* 0x5FC */ public float HandSwimMax;
		/* 0x600 */ public float HandSwimDecayTime;
		/* 0x604 */ public float HandSwimForce;
		/* 0x608 */ public float HandSwimMaxForce;
		/* 0x60C */ public bool HandSwimEnabled;
		/* 0x610 */ public float HmdTurnThreshold;
		/* 0x614 */ public float HmdTurnAngle;
		/* 0x618 */ public float HmdTurnAnglePad;
		/* 0x61C */ public float TeleportInstantTravelDistance;
		/* 0x620 */ public float TeleportDirectionAltHandRange;
		/* 0x624 */ public float TeleportMotionOffsetAmount;
		/* 0x628 */ public float TeleportMotionOffsetUp;
		/* 0x62C */ public float TeleportTotalTime;
        [NMS(Size = 0x80)]
		/* 0x630 */ public string NoShadowMaterial;
		/* 0x6B0 */ public float HolsterGrabRadius;
		/* 0x6B4 */ public float HolsterGrabFrontOffset;
		/* 0x6B8 */ public float HolsterScale;
		/* 0x6BC */ public float HolsterRotY;
		/* 0x6C0 */ public float HolsterRotZ;
		/* 0x6C4 */ public bool HolsterHold;
		/* 0x6D0 */ public Vector3f HolsterOffset;
		/* 0x6E0 */ public float HeadBinocularsOffset;
		/* 0x6E4 */ public float HeadBinocularsRadius;
        [NMS(Size = 0x10)]
		/* 0x6E8 */ public string DebugSearchGroup;
        /* 0x0700 */ public Colour SearchGroupIconColour;
        /* 0x0710 */ public bool DebugExperience;
        [NMS(Size = 0x80)]
        /* 0x0711 */ public string DefaultShipFilename;
        [NMS(Size = 0x7, Ignore = true)]
        /* 0x0791 */ public byte[] Padding791;
        /* 0x0798 */ public GcSeed DefaultShipSeed;
        /* 0x07A8 */ public bool DebugExperienceRender;
        /* 0x07A9 */ public bool DebugDroneScanPlayer;
        [NMS(Size = 0x6, Ignore = true)]
        /* 0x07AA */ public byte[] Padding7AA;
        /* 0x07B0 */ public Vector3f DebugDroneSpawn;
        /* 0x07C0 */ public Vector3f DebugDroneTarget;
        /* 0x07D0 */ public int DebugNumDrones;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x07D4 */ public byte[] Padding7D4;
        /* 0x07E0 */ public Vector3f DebugWalkerSpawn;
        /* 0x07F0 */ public Vector3f DebugWalkerTarget;
        /* 0x0800 */ public Vector3f DebugFlybyTarget;
        /* 0x0810 */ public Vector3f DebugFlybyDir;
        /* 0x0820 */ public float DebugFlybyRange;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x0824 */ public byte[] Padding824;
        /* 0x0828 */ public GcSeed DebugFlybySeed;
        [NMS(Size = 0x10)]
        /* 0x0838 */ public string DebugExperienceCamShake;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0848 */ public byte[] Padding848;
        /* 0x0850 */ public GcScanEffectData ArmourHighlightScanEffect;
		/* 0x8A0 */ public float HitReactNoiseAmount;
		/* 0x8A4 */ public float HitReactBlendOutSpeedMin;
		/* 0x8A8 */ public float HitReactBlendOutSpeedMax;
		/* 0x8AC */ public float JetpackUnderwaterDrainRate;
		/* 0x8B0 */ public float JetpackUnderwaterFillRate;
		/* 0x8B4 */ public float UnderwaterMargin;
		/* 0x8B8 */ public float UnderwaterMinDepth;
		/* 0x8BC */ public float UnderwaterSurfaceTension;
		/* 0x8C0 */ public float UnderwaterSurfaceTensionOffset;
		/* 0x8C4 */ public float UnderwaterSurfaceForceFlattenAngleMin;
		/* 0x8C8 */ public float UnderwaterSurfaceForceFlattenAngleRange;
		/* 0x8CC */ public float UnderwaterImpact;
		/* 0x8D0 */ public float UnderwaterMaxSpeed;
		/* 0x8D4 */ public float UnderwaterForce;
		/* 0x8D8 */ public float UnderwaterMaxJetpackSpeed;
		/* 0x8DC */ public float UnderwaterJetpackForce;
		/* 0x8E0 */ public float UnderwaterMaxJetpackEscapeSpeed;
		/* 0x8E4 */ public float UnderwaterJetpackEscapeForce;
		/* 0x8E8 */ public float UnderwaterBrake;
		/* 0x8EC */ public float UnderwaterFloat;
		/* 0x8F0 */ public float UnderwaterFloatForce;
		/* 0x8F4 */ public float UnderwaterFloatRange;
		/* 0x8F8 */ public float UnderwaterFloatFreq;
		/* 0x8FC */ public float RespawnOnPadRadius;
		/* 0x900 */ public float DeepWaterDepth;
		/* 0x904 */ public float CockpitEjectTestRadius;
		/* 0x908 */ public float CockpitEjectTestStartHeightOffset;
		/* 0x90C */ public float CockpitEjectTestEndHeightOffset;
		/* 0x910 */ public float CockpitEjectFirstPersonOffsetTime;
		/* 0x914 */ public float CockpitEjectFirstPersonOffset;
		/* 0x918 */ public float BinocularRangePlanet;
		/* 0x91C */ public float BinocularRangeSpace;
		/* 0x920 */ public float MinBinocActiveTime;
		/* 0x924 */ public float BinocularCreatureCastSphereSize;
		/* 0x928 */ public int RobotMultiplierWithFriends;
		/* 0x92C */ public float DroneStartLocationRadius;
		/* 0x930 */ public float ShipSummonLastSafeMargin;
		/* 0x934 */ public float FreighterSpawnedOnYouFadeInTime;
		/* 0x938 */ public float CreativeModeDeathFadeInTime;
		/* 0x93C */ public float CreativeModeDeathFadeOutTime;
		/* 0x940 */ public bool CreatureRideFade;
		/* 0x944 */ public float CreatureRideFadeInTime;
		/* 0x948 */ public float CreatureRideFadeOutTime;
		/* 0x94C */ public float HMDResetFlashTime;
		/* 0x950 */ public int NumberOfWarpsRequiredForFreightersToSpawn;
		/* 0x954 */ public float SpawningDistanceBetweenPlayersAfterWarp;
		/* 0x958 */ public float SpawningSpaceBattleLookOffset;
		/* 0x95C */ public float SpawningSpaceBattleLookOffsetUp;
		/* 0x960 */ public bool MultiplayerShareWanted;
		/* 0x961 */ public bool ReportAllProjectileDamage;
		/* 0x964 */ public int DefaultHitPoints;
		/* 0x968 */ public int DefaultHealthPips;
		/* 0x96C */ public int DefaultShipHealthPips;
		/* 0x970 */ public int MaxHealthPips;
		/* 0x974 */ public bool UseLargeHealthBar;
		/* 0x978 */ public float DroneSpawnAccelerator;
		/* 0x97C */ public float TrackArrowStaticTargetOffsetMultiplier;
		/* 0x980 */ public float WitnessSenseEnhancementTime;
		/* 0x984 */ public float WitnessSenseEnhancement;
		/* 0x988 */ public float MultiplayerMinWanteEscalationTime;
		/* 0x98C */ public float HealthRechargeMinTimeSinceDamage;
		/* 0x990 */ public float HealthPipRechargeRate;
		/* 0x994 */ public float MinEnergyPercentOnRespawn;
		/* 0x998 */ public float VehicleRaceResultsHintTime;
		/* 0x99C */ public float OtherPlayerTrackArrowRange;
		/* 0x9A0 */ public float WantedLevelPlayerRange;
		/* 0x9A4 */ public float WantedLevelPlayerRangeSpace;
		/* 0x9A8 */ public float PlayerTransferRange;
		/* 0x9AC */ public float PlayerSpaceTransferRange;
		/* 0x9B0 */ public float DroneScanTimeToForget;
		/* 0x9B4 */ public float GhostbusterStartLength;
		/* 0x9B8 */ public float GhostbusterStart1;
		/* 0x9BC */ public float GhostbusterSpeed1;
		/* 0x9C0 */ public float GhostbusterFreq1;
		/* 0x9C4 */ public float GhostbusterAmp1;
		/* 0x9C8 */ public float GhostbusterStart2;
		/* 0x9CC */ public float GhostbusterSpeed2;
		/* 0x9D0 */ public float GhostbusterFreq2;
		/* 0x9D4 */ public float GhostbusterAmp2;
		/* 0x9D8 */ public float GhostbusterStart3;
		/* 0x9DC */ public float GhostbusterSpeed3;
		/* 0x9E0 */ public float GhostbusterFreq3;
		/* 0x9E4 */ public float GhostbusterAmp3;
		/* 0x9E8 */ public bool FireButtonReloadsWeapon;
		/* 0x9E9 */ public bool WeaponZoomEnabled;
		/* 0x9EC */ public float WeaponZoomFOV;
		/* 0x9F0 */ public float WeaponZoomRecoilMultiplier;
		/* 0x9F4 */ public float WeaponZoomVertRotation;
		/* 0x9F8 */ public float WeaponZoomHorzRotation;
		/* 0x9FC */ public bool FrontShieldEnabled;
		/* 0xA00 */ public float FrontShieldOffsetOff;
		/* 0xA04 */ public float FrontShieldOffsetOn;
		/* 0xA08 */ public float FrontShieldSpeedSlowdown;
		/* 0xA0C */ public float CombatSpawnMinWantedTime;
		/* 0xA10 */ public float ExperienceHardPiratesDamagePotentialMin;
		/* 0xA14 */ public float ExperienceHardPiratesDamagePotentialRange;
		/* 0xA18 */ public float ExperienceHardPiratesDamageMaxOdds;
		/* 0xA1C */ public float ExperienceMediumPiratesDamagePotentialMin;
		/* 0xA20 */ public float ExperienceMediumPiratesDamagePotentialRange;
		/* 0xA24 */ public float ExperienceMediumPiratesDamageMaxOdds;
		/* 0xA28 */ public float CommunicatorSpeed;
		/* 0xA2C */ public float GrenadeBounceDamping;
		/* 0xA30 */ public float GrenadeBounceMaxSpeed;
		/* 0xA34 */ public float GrenadeStopExplodeTime;
		/* 0xA38 */ public float CockpitEjectTestSphereRadius;
		/* 0xA3C */ public float CockpitEjectTestSphereRange;
		/* 0xA40 */ public float CockpitEjectSideTestRange;
		/* 0xA44 */ public float WeaponShotgunSlowdown;
        public enum MouseSmoothModeEnum { Off, Sprung }
        /* 0xA48 */ public MouseSmoothModeEnum MouseSmoothMode;
		/* 0xA4C */ public Vector2f MouseSpringStrength;
		/* 0xA54 */ public Vector2f MouseSpringStrengthMinDelta;
		/* 0xA5C */ public Vector2f MouseSpringStrengthMaxDelta;
		/* 0xA64 */ public float HardModeEnergyDischargeRateLow;
		/* 0xA68 */ public float HardModeEnergyDischargeRateMedium;
		/* 0xA6C */ public float HardModeEnergyDischargeRateHigh;
		/* 0xA70 */ public float HazardDamageMinTime;
		/* 0xA74 */ public float EnergyDamageMinTime;
		/* 0xA78 */ public float EnergyDischargeRateLow;
		/* 0xA7C */ public float EnergyDischargeRateMedium;
		/* 0xA80 */ public float EnergyDischargeRateHigh;
		/* 0xA84 */ public float EnergyDischargeRateFloatingInSpace;
		/* 0xA88 */ public float EnergyPainRate;
		/* 0xA8C */ public float SolarRegenFactor;
		/* 0xA90 */ public Colour DefaultMuzzleColour;
		/* 0xAA0 */ public Colour TerrainEditorMuzzleColourSubtract;
		/* 0xAB0 */ public Colour TerrainEditorMuzzleColourAdd;
		/* 0xAC0 */ public Colour TerrainEditorMuzzleColourFlatten;
		/* 0xAD0 */ public Colour TerrainEditorMuzzleColourUndo;
		/* 0xAE0 */ public Colour DefaultMuzzleLaserColour;
		/* 0xAF0 */ public float FreeJetpackRange;
		/* 0xAF4 */ public float FreeJetpackRangeNonTerrain;
		/* 0xAF8 */ public float JetpackDrainHorizontalFactor;
		/* 0xAFC */ public float MinTimeAfterMeleeBeforeBoost;
		/* 0xB00 */ public float MaxTimeAfterMeleeBeforeBoost;
		/* 0xB04 */ public float MeleeBoostAirForce;
		/* 0xB08 */ public float MeleeToAirBoostInitialImpulse;
		/* 0xB0C */ public float MaxTimeInMeleeBoost;
		/* 0xB10 */ public bool RocketBootsEnabled;
		/* 0xB11 */ public bool RocketBootsUseCustomCamera;
		/* 0xB14 */ public float RocketBootsActivationWindow;
		/* 0xB18 */ public float RocketBootsDoubleTapTime;
		/* 0xB1C */ public float RocketBootsImpulse;
		/* 0xB20 */ public float RocketBootsBoostForce;
		/* 0xB24 */ public float RocketBootsDriftForce;
		/* 0xB28 */ public float RocketBootsForceStartTime;
		/* 0xB2C */ public float RocketBootsForceDuration;
		/* 0xB30 */ public float RocketBootsMinDesiredHeight;
		/* 0xB34 */ public float RocketBootsMaxDesiredHeight;
		/* 0xB38 */ public float RocketBootsHeightAdjustTime;
		/* 0xB3C */ public float RocketBootsHeightAdjustUpStrength;
		/* 0xB40 */ public float RocketBootsHeightAdjustDownStrength;
		/* 0xB44 */ public float RocketBootsJetpackMinLevel;
		/* 0xB48 */ public float RocketBootsBoostTankDrainSpeed;
		/* 0xB4C */ public float RocketBootsDriftTankDrainSpeed;
		/* 0xB50 */ public float RocketBootsBoostOnTime;
		/* 0xB54 */ public float RocketBootsBoostOffTime;
		/* 0xB58 */ public float RocketBootsZigZagStrength;
		/* 0xB5C */ public float RocketBootsZigZagForceDuration;
		/* 0xB60 */ public float RocketBootsMaxSpeed;
		/* 0xB64 */ public float RocketBootsDriftEndTime;
		/* 0xB68 */ public float RocketBootsWindUpBraking;
		/* 0xB6C */ public float RocketBootsDriftBraking;
		/* 0xB70 */ public float RocketBootsDriftDownwardForce;
		/* 0xB74 */ public float JetpackForce;
		/* 0xB78 */ public float JetpackBrake;
		/* 0xB7C */ public float JetpackMinLevel;
		/* 0xB80 */ public float JetpackMaxSpeed;
		/* 0xB84 */ public float JetpackMaxUpSpeed;
		/* 0xB88 */ public float JetpackUpForce;
		/* 0xB8C */ public float JetpackIgnitionForce;
		/* 0xB90 */ public float JetpackIgnitionTime;
		/* 0xB94 */ public float JetpackMinIgnitionTime;
        [NMS(Size = 0x3)]
        /* 0x0B98 */ public float[] JetpackTankTimes;
		/* 0xBA4 */ public float JetpackFillRate;
		/* 0xBA8 */ public float JetpackFillRateHardMode;
		/* 0xBAC */ public float JetpackFillRateMidair;
		/* 0xBB0 */ public float JetpackFillRateSpaceStationMultiplier;
		/* 0xBB4 */ public float JetpackFillRateFleetMultiplier;
		/* 0xBB8 */ public float JetpackFillRateNexusMultiplier;
		/* 0xBBC */ public float JetpackUpForceDeadPlanetExtra;
		/* 0xBC0 */ public float JetpackForceDeadPlanetExtra;
		/* 0xBC4 */ public float JetpackIgnitionForceDeadPlanetExtra;
		/* 0xBC8 */ public float JoystickOrientationTrimAltOc;
		/* 0xBCC */ public float JoystickOrientationTrimAltOp;
		/* 0xBD0 */ public float SpaceJetpackForce;
		/* 0xBD4 */ public float SpaceJetpackUpForce;
		/* 0xBD8 */ public float SpaceJetpackIgnitionForce;
		/* 0xBDC */ public float SpaceJetpackMaxSpeed;
		/* 0xBE0 */ public float SpaceJetpackDrainRate;
		/* 0xBE4 */ public bool EnableHeadMovements;
		/* 0xBE5 */ public bool ClampPitch;
		/* 0xBE8 */ public float DamageRepairFactor;
		/* 0xBEC */ public float DamageRepairFactorHardMode;
		/* 0xBF0 */ public float VRModeHazardTimeMultiplier;
		/* 0xBF4 */ public float VRStartHazardTimeMultiplier;
		/* 0xBF8 */ public float NormalModeHazardTimeMultiplier;
		/* 0xBFC */ public float NormalModeHazardDamageRateMultiplier;
		/* 0xC00 */ public float NormalModeHazardDamageWoundRateMultiplier;
		/* 0xC04 */ public float NormalModeSubstanceRewardMultiplier;
		/* 0xC08 */ public float NormalModeHazardRechargeUnderground;
		/* 0xC0C */ public float HardModeHazardTimeMultiplier;
		/* 0xC10 */ public float HardModeHazardDamageRateMultiplier;
		/* 0xC14 */ public float HardModeHazardDamageWoundRateMultiplier;
		/* 0xC18 */ public float HardModeSubstanceRewardMultiplier;
		/* 0xC1C */ public float HardModeHazardRechargeUnderground;
		/* 0xC20 */ public float VehicleHazardDampingModifier;
		/* 0xC24 */ public float FreighterProbeScanTime;
		/* 0xC28 */ public int MaxNumDestroyEffects;
		/* 0xC2C */ public int MinNumDestroyEffects;
		/* 0xC30 */ public float ProjectileEndTime;
		/* 0xC34 */ public float ExplosionTimePerEffect;
		/* 0xC38 */ public float ExplosionTimeVariance;
		/* 0xC3C */ public float ExplosionScaleVariance;
		/* 0xC40 */ public float ExplosionBoundingInset;
		/* 0xC44 */ public float ExplosionBoundingInsetRange;
		/* 0xC48 */ public float DestroyEffectFinalDelay;
		/* 0xC4C */ public float ShipPriceExp2;
		/* 0xC50 */ public float WeaponPriceExp2;
		/* 0xC54 */ public float FreighterPriceExp2;
		/* 0xC58 */ public float ShipCoolFactor;
		/* 0xC5C */ public float WeaponCoolFactor;
		/* 0xC60 */ public float FreighterCoolFactor;
		/* 0xC64 */ public bool MouseCrosshairVisible;
		/* 0xC68 */ public float MouseMaxLength;
		/* 0xC6C */ public float MouseDeadZone;
		/* 0xC70 */ public float MouseMaxLengthVehicle;
		/* 0xC74 */ public float MouseDeadZoneVehicle;
		/* 0xC78 */ public float MouseAimZone;
		/* 0xC7C */ public float MouseCrosshairMaxAlpha;
		/* 0xC80 */ public float MouseCrosshairAlphaFade;
		/* 0xC84 */ public float MouseCrosshairAlphaFadeSpeed;
		/* 0xC88 */ public float MouseCrosshairLineAlpha;
		/* 0xC8C */ public float MouseCrosshairLineWidth;
		/* 0xC90 */ public float MouseCrosshairShipStrength;
		/* 0xC94 */ public float MouseCrosshairMultiplier;
		/* 0xC98 */ public float MaximumCrouchVR;
		/* 0xC9C */ public float MaximumHeadHeightIncreaseVR;
		/* 0xCA0 */ public float MaximumHorizontalOffsetVR;
		/* 0xCA4 */ public float CrouchHeightToDisableLegBlendingVR;
		/* 0xCA8 */ public bool UseEnergy;
		/* 0xCA9 */ public bool InventoryDamage;
		/* 0xCAA */ public bool NeverPreyedOn;
		/* 0xCAB */ public bool PermanantFire;
		/* 0xCAC */ public bool PermanantAltFire;
		/* 0xCAD */ public bool LuckyWithTech;
		/* 0xCB0 */ public int BulletCostReducer;
		/* 0xCB4 */ public int BulletClipMultiplier;
		/* 0xCB8 */ public float LootForceMultiplier;
		/* 0xCBC */ public float WoundTimeMinimum;
		/* 0xCC0 */ public float WoundDamageLimit;
		/* 0xCC4 */ public float WoundDamageLimitShip;
		/* 0xCC8 */ public float WoundDamageDecayTime;
		/* 0xCCC */ public float ResourceBlobFinalScaleDistance;
		/* 0xCD0 */ public float LaserPlayerOffset;
		/* 0xCD4 */ public float WalkerAlertRange;
		/* 0xCD8 */ public float WalkerSightRange;
		/* 0xCDC */ public float WalkerSightAngle;
		/* 0xCE0 */ public float CombatEscalateTime;
		/* 0xCE4 */ public float CombatEscapeRadius;
		/* 0xCE8 */ public float CombatEscapeTime;
        /* 0xCEC */ public bool UpgradeExosuitWithProduct;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x0CED */ public byte[] PaddingCED;
        [NMS(Size = 0x10)]
        /* 0x0CF0 */ public string ExosuitUpgradeProduct;
        /* 0x0D00 */ public int SuitInventoryStartSeed;
        /* 0x0D04 */ public int MaxNumShipsAttackingPlayer;
        /* 0x0D08 */ public float ObjectScanTime;
        /* 0x0D0C */ public float DroneProbeScanTime;
        /* 0x0D10 */ public int PirateHailPercent;
        /* 0x0D14 */ public float PirateBountyInitTime;
        /* 0x0D18 */ public float PirateProbeInitTime;
        /* 0x0D1C */ public float PirateProbeAttackWaitTime;
        /* 0x0D20 */ public float PirateProbeAttackWarnTime;
        /* 0x0D24 */ public float PirateProbeScanTime;
        /* 0x0D28 */ public float PirateProbeScanTotalTime;
        /* 0x0D2C */ public float PirateProbeHailPause;
        /* 0x0D30 */ public float PirateBattleMarkerRange;
        /* 0x0D34 */ public float PirateBattleWarnTime;
        /* 0x0D38 */ public float PirateBattleMarkerTime;
        /* 0x0D3C */ public float PirateBattleMaxTime;
        [NMS(Size = 0x20)]
        /* 0x0D40 */ public string TraderHailReceiveOSDLoc;
        [NMS(Size = 0x20)]
        /* 0x0D60 */ public string TraderHailRefusedOSDLoc;
        /* 0x0D80 */ public float TraderHailTime;
        /* 0x0D84 */ public float TraderApproachTime;
        /* 0x0D88 */ public float TraderHailDistance;
        /* 0x0D8C */ public float TraderApproachDistance;
        /* 0x0D90 */ public float TraderSpamTimeWait;
        /* 0x0D94 */ public float TraderStayCloseLockOffset;
        /* 0x0D98 */ public float TraderStayCloseLockSin1Coeff;
        /* 0x0D9C */ public float TraderStayCloseLockSin1Offset;
        /* 0x0DA0 */ public float TraderStayCloseLockSin2Coeff;
        /* 0x0DA4 */ public float TraderStayCloseLockSin2Offset;
        /* 0x0DA8 */ public float TraderStayCloseLockSinsAdd;
        /* 0x0DAC */ public float TraderStayCloseLockSpread;
        /* 0x0DB0 */ public float TraderStayCloseLockSpreadAdd;
        /* 0x0DB4 */ public float TraderStayCloseLockSpreadTime;
        /* 0x0DC0 */ public Vector3f TraderStayCloseLockBaseOffset;
        /* 0x0DD0 */ public float TraderHealthFightThreshold;
        /* 0x0DD4 */ public int TraderCommunicationBanMinTime;
        /* 0x0DD8 */ public int TraderCommunicationBanMaxTime;
		/* 0xDDC */ public float PulseEncounterMinTimeInPulse;
		/* 0xDE0 */ public float PulseEncounterProbeTime;
		/* 0xDE4 */ public float PulseEncounterProbeTimeRare;
		/* 0xDE8 */ public float PulseEncounterMarkerShowAngle;
		/* 0xDEC */ public float PulseEncounterMarkerAlwaysShowDistance;
		/* 0xDF0 */ public float PulseEncounterMarkerAlwaysHideDistance;
		/* 0xDF4 */ public float PulseEncounterSpawnEffectDistance;
		/* 0xDF8 */ public float PulseEncounterSpawnEffectTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0xDFC */ public byte[] PaddingDFC;
        [NMS(Size = 0x10)]
		/* 0xE00 */ public string PulseEncounterSpaceEggID;
        /* 0x0E10 */ public float LaserMiningDamageMultiplier;
        /* 0x0E14 */ public float ShieldRechargeMinTimeSinceDamage;
        /* 0x0E18 */ public float ShieldRechargeRate;
        /* 0x0E1C */ public float MoveStickHighRangeLimit;
        /* 0x0E20 */ public float WitnessAIDamageDistance;
        /* 0x0E24 */ public float WitnessAIDamageAngle;
        /* 0x0E28 */ public float DeathDamageDrainChargeFactor;
        /* 0x0E2C */ public int DeathDamageTechBrokenPercent;
        /* 0x0E30 */ public float MaxProjectileRadiusMultiplier;
        /* 0x0E34 */ public float HardLandPainTime;
        /* 0x0E38 */ public int GunBaseClipSize;
        /* 0x0E3C */ public int GrenadeBaseClipSize;
        /* 0x0E40 */ public float MeleeCooldown;
        /* 0x0E44 */ public float ChargeMeleeCooldown;
        /* 0x0E48 */ public float MeleeDistance;
        /* 0x0E4C */ public float MeleeDistance3P;
        /* 0x0E50 */ public float MeleeRadius;
        /* 0x0E54 */ public float MeleeHitTimeDelay;
        /* 0x0E58 */ public float MeleeSpeedBoost;
        /* 0x0E5C */ public float MeleeSpeedDamageBoost;
        /* 0x0E60 */ public float MeleeSpeedBoostRangeMultiplier;
        /* 0x0E64 */ public float MeleeStaminaDrain;
        /* 0x0E68 */ public float MeleeCooldownAlt;
        /* 0x0E6C */ public float MeleePosDelta;
        /* 0x0E70 */ public float MeleeDamageScale;
        /* 0x0E74 */ public float MeleeRadiusAlt;
        /* 0x0E78 */ public float MeleeDistanceAlt;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x0E7C */ public byte[] PaddingE7C;
        /* 0x0E80 */ public GcScanEffectData MeleeHitEffect;
        /* 0x0ED0 */ public float TemperatureDisplaySampleTime;
        /* 0x0EE0 */ public Colour StarFieldColour;
        /* 0x0EF0 */ public float StarFieldRadius;
        /* 0x0EF4 */ public float StarFieldDensity;
        /* 0x0EF8 */ public float StarFieldStarSize;
        /* 0x0EFC */ public float SpeedLinesSpeedMin;
        /* 0x0F00 */ public float SpeedLinesSpeedMax;
        /* 0x0F04 */ public float SpeedLinesLength;
        /* 0x0F08 */ public float SpeedLinesTotalLength;
        /* 0x0F0C */ public float SpeedLinesWidthMin;
        /* 0x0F10 */ public float SpeedLinesWidthMax;
        /* 0x0F14 */ public float SpeedLinesRadiusStartMin;
        /* 0x0F18 */ public float SpeedLinesRadiusStartMax;
        /* 0x0F1C */ public float SpeedLinesRadiusIncrement;
        /* 0x0F20 */ public float SpeedLinesStartFade;
        /* 0x0F24 */ public float SpeedLinesMinAlpha;
        /* 0x0F28 */ public float SpeedLinesMaxAlpha;
        /* 0x0F2C */ public float SpeedLinesOffset;
        /* 0x0F30 */ public float SleepFadeTime;
        /* 0x0F34 */ public float StaminaRate;
        /* 0x0F38 */ public float StaminaRecoveryRate;
        /* 0x0F3C */ public float StaminaRecoveredFactor;
        /* 0x0F40 */ public float ScanLabelTime;
        /* 0x0F44 */ public float ScanWobbleFreq;
        /* 0x0F48 */ public float ScanWobbleAmp;
        /* 0x0F4C */ public float ScanWobbleFreq2;
        /* 0x0F50 */ public float ScanWobbleAmp2;
        /* 0x0F54 */ public float ScanRotate;
        /* 0x0F58 */ public float ScanRotateDist;
        /* 0x0F5C */ public float ScanRotateWobbleAmp;
        /* 0x0F60 */ public float ScanFadeInTime;
        /* 0x0F64 */ public float ScanFadeOutTime;
        /* 0x0F68 */ public float ScanBeamWidth;
        /* 0x0F6C */ public float ScanRotateBeamWdith;
        /* 0x0F70 */ public float ScanBeamMainWidth;
        /* 0x0F74 */ public float WantedDroneEventRadius;
        /* 0x0F78 */ public float WantedMinSpaceTime;
        /* 0x0F7C */ public float WantedMinPlanetTime;
        /* 0x0F80 */ public float WantedLevelDelay;
        /* 0x0F84 */ public float WantedWitnessTimer;
        /* 0x0F88 */ public float WantedWitnessFuzzyTime;
        /* 0x0F8C */ public float WantedMinorCrimeAmount;
        /* 0x0F90 */ public float WantedTimeoutAggressive;
        [NMS(Size = 0x5)]
        /* 0x0F94 */ public float[] WantedTimeout;
        [NMS(Size = 0x5)]
        /* 0x0FA8 */ public float[] WantedEscalateTime;
        [NMS(Size = 0x5)]
        /* 0x0FBC */ public float[] WantedExtremeEscalateTime;
        public enum ControlModesEnum {  Normal, FlightStick, Inverted }
        /* 0x0FD0 */ public ControlModesEnum ControlModes;
        /* 0x0FD4 */ public float PlayerViewTargetRange;
        /* 0x0FD8 */ public float InteractionScanRange;
        /* 0x0FDC */ public float InteractionButtonRange;
        /* 0x0FE0 */ public float InteractionButtonRangeVehicle;
        /* 0x0FE4 */ public float InteractionFocusTime;
        /* 0x0FE8 */ public float InteractionSubstanceRange;
        /* 0x0FEC */ public float HeatShieldTime;
        /* 0x0FF0 */ public float LaserShakeMin;
        /* 0x0FF4 */ public float LaserShakeMax;
        /* 0x0FF8 */ public float GunRecoil;
        /* 0x0FFC */ public float LaserRecoil;
        /* 0x01000 */ public float BeamRecoil;
        /* 0x01004 */ public float GrenadeRecoil;
        /* 0x01008 */ public float GunRecoilSpring;
        /* 0x0100C */ public float BlastRecoilSpring;
        /* 0x01010 */ public float RailRecoilSpring;
        /* 0x01014 */ public float PulseRecoilSpring;
        /* 0x01018 */ public float GunRecoilSettleSpring;
        /* 0x0101C */ public float ThirdPersonRecoilMultiplier;
        /* 0x01020 */ public float GunRecoilMin;
        /* 0x01024 */ public float GunRecoilMax;
        /* 0x01028 */ public float ProjectileDamageFalloff;
        /* 0x0102C */ public float ShotgunDispersion;
        /* 0x01030 */ public GcResourceCollectEffect TerrainResourceCollect;
        /* 0x01064 */ public GcResourceCollectEffect TerrainResourceMiniCollect;
        /* 0x01098 */ public GcResourceCollectEffect TerrainResourceMeleeCollect;
        /* 0x010CC */ public GcResourceCollectEffect CrystalResourceCollect;
        /* 0x01100 */ public GcResourceCollectEffect ShardResourceCollect;
        /* 0x01134 */ public GcBoidData MissileSwarm;
        /* 0x01160 */ public GcPlayerStickData StickData;
        /* 0x0117C */ public bool AutoAim;
        /* 0x01180 */ public float AutoAimMaxAccelFactor;
        /* 0x01184 */ public float AutoAimFixedInterceptSpeed;
        /* 0x01188 */ public float AutoAimTimeOut;
        /* 0x0118C */ public float AutoAimMaxAngle;
        /* 0x01190 */ public float AutoAimMinScreenDistance;
        /* 0x01194 */ public float AutoAimRadiusExtra;
        /* 0x01198 */ public float AutoAimStickyMin;
        /* 0x0119C */ public float AutoAimStickyMax;
        /* 0x011A0 */ public TkCurveType AutoAimDotCurve;
        /* 0x011A4 */ public TkCurveType AutoAimCentreOffsetCurve;
        /* 0x011A8 */ public float AimDistanceShip;
        /* 0x011AC */ public float AimSpeed;
        /* 0x011B0 */ public float AimWeightAdd;
        /* 0x011B4 */ public float AimMinWeight;
        /* 0x011B8 */ public float AimDecay;
        /* 0x011BC */ public float AimOffset;
        /* 0x011C0 */ public float AimShootableTargetAngle;
        /* 0x011C4 */ public float AimDisperseTime;
        /* 0x011C8 */ public float AimDisperseMinTime;
        /* 0x011CC */ public float AimDisperseCooldownTime;
        /* 0x011D0 */ public float AimDisperseCooldownFactor;
        /* 0x011D4 */ public TkCurveType AimDisperseCurve;
        /* 0x011D8 */ public float CrosshairTime;
        /* 0x011DC */ public float BeaconActivateRange;
        /* 0x011E0 */ public int ExperienceMaxCivilianShipSpawnsOnPlanet;
        /* 0x011E4 */ public int ExperienceMaxCivilianShipSpawnsInSpace;
        /* 0x011E8 */ public float ExperiencePirateFreighterAttackRange;
        /* 0x011EC */ public float ExperienceWalkerSize;
        /* 0x011F0 */ public float ExperienceInterestingShipDistance;
        /* 0x011F4 */ public float ExperienceInterestingFreighterDistance;
        /* 0x011F8 */ public float ExperienceInterestingDroneDistance;
        /* 0x011FC */ public float ExperienceShipTimeMin;
        /* 0x01200 */ public float ExperienceShipTimeMax;
        /* 0x01204 */ public int ExperiencePirateCloseAttackPercentage;
        /* 0x01208 */ public float ExperiencePirateTimeMin;
        /* 0x0120C */ public float ExperiencePirateTimeMax;
        /* 0x01210 */ public float ExperienceDroneTimeMin;
        /* 0x01214 */ public float ExperienceDroneTimeMax;
        /* 0x01218 */ public float ExperienceFlybyScareRadius;
        /* 0x0121C */ public float ExperienceFlybyScareTime;
        /* 0x01220 */ public Vector2f ExperienceFlybyStartAngle;
        /* 0x01228 */ public float ExperienceAlertRange;
        /* 0x0122C */ public float ExperienceAlertSightRange;
        /* 0x01230 */ public float ExperienceAlertSightAngle;
        /* 0x01234 */ public float ExperienceDroneSpawnOffset;
        /* 0x01238 */ public float ExperienceDroneSpawnAngle;
        /* 0x0123C */ public float ExperienceMessageBroadcastNearbyDistance;
        /* 0x01240 */ public float WantedEnemyAttackAmount;
        [NMS(Size = 0x80)]
        /* 0x01244 */ public string Gun;
        /* 0x012C4 */ public float StickDeadZoneMin;
        /* 0x012C8 */ public float StickDeadZoneMax;
        /* 0x012CC */ public TkCurveType StickCurve;
        /* 0x012D0 */ public float AutoLandRange;
        /* 0x012D4 */ public float AutoLandTime;
        /* 0x012D8 */ public float LabelSpringTime;
        /* 0x012DC */ public float LabelOffset;
        /* 0x012E0 */ public float AtmosphereEffectTime;
        /* 0x012E4 */ public float AtmosphereEffectOffset;
        [NMS(Size = 0x7)]
        /* 0x012E8 */ public GcCreatureAlertData[] AlertTable;
        /* 0x01390 */ public float PainFlickerAmount;
        /* 0x01394 */ public float PainColourSeperateAmount;
        /* 0x01398 */ public float PainTime;
        /* 0x0139C */ public GcProjectileLineData PlayerBullet;
        /* 0x013C4 */ public GcProjectileLineData RobotBullet;
        /* 0x013EC */ public GcProjectileLineData ShipBullet;
        /* 0x01414 */ public float ExplodeShakeMaxDist;
        /* 0x01418 */ public float ExplodeShakeMaxDistSpace;
        /* 0x0141C */ public float ExplodeShakeStrength;
        /* 0x01420 */ public float FlashSize;
        /* 0x01424 */ public float FlashPosX;
        /* 0x01428 */ public float FlashPosY;
        /* 0x0142C */ public float FlashPosZ;
        /* 0x01430 */ public float FlashSpeed;
        /* 0x01434 */ public float FlashPulse;
        /* 0x01438 */ public float FlashGrow;
        /* 0x0143C */ public float GunRightOffset;
        /* 0x01440 */ public float GunUpOffset;
        /* 0x01444 */ public float LaserBeamMineRate;
        /* 0x01448 */ public float LaserBeamCore;
        /* 0x0144C */ public float LaserBeamFlickerAmp;
        /* 0x01450 */ public float LaserBeamFlickerFreq;
        /* 0x01454 */ public float LaserEndOffset;
        /* 0x01458 */ public float GrenadeTerrainDeformRadius;
        /* 0x0145C */ public float LaserBeamTerrainDeformRadius;
        /* 0x01460 */ public float LaserBeamTerrainDeformVariance;
        /* 0x01464 */ public float LaserBeamAmmoUseTime;
        /* 0x01468 */ public float ReloadButtonHoldTimeToHolster;
        /* 0x0146C */ public float WeaponChangeModeTime;
        /* 0x01470 */ public Vector3f WeaponBarrelOffset;
        /* 0x01480 */ public Vector3f WeaponOffset;
        /* 0x01490 */ public float WeaponLowerDelay;
        /* 0x01494 */ public float WeaponHolsterDelay;
        /* 0x01498 */ public float WeaponLag;
        /* 0x0149C */ public float WeaponBobFactorWalkDeadZone;
        /* 0x014A0 */ public float WeaponBobFactorWalk;
        /* 0x014A4 */ public float WeaponBobFactorRun;
        /* 0x014A8 */ public float WeaponBobBlendTime;
        /* 0x014AC */ public TkCurveType WeaponBobBlendCurve;
        /* 0x014B0 */ public float WeaponGrenadeTime;
        /* 0x014B4 */ public float WeaponGunTime;
        /* 0x014B8 */ public float WeaponRailFireTime;
        /* 0x014BC */ public float WeaponRailRechargeTime;
        /* 0x014C0 */ public int MaxBuildHeight;
        /* 0x014C4 */ public float SpaceMaxGravityDist;
        /* 0x014C8 */ public float SpaceMinGravityDist;
        /* 0x014CC */ public float BulletBend;
        /* 0x014D0 */ public float ShootSizeMinZ;
        /* 0x014D4 */ public float ShootSizeMaxZ;
        /* 0x014D8 */ public float ShootSizeMinXY;
        /* 0x014DC */ public float ShootSizeMaxXY;
        /* 0x014E0 */ public float ShootSizeTime;
        /* 0x014E4 */ public float ShootSizeBase;
        /* 0x014E8 */ public float ShootOffset;
        /* 0x014EC */ public float ShootPrepTime;
        /* 0x014F0 */ public float GrenadeCarveRadius;
        /* 0x014F4 */ public float ChargeTime;
        /* 0x014F8 */ public float EnergyBallSpeed;
        /* 0x014FC */ public float ChargedEnergyBallSpeed;
        /* 0x01500 */ public float LookRayRadius;
        /* 0x01504 */ public float PickRange;
        /* 0x01508 */ public float DamageRateWhenUnderNoGravity;
        /* 0x0150C */ public float TakeDamageImpulse;
        /* 0x01510 */ public float HardLandTime;
        /* 0x01514 */ public float HardLandMin;
        /* 0x01518 */ public float HardLandMax;
        /* 0x0151C */ public float MeleeRange;
        /* 0x01520 */ public float MeleeTime;
        /* 0x01524 */ public float MeleeForcePush;
        /* 0x01528 */ public float MeleeOffset;
        /* 0x0152C */ public float PushForceAirFactor;
        /* 0x01530 */ public int HUDHeightPosX;
        /* 0x01534 */ public int HUDHeightPosY;
        /* 0x01538 */ public float TargetDistance;
        /* 0x0153C */ public float TargetRadius;
        /* 0x01540 */ public float HoldForce;
        /* 0x01544 */ public float HoldTime;
        /* 0x01548 */ public float HoldActionDistX;
        /* 0x0154C */ public float HoldActionDistY;
        /* 0x01550 */ public float HoldActionDistZ;
        /* 0x01554 */ public float HoldDistX;
        /* 0x01558 */ public float HoldDistY;
        /* 0x0155C */ public float HoldDistZ;
        /* 0x01560 */ public float HoldMaxForce;
        /* 0x01564 */ public float HoldRotate;
        /* 0x01568 */ public float BalanceStrength;
        /* 0x0156C */ public float BalanceSpeed;
        /* 0x01570 */ public float ExertionSmoothTime;
        /* 0x01574 */ public float ExertionFromPainTime;
        /* 0x01578 */ public float AnimWalkSpeed;
        /* 0x0157C */ public float AnimRunSpeed;
        /* 0x01580 */ public float AnimWalkToRunSpeed;
        /* 0x01584 */ public float AnimWalkBlendPoint;
        /* 0x01588 */ public float AnimRunBlendPoint;
        /* 0x0158C */ public float MaxSlopeAngle;
        /* 0x01590 */ public float SlopeSlidingSpeed;
        /* 0x01594 */ public float SlopeSlideBrake;
        /* 0x01598 */ public float MinSlideTime;
        /* 0x0159C */ public float MaxWalkableSlopeAngle;
        /* 0x015A0 */ public float MinSpidermanSlopeAngle;
        /* 0x015A4 */ public float MinTimeToHoldSpidermanPose;
        /* 0x015A8 */ public float MaxSpidermanSlopeAngle;
        /* 0x015AC */ public float MaxClingableSlopeAngle;
        /* 0x015B0 */ public float MinimumPushOffForceToSlide;
        /* 0x015B4 */ public float FullClipReloadSpeedMultiplier;
        /* 0x015B8 */ public float ReloadTapButtonSpeedIncrease;
        /* 0x015BC */ public float ClingBrakeMultiplier;
        /* 0x015C0 */ public float ClingAngleThreshold;
        /* 0x015C4 */ public float ClingSpeedThreshold;
        /* 0x015C8 */ public float ClimbableStickinessAngle;
        /* 0x015CC */ public float MinUpAmount;
        /* 0x015D0 */ public float FootOffset;
        /* 0x015D4 */ public float MaxFallSpeed;
        /* 0x015D8 */ public float PushForceDecay;
        /* 0x015DC */ public float LeanFwdMaxAngle;
        /* 0x015E0 */ public float LeanBackMaxAngle;
        /* 0x015E4 */ public float LeanLeftMaxAngle;
        /* 0x015E8 */ public float LeanRightMaxAngle;
        /* 0x015EC */ public float LeanAmount;
        /* 0x015F0 */ public float LeanAmountFwd;
        /* 0x015F4 */ public float HelmetLag;
        /* 0x015F8 */ public float HelmetMaxLag;
        /* 0x015FC */ public float HelmetBob;
        /* 0x01600 */ public float JetpackHelmetBob;
        /* 0x01604 */ public float ShipCameraLag;
        /* 0x01608 */ public float MaxResource;
        /* 0x0160C */ public float ShieldRestoreSpeed;
        /* 0x01610 */ public float ShieldRestoreDelay;
        /* 0x01614 */ public float TimeHoldDownAccelerateToLaunchFromOutpost;
        /* 0x01618 */ public float DeathScreenFadeInThirdPerson;
        /* 0x0161C */ public float DeathScreenFadeInUnderwaterThirdPerson;
        /* 0x01620 */ public float DeathScreenFadeInTime;
        /* 0x01624 */ public float DeathScreenShipFadeInTime;
        /* 0x01628 */ public float DeathScreenPauseTime;
        /* 0x0162C */ public float DeathScreenMaxRegenWaitTime;
        /* 0x01630 */ public float DeathScreenMinRegenWaitTime;
        /* 0x01634 */ public float DeathScreenFadeOutTime;
        /* 0x01638 */ public GcPlayerStickData LookStickData;
        /* 0x01654 */ public GcPlayerStickData AmbientModeLookStickData;
        /* 0x01670 */ public int LowHealthEffectPips;
        /* 0x01674 */ public int LowHealthEffectShield;
        /* 0x01678 */ public float CriticalHitTime;
        /* 0x0167C */ public float CriticalHitDesatTime;
        /* 0x01680 */ public float CriticalHitDesatFreq;
        [NMS(Size = 0x2)]
        /* 0x01684 */ public GcCameraSpawnSetupData[] FirstSpawnDataTable;
        /* 0x016A4 */ public GcInventoryValueData ShipValueData;
        /* 0x016C0 */ public GcInventoryValueData WeaponValueData;
        /* 0x016DC */ public GcInventoryValueData FreighterValueData;
        [NMS(Size = 0x7)]
        /* 0x016F8 */ public float[] TechRarityData;
        [NMS(Size = 0x6)]
        /* 0x01714 */ public float[] TechLearningProbabilities;
        /* 0x0172C */ public int NumTechShopSlots;
        /* 0x01730 */ public float GrassPushDistance;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x01734 */ public byte[] Padding1734;
        /* 0x01740 */ public GcCameraAnomalySetupData AnomalyBlachHoleSpawnData;
        /* 0x01780 */ public GcCameraAnomalySetupData AnomalyAtlasStationSpawnData;
        /* 0x017C0 */ public GcCameraAnomalySetupData AnomalyMiniStationSpawnData;
        /* 0x1800 */ public GcJourneyMedalTiers MedalTiers;
        /* 0x1810 */ public int LowGuildRank;
        /* 0x1814 */ public int MedGuildRank;
        /* 0x1818 */ public int HighGuildRank;
        /* 0x181C */ public int BestGuildRank;
        /* 0x1820 */ public float LaserWeaponRange;
        /* 0x1824 */ public float LaserShipRange;
        /* 0x1828 */ public float TerrainLaserRange;
        /* 0x182C */ public float VehicleLaserRange;
        /* 0x1830 */ public GcPlayerCommunicatorMessage PirateHailMessage;
        /* 0x1880 */ public GcShipDialogue TraderHailMessages;
        [NMS(Size = 0x4)]
        /* 0x1AE8 */ public GcShipDialogueTreeEnum[] TraderHailReceiveRegular;
        [NMS(Size = 0x2)]
        /* 0x1AF8 */ public GcShipDialogueTreeEnum[] TraderHailReceiveFight;
        [NMS(Size = 0x4)]
        /* 0x1B00 */ public GcShipDialogueTreeEnum[] TraderHailSend;
    }
}
