using System;
using System.Collections.Generic;

using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0xE90, GUID = 0x46FD41333C4EBD48, NameHash = 0xD338272248F67908)]
    public class GcAISpaceshipGlobals : NMSTemplate
    {
        /* 0x000 */ public GcPlayerSquadronConfig PlayerSquadronConfig;
        /* 0x240 */ public bool DisplayShipAttackTypes;
        /* 0x244 */ public float MinimumCircleTimeBeforeLanding;
        /* 0x248 */ public float MinimumTimeBetweenOutpostLandings;
        /* 0x24C */ public float VisibleDistance;
        /* 0x250 */ public bool TradersAttackPirates;
        /* 0x251 */ public bool FreightersAlwaysAttackPlayer;
        /* 0x252 */ public bool GroundEffectEnabled;
        /* 0x253 */ public bool AtmosphereEffectEnabled;
        /* 0x254 */ public bool FillUpOutposts;
        /* 0x258 */ public float SalvageTime;
        /* 0x25C */ public float SalvageRemovalTime;
        /* 0x260 */ public float SalvageValueMultiplier;
        /* 0x264 */ public float DockingWaitDistance;
        /* 0x268 */ public int MaxNumActiveTraders;
        /* 0x26C */ public float MaxNumActiveTraderRadius;
        /* 0x270 */ public int MaxNumActivePolice;
        /* 0x274 */ public float MaxNumActivePoliceRadius;
        /* 0x278 */ public int MinAggroDamage;
        /* 0x27C */ public float TrailLandingFadeTime;
        /* 0x280 */ public bool EnergyShieldsEnabled;
        /* 0x281 */ public NMSString0x80 EnergyShield;
        /* 0x308 */ public NMSString0x10 EnergyShieldDepletedEffect;
        /* 0x318 */ public NMSString0x10 EnergyShieldStartRechargeEffect;
        /* 0x328 */ public NMSString0x10 EnergyShieldStartRechargeFromDepletedEffect;
        /* 0x338 */ public bool EnergyShieldAlwaysVisible;
        /* 0x33C */ public float EnergyShieldFadeMinOpacityInCombat;
        /* 0x340 */ public float EnergyShieldFadeNonPlayerHitOpacity;
        /* 0x344 */ public float EnergyShieldFadeInRate;
        /* 0x348 */ public float EnergyShieldFadeOutRate;
        /* 0x34C */ public float MinLaserFireTime;
        /* 0x350 */ public float ShipAlertPirateRange;
        /* 0x354 */ public float PlanetaryPirateHostileShipPerceptionRange;
        /* 0x358 */ public float PlanetaryPirateRaidFocusBuildingsTime;
        /* 0x35C */ public float PlanetaryPirateRaidTradersEngageTime;
        /* 0x360 */ public int PlanetaryPirateRaidMaxTradersJoinCombat;
        /* 0x364 */ public float EscapeRollTimePlanet;
        /* 0x368 */ public float EscapeRollTime;
        /* 0x36C */ public float EscapeRollPlanet;
        /* 0x370 */ public float EscapeRoll;
        /* 0x374 */ public int CrashedShipMinNonBrokenSlots;
        /* 0x378 */ public float CrashedShipBrokenSlotChance;
        /* 0x37C */ public float CrashedShipBrokenTechChance;
        /* 0x380 */ public float CrashedShipRepairSlotCostIncreaseFactor;
        /* 0x384 */ public float CrashedShipGeneralCostDiscount;
        /* 0x388 */ public float CrashedShipTechSlotsCostDiscount;
        /* 0x38C */ public float PirateSpawnSpacing;
        /* 0x390 */ public float DistanceFlareMinDistance;
        /* 0x394 */ public float DistanceFlareRange;
        /* 0x398 */ public float DistanceFlareMinScale;
        /* 0x39C */ public float DistanceFlareMaxScale;
        /* 0x3A0 */ public float DistanceFlareMinSpeed;
        /* 0x3A4 */ public float DistanceFlareSpeedRange;
        /* 0x3A8 */ public float DistanceFlareFlickerFreq;
        /* 0x3AC */ public float DistanceFlareFlickerAmp;
        /* 0x3B0 */ public bool AttackRepositionBoost;
        /* 0x3B1 */ public bool AttackShipsFollowLeader;
        /* 0x3B4 */ public float AttackTooCloseMinRelSpeed;
        [NMS(Size = 0x6)]
        /* 0x3B8 */ public NMSString0x10[] ProjectileWeaponMuzzleFlashes;
        /* 0x418 */ public float RewardLootOffset;
        /* 0x41C */ public float RewardLootOffsetSpeed;
        /* 0x420 */ public float RewardLootAngularSpeed;
        /* 0x424 */ public float FlybyPlanetLandingProbability;
        /* 0x428 */ public GcCombatEffectsComponentData CombatEffectsComponentData;
        /* 0x458 */ public GcSpaceshipTravelData FallbackTravelData;
        /* 0x4A0 */ public GcSpaceshipTravelData SlowCombatEffectAttackTravel;
        /* 0x4E8 */ public float AttackShipAvoidStartTime;
        /* 0x4EC */ public float AttackMinimumTimeBeforeTargetSwitch;
        /* 0x4F0 */ public float PirateExtraDamage;
        [NMS(Size = 0x34, EnumType = typeof(GcBuildingClassification.BuildingClassEnum))]
        /* 0x4F4 */ public bool[] PirateAttackableBuildingClasses;
        /* 0x528 */ public float PirateMaintainBuildingTargetTime;
        /* 0x52C */ public float ShieldCollisionRadiusMultiplier;
        /* 0x530 */ public float CollisionRayLengthMin;
        /* 0x534 */ public float CollisionRayLengthMax;
        /* 0x538 */ public GcSpaceshipTravelData OutpostLanding;
        /* 0x580 */ public GcSpaceshipTravelData PlanetLanding;
        /* 0x5C8 */ public float OutpostLandingNoiseFreq;
        /* 0x5CC */ public float OutpostLandingNoiseAmp;
        /* 0x5D0 */ public float OutpostLandingNoiseOffset;
        /* 0x5D4 */ public float OutpostDockUpAlignMaxAngleFirstPerson;
        /* 0x5D8 */ public float OutpostDockUpAlignMaxAngle;
        /* 0x5DC */ public float OutpostDockMaxApproachSpeed;
        /* 0x5E0 */ public float OutpostDockOverspeedBrake;
        /* 0x5E4 */ public float OutpostDockGetToApproachForce;
        /* 0x5E8 */ public float OutpostDockGetToApproachBrakeForce;
        /* 0x5EC */ public float OutpostDockGetToApproachExtraBrakeForce;
        /* 0x5F0 */ public float OutpostDockApproachSpeedForce;
        /* 0x5F4 */ public float OutpostDockApproachDistance;
        /* 0x5F8 */ public float OutpostDockApproachSpeedUpDamper;
        /* 0x5FC */ public float OutpostDockAIGetToApproachForce;
        /* 0x600 */ public float OutpostDockAIGetToApproachBrakeForce;
        /* 0x604 */ public float OutpostDockAIApproachSpeedForce;
        /* 0x608 */ public float OutpostDockMaxForce;
        /* 0x60C */ public float OutpostDockMinTipLength;
        /* 0x610 */ public float OutpostDockMaxTipLength;
        /* 0x614 */ public float OutpostDockApproachUpAmount;
        /* 0x618 */ public float OutpostDockApproachRenderRadius;
        /* 0x61C */ public float OutpostDockApproachRenderFlickerOffset;
        /* 0x620 */ public float LandingTipAngle;
        /* 0x624 */ public float LandingLongTipAngle;
        /* 0x628 */ public Vector2f SpaceBattleSpawnAngle;
        /* 0x630 */ public Vector2f SpaceBattleSpawnPitch;
        /* 0x638 */ public Vector2f SpaceBattleSpawnOffset;
        /* 0x640 */ public Vector2f SpaceBattleSunHeightAngle;
        /* 0x648 */ public Vector2f SpaceBattleSunAroundAngle;
        /* 0x650 */ public List<Vector2f> SpaceBattleSpawnRange;
        /* 0x660 */ public List<Vector2f> SpaceBattlePirateRange;
        /* 0x670 */ public List<Vector2f> SpaceBattleGuardsRange;
        /* 0x680 */ public float SpaceBattleGuardOffset;
        /* 0x684 */ public float SpaceBattleGuardUpOffset;
        /* 0x688 */ public float SpaceBattleInitialPirateUpOffset;
        /* 0x68C */ public float SpaceBattleInitialPirateOffset;
        /* 0x690 */ public float SpaceBattleObstructionRadius;
        /* 0x694 */ public float SpaceBattleFlybyTime;
        /* 0x698 */ public int SpaceBattleLevel;
        /* 0x69C */ public Vector2f ConeSpawnOffsetFactor;
        /* 0x6A4 */ public float ConeSpawnFlattenUp;
        /* 0x6A8 */ public float ConeSpawnFlattenDown;
        /* 0x6AC */ public bool FreighterAlertLights;
        /* 0x6B0 */ public float FreighterAlertLightCapitalSize;
        /* 0x6B4 */ public NMSString0x80 LegacyHangarFilename;
        /* 0x734 */ public NMSString0x80 HangarFilename;
        /* 0x7B4 */ public float PoliceFreighterWarpOutRange;
        /* 0x7B8 */ public float MissileRange;
        /* 0x7C0 */ public Colour FreighterDoorColourActive;
        /* 0x7D0 */ public Colour FreighterDoorColourInactive;
        /* 0x7E0 */ public Colour AlertLightColour;
        /* 0x7F0 */ public TkHitCurveData FreighterLightHitCurve;
        /* 0x800 */ public float FreighterAlertLightTime;
        /* 0x804 */ public float FreighterAlertLightIntensity;
        /* 0x808 */ public int MaxNumTurretMissiles;
        /* 0x80C */ public float TurretOriginOffset;
        /* 0x810 */ public float TurretAlertLightIntensity;
        /* 0x820 */ public Vector3f TurretAlertLightOffset;
        /* 0x830 */ public bool DisableTradeRoutes;
        /* 0x834 */ public float AttackFreighterGetThereBoost;
        /* 0x838 */ public float AttackFreighterApproach;
        /* 0x83C */ public float AttackFreighterWingmanAlignMinDist;
        /* 0x840 */ public float AttackFreighterWingmanAlignRange;
        /* 0x844 */ public float AttackFreighterApproachDistance;
        /* 0x848 */ public float AttackFreighterAttackRunStartDistance;
        /* 0x84C */ public float AttackFreighterBugOutDistance;
        /* 0x850 */ public float AttackFreighterButOutTurnUp;
        /* 0x854 */ public float AttackFreighterButOutSpeedUp;
        /* 0x858 */ public float AttackFreighterWingmanRadius;
        /* 0x85C */ public float AttackFreighterWingmanOffset;
        /* 0x860 */ public float AttackFreighterWingmanLockAlign;
        /* 0x864 */ public float AttackFreighterWingmanLock;
        /* 0x868 */ public float AttackFreighterWingmanMaxForce;
        /* 0x86C */ public float AttackFreighterAngle;
        /* 0x870 */ public float AttackFreighterRunOffset;
        /* 0x874 */ public float AttackFreighterWingmanStart;
        /* 0x878 */ public float PirateFreighterWarpOffset;
        /* 0x87C */ public Vector2f PirateFreighterAttackRange;
        /* 0x884 */ public float MissileLaunchSpeed;
        /* 0x888 */ public float AttackAfterSpawnTime;
        /* 0x88C */ public Vector2f FreighterMiniSpeeds;
        /* 0x894 */ public float AttackBuildingGetThereBoost;
        /* 0x898 */ public float AttackBuildingApproachDistance;
        /* 0x89C */ public float AttackBuildingRunStartDistance;
        /* 0x8A0 */ public float AttackBuildingAttackRunDistTolerance;
        /* 0x8A4 */ public float AttackBuildingFiringAngleTolerance;
        /* 0x8A8 */ public float AttackBuildingBugOutDistance;
        /* 0x8AC */ public float AttackBuildingBugOutTurnUp;
        /* 0x8B0 */ public float AttackBuildingBugOutSpeedUp;
        /* 0x8B4 */ public float AttackBuildingRunAngleMin;
        /* 0x8B8 */ public float AttackBuildingRunAngleMax;
        /* 0x8BC */ public float AttackBuildingNextRunAngleDeltaMin;
        /* 0x8C0 */ public float AttackBuildingNextRunAngleDeltaMax;
        /* 0x8C4 */ public float AttackBuildingTargetGroundOffsetScaleStart;
        /* 0x8C8 */ public float AttackBuildingTargetGroundOffsetScaleEnd;
        /* 0x8CC */ public float AsteroidShootAngle;
        /* 0x8D0 */ public float TraderWantedTime;
        /* 0x8D4 */ public float TraderRequestTime;
        /* 0x8D8 */ public float TraderPostCombatRequestTime;
        /* 0x8DC */ public float TradingPostTraderRequestTime;
        /* 0x8E0 */ public float TradingPostTraderRange;
        /* 0x8E4 */ public float TradingPostTraderRangeSpace;
        /* 0x8E8 */ public float SpaceStationTraderRequestTime;
        /* 0x8EC */ public float AbandonedSystemShipSpawnProbablity;
        /* 0x8F0 */ public int FlybyCloseOdds;
        /* 0x8F4 */ public float BountySpawnAngle;
        /* 0x8F8 */ public float PoliceLaunchSpeed;
        /* 0x8FC */ public float PoliceLaunchTime;
        /* 0x900 */ public float PolicePauseTime;
        /* 0x904 */ public float PolicePauseTimeSpaceBattle;
        /* 0x908 */ public float PoliceEscapeTime;
        /* 0x90C */ public float PoliceEscapeMinTime;
        /* 0x910 */ public float PoliceStationWaveTimer;
        /* 0x914 */ public float PoliceStationEngageRange;
        /* 0x918 */ public int PoliceStationNumToLaunch;
        /* 0x91C */ public int TraderIgnoreHits;
        /* 0x920 */ public float PirateFreighterSpawnAttackAngle;
        /* 0x924 */ public float PirateFreighterSpawnAttackOffset;
        /* 0x928 */ public float PirateFreighterSpawnAttackSpread;
        /* 0x92C */ public float PirateSpawnAngle;
        /* 0x930 */ public float PirateBattleMaxTime;
        /* 0x934 */ public float PirateArriveTime;
        /* 0x938 */ public float PirateStartSpeed;
        /* 0x93C */ public float PirateBattleStartSpeed;
        /* 0x940 */ public float PirateInterestTime;
        /* 0x944 */ public float PirateBattleInterestTime;
        /* 0x948 */ public float TraderArriveSpeed;
        /* 0x94C */ public float TraderArriveTime;
        /* 0x950 */ public float HeightTestSampleDistance;
        /* 0x954 */ public float HeightTestSampleTime;
        /* 0x958 */ public float OutpostToLandingDistance;
        /* 0x95C */ public bool FreightersSamePalette;
        /* 0x960 */ public float PlanetUpAlignTime;
        /* 0x964 */ public float CollisionReactionTime;
        /* 0x968 */ public float FreighterScale;
        /* 0x96C */ public bool PoliceSpawnEffect;
        /* 0x970 */ public int MaxNumFreighters;
        /* 0x974 */ public float ShipSpawnStationRadius;
        /* 0x978 */ public float ShipSpawnAnomalyRadius;
        /* 0x97C */ public float BattleSpawnStationMinDistance;
        /* 0x980 */ public float PoliceSpawnViewAngle;
        /* 0x984 */ public float PoliceEntranceStartTime;
        /* 0x988 */ public float PoliceEntranceProbe;
        /* 0x98C */ public float PoliceEntranceEscalateProbingTime;
        /* 0x990 */ public float PoliceEntranceEscalateIncomingTime;
        /* 0x994 */ public float PoliceEntranceCargoScanStartTime;
        /* 0x998 */ public float PoliceEntranceCargoProbingTime;
        /* 0x99C */ public float PoliceEntranceCargoOpenCommsWaitTime;
        /* 0x9A0 */ public float PoliceEntranceCargoAttackWaitTime;
        /* 0x9A4 */ public float PoliceEntranceCargoScanHailNotificationWaitTime;
        /* 0x9A8 */ public float PoliceArriveTime;
        /* 0x9AC */ public float PoliceAbortRange;
        /* 0x9B0 */ public float PoliceWarnBeaconPulseTime;
        /* 0x9B4 */ public float ArrivalStaggerOffset;
        /* 0x9B8 */ public float TrailScaleMinDistance;
        /* 0x9BC */ public float TrailScale;
        /* 0x9C0 */ public float TrailScaleRange;
        /* 0x9C4 */ public float TrailScaleMaxScale;
        /* 0x9C8 */ public float TrailScaleFreighterMaxScale;
        /* 0x9CC */ public TkCurveType TrailScaleCurve;
        /* 0x9D0 */ public float TradeRouteSeekOutpostRange;
        /* 0x9D4 */ public float TradeRouteFollowOffset;
        /* 0x9D8 */ public NMSString0x100 TradeRouteIcon;
        /* 0xAD8 */ public float TradeRouteSpawnDistance;
        /* 0xADC */ public float TradeRouteTrailDrawDistance;
        /* 0xAE0 */ public float TradeRouteTrailFadeTime;
        /* 0xAE4 */ public float TradeRouteTrailTimeOffset;
        /* 0xAE8 */ public float TradeRouteStationRadius;
        /* 0xAEC */ public float TradeRouteSpeed;
        /* 0xAF0 */ public float TradeRouteSlowRange;
        /* 0xAF4 */ public float TradeRouteSlowSpeed;
        /* 0xAF8 */ public int TradeRouteDivisions;
        /* 0xAFC */ public float TradeRouteFlickerFreq;
        /* 0xB00 */ public float TradeRouteFlickerAmp;
        /* 0xB04 */ public int TradeRouteMaxNum;
        /* 0xB08 */ public List<Colour> TradeRouteColours;
        /* 0xB18 */ public bool EnableLoot;
        /* 0xB1C */ public float LaserHitOffset;
        /* 0xB20 */ public float DirectionBrakeThresholdSq;
        /* 0xB24 */ public int PoliceNumPerTarget;
        /* 0xB28 */ public Vector2f PoliceSideOffset;
        /* 0xB30 */ public Vector2f PoliceUpOffset;
        /* 0xB38 */ public float WitnessHearingRange;
        /* 0xB3C */ public float WitnessSightRange;
        /* 0xB40 */ public float WitnessSightAngle;
        /* 0xB44 */ public float FreighterImpactScale;
        /* 0xB48 */ public float FreighterAlertThreshold;
        /* 0xB4C */ public float FreighterAttackDisengageDistance;
        /* 0xB50 */ public float FreighterAttackAlertThreshold;
        /* 0xB54 */ public float FreighterAlertTimeOutRate;
        /* 0xB58 */ public float FreighterAlertTimeOutMinTime;
        /* 0xB5C */ public float FreighterShipLaunchSpeed;
        /* 0xB60 */ public float FreighterLaunchTime;
        /* 0xB64 */ public float FreighterLaunchStartTime;
        /* 0xB68 */ public bool FreighterIgnorePlayer;
        /* 0xB6C */ public int FreighterNotifySquadAlertLevel;
        /* 0xB70 */ public int FreighterMaxNumLaunchedShips;
        /* 0xB74 */ public float FreighterSpawnMargin;
        /* 0xB78 */ public float FreighterSpawnRadius;
        /* 0xB7C */ public float FreighterSpawnRate;
        /* 0xB80 */ public float FreighterSpawnViewAngle;
        /* 0xB84 */ public float FreighterSpawnVisibleFreightersDistance;
        /* 0xB88 */ public float FrigateSpawnMargin;
        /* 0xB8C */ public float EngineFlareAccelMin;
        /* 0xB90 */ public float EngineFlareAccelMax;
        /* 0xB94 */ public float EngineFlareSizeMin;
        /* 0xB98 */ public float EngineFlareSizeMax;
        /* 0xB9C */ public float EngineFlareVibrateAmp;
        /* 0xBA0 */ public float EngineFlareVibrateFreq;
        /* 0xBA4 */ public float EngineFlareOffset;
        /* 0xBA8 */ public float EngineFireSize;
        /* 0xBAC */ public float PitchFlip;
        /* 0xBB0 */ public float AttackAimTime;
        /* 0xBB4 */ public float AttackRunSlowdown;
        /* 0xBB8 */ public float PiratePlayerAttackRange;
        /* 0xBBC */ public float MoveHeightAdjust;
        /* 0xBC0 */ public float MoveAvoidRange;
        /* 0xBC4 */ public int MoveHeightNumSamples;
        /* 0xBC8 */ public float MoveHeightSampleSectionSize;
        /* 0xBCC */ public float MoveHeightCheckTime;
        /* 0xBD0 */ public float TurretRandomOffset;
        /* 0xBD4 */ public float TurretRandomAIShipOffset;
        /* 0xBD8 */ public float PoliceLaunchDistance;
        /* 0xBDC */ public float Scaler;
        /* 0xBE0 */ public float ScaleTime;
        /* 0xBE4 */ public float ScalerMinDist;
        /* 0xBE8 */ public float ScalerMaxDist;
        /* 0xBEC */ public float ScaleHeightMin;
        /* 0xBF0 */ public float ScaleHeightMax;
        /* 0xBF4 */ public bool ScaleDisabledWhenOnFreighter;
        /* 0xBF8 */ public float WarpInPlayerLocatorTime;
        /* 0xBFC */ public float WarpInPlayerLocatorMinOffset;
        /* 0xC00 */ public float WarpInTime;
        /* 0xC04 */ public float WarpFadeInTime;
        /* 0xC08 */ public float WarpInTimeFreighter;
        /* 0xC0C */ public TkCurveType WarpInCurve;
        /* 0xC10 */ public float WarpInVariance;
        /* 0xC14 */ public float WarpInDistance;
        /* 0xC18 */ public float WarpInPostSpeed;
        /* 0xC1C */ public float WarpInPostSpeedFreighter;
        /* 0xC20 */ public float WarpInAudioFXDelay;
        /* 0xC24 */ public float WarpOutDistance;
        [NMS(Size = 0x6)]
        /* 0xC28 */ public NMSString0x10[] WarpStartEffectIDs;
        [NMS(Size = 0x6)]
        /* 0xC88 */ public NMSString0x10[] WarpArriveEffectIDs;
        /* 0xCE8 */ public float ShipEscortLockOnDistance;
        /* 0xCEC */ public float ShipEscortVelocityBand;
        /* 0xCF0 */ public float ShipEscortVelocityBandForce;
        /* 0xCF4 */ public float ShipEscortFwdForceTime;
        /* 0xCF8 */ public float ShipEscortBackForceTime;
        /* 0xCFC */ public float ShipEscortPerpForceTime;
        /* 0xD00 */ public float ShipEscortRadialOffsetScaleMin;
        /* 0xD04 */ public float ShipEscortRadialOffsetScaleMax;
        /* 0xD08 */ public float ShipEscortForwardOffsetScaleMin;
        /* 0xD0C */ public float ShipEscortForwardOffsetScaleMax;
        /* 0xD10 */ public float PirateFlybyLength;
        /* 0xD14 */ public float FlybyLength;
        /* 0xD18 */ public float FlybyHeight;
        /* 0xD1C */ public float FlybyOffset;
        /* 0xD20 */ public GcProjectileLineData ShipBullet;
        /* 0xD48 */ public float WingmanLockDistance;
        /* 0xD4C */ public float WingmanLockBetweenTime;
        /* 0xD50 */ public float WingmanLockArriveTime;
        /* 0xD54 */ public float WingmanMinHeight;
        /* 0xD58 */ public float WingmanHeightAdjust;
        /* 0xD5C */ public float WingmanStartTime;
        /* 0xD60 */ public float WingmanOffsetStart;
        /* 0xD64 */ public float WingmanOffset;
        /* 0xD68 */ public float WingmanSideOffset;
        /* 0xD6C */ public float WingmanRotate;
        /* 0xD70 */ public float WingmanAtTime;
        /* 0xD74 */ public float WingmanAtTimeBack;
        /* 0xD78 */ public float WingmanPerpTime;
        /* 0xD7C */ public float WingmanVelocityBand;
        /* 0xD80 */ public float WingmanVelocityBandForce;
        /* 0xD84 */ public float TraderAtTime;
        /* 0xD88 */ public float TraderAtTimeBack;
        /* 0xD8C */ public float TraderPerpTime;
        /* 0xD90 */ public float TraderVelocityBand;
        /* 0xD94 */ public float TraderVelocityBandForce;
        /* 0xD98 */ public float WingmanAlign;
        /* 0xD9C */ public float WarpSpeed;
        /* 0xDA0 */ public float WarpForce;
        /* 0xDA4 */ public float TrailSpeedFadeMinSpeed;
        /* 0xDA8 */ public float TrailSpeedFadeFalloff;
        /* 0xDAC */ public float DockingLandingTime;
        /* 0xDB0 */ public float DockingLandingTimeDirectional;
        /* 0xDB4 */ public float DockingSpringTime;
        /* 0xDB8 */ public float DockingLandingBounceTime;
        /* 0xDBC */ public float DockingLandingBounceHeight;
        /* 0xDC0 */ public float DockingRotateStartTime;
        /* 0xDC4 */ public float DockingRotateSpeed;
        /* 0xDC8 */ public float DockWaitMinTime;
        /* 0xDCC */ public float DockWaitMaxTime;
        /* 0xDD0 */ public float TakeOffHoverPointReachedDistance;
        /* 0xDD4 */ public float TakeOffExitHeightOffset;
        /* 0xDD8 */ public float TakeOffExtraAIHeight;
        /* 0xDDC */ public float LandingManuevreTime;
        /* 0xDE0 */ public float LandingManeuvreAlignTime;
        /* 0xDE4 */ public float LandingHoverPointReachedDistance;
        /* 0xDE8 */ public float LandingDirectionalHoverPointReachedDistance;
        /* 0xDEC */ public float AtmosphereTerminalSpeed;
        /* 0xDF0 */ public float CircleApproachDistance;
        /* 0xDF4 */ public float TravelMinBoostTime;
        /* 0xDF8 */ public float GroundCircleHeight;
        /* 0xDFC */ public float GroundCircleHeightMax;
        /* 0xE00 */ public float OrbitHeight;
        /* 0xE04 */ public float AtmosphereEffectMin;
        /* 0xE08 */ public float AtmosphereEffectMax;
        /* 0xE0C */ public float MaxTorque;
        /* 0xE10 */ public float ShipAngularFactor;
        /* 0xE14 */ public float RollAmount;
        /* 0xE18 */ public float RollMinTurnAngle;
        /* 0xE1C */ public float FinalDeathExplosionScale;
        /* 0xE20 */ public float FinalDeathExplosionTime;
        /* 0xE24 */ public float FinalDeathFadeTime;
        /* 0xE28 */ public GcShipAIDeathData Death;
        /* 0xE48 */ public GcShipAIPlanetPatrolData WingmanPathData;
        /* 0xE80 */ public List<GcAIShipDebugSpawnData> DebugShipSpawns;
    }
}
