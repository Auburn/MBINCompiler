using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0x48F08DADC5C494F3)]
    public class GcSpaceshipGlobals : NMSTemplate
    {
        /* 0x0000 */ public float MaximumDistanceFromShipWhenExiting;
        /* 0x0004 */ public float MaximumHeightWhenExitingShip;
        /* 0x0008 */ public float DistanceFromShipToAllowSpawningOnFreighter;
        /* 0x000C */ public bool AltControls;
        /* 0x000D */ public bool SpaceMapInWorld;
        /* 0x000E */ public bool _3rdPersonShipEnabled;
        /* 0x000F */ public bool AimZoomAuto;
        /* 0x0010 */ public bool EnableDepthTestedCrosshairSections;
        /* 0x0011 */ public bool CritsFromBehind;
        /* 0x0012 */ public bool DrawLineLockTarget;
        /* 0x0013 */ public bool ApplyHeightForce;
        /* 0x0014 */ public bool ApplyHeightAlign;
        /* 0x0015 */ public bool DoPreCollision;
        /* 0x0016 */ public bool SpeedTrackModeEnabled;
                     [NMS(Size = 0x01, Ignore = true)]
        /* 0x0017 */ public byte[] Padding17;
        /* 0x0018 */ public int TrailMaxNumPointsPerFrameOverride;
        /* 0x001C */ public float TestTrailSpeed;
        /* 0x0020 */ public float TestTrailRadius;
        /* 0x0024 */ public float CockpitExitAnimTime;
        /* 0x0028 */ public float CockpitExitAnimOffset;
        /* 0x002C */ public TkCurveType CockpitExitAnimCurve;
        /* 0x0030 */ public float LandingHoverOffset;
        /* 0x0034 */ public float LandingMaxSpeed;
        /* 0x0038 */ public float LandingMargin;
        /* 0x003C */ public float LandingTooManyLowPointsFraction;
        /* 0x0040 */ public float WingmanSpeedTrackForceMax;
        /* 0x0044 */ public float WingmanSpeedTrackForceMin;
        /* 0x0048 */ public float WingmanSpeedTrackDistance;
        /* 0x004C */ public float WingmanSpeedTrackOffset;
        /* 0x0050 */ public float WingmanSpeedApproachSpeed;
        /* 0x0054 */ public float WingmanSpeedApproachSpeedSpace;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x0058 */ public byte[] Padding58;
        /* 0x0060 */ public Vector4f DebugShipSpawnPos;
        /* 0x0070 */ public Vector4f DebugShipSpawnFacing;
        /* 0x0080 */ public Vector4f DebugShipSpawnUp;
        /* 0x0090 */ public float DockingAttractAlign;
        /* 0x0094 */ public float DockingAttractAlignRange;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x0098 */ public byte[] Padding98;
        /* 0x00A0 */ public Colour LandingEffectSpaceColourOverride;
        /* 0x00B0 */ public Colour GroundEffectBuildingColour;
        /* 0x00C0 */ public Colour GroundEffectWaterColour;
        /* 0x00D0 */ public float GroundNearEffectLightFactor;
        /* 0x00D4 */ public float GroundNearEffectWaterLightFactor;
        /* 0x00D8 */ public float GroundWaterSpeedFactor;
        /* 0x00DC */ public float AtmosphereLightIntensity;
        /* 0x00E0 */ public Vector4f AtmosphereLightOffset;
        /* 0x00F0 */ public float OutpostDockSpeedAlignMinDistance;
        /* 0x00F4 */ public float OutpostDockSpeedAlignRange;
        /* 0x00F8 */ public float NearGroundPitchCorrectMinHeight;
        /* 0x00FC */ public float NearGroundPitchCorrectRange;
        /* 0x0100 */ public float NearGroundPitchCorrectMinHeightRemote;
        /* 0x0104 */ public float NearGroundPitchCorrectRangeRemote;
        /* 0x0108 */ public float MiniWarpMarkerApproachSlowdown;
        /* 0x010C */ public float MiniWarpMarkerAlignSlowdown;
        /* 0x0110 */ public float MiniWarpMarkerAlignSlowdownRange;
        /* 0x0114 */ public float MiniWarpAlignSlerp;
        /* 0x0118 */ public float WarpInTime;
        /* 0x011C */ public float WarpInFlashTime;
        /* 0x0120 */ public float WarpInRange;
        /* 0x0124 */ public float WarpScale;
        /* 0x0128 */ public float WarpInTimeFreighter;
        /* 0x012C */ public float WarpInFlashTimeFreighter;
        /* 0x0130 */ public float WarpInRangeFreighter;
        /* 0x0134 */ public float WarpScaleFreighter;
        /* 0x0138 */ public float WarpFadeInTime;
        /* 0x013C */ public float WarpInLineWidth;
        /* 0x0140 */ public TkCurveType WarpInCurve;
        /* 0x0144 */ public float WarpOutRange;
        /* 0x0148 */ public float WarpOutTime;
        /* 0x014C */ public float NetworkDockSearchRadius;
        /* 0x0150 */ public float DirectionDockingIndicatorRange;
        /* 0x0154 */ public float DirectionDockingIndicatorMinHeight;
        /* 0x0158 */ public float DirectionDockingIndicatorMaxHeight;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x015C */ public byte[] Padding15C;
        /* 0x0160 */ public Colour DirectionDockingInRangeColour;
        /* 0x0170 */ public Colour DirectionDockingOutRangeColour;
        /* 0x0180 */ public float DirectionDockingCircleOffset;
        /* 0x0184 */ public float DirectionDockingCircleOffsetExtra;
        /* 0x0188 */ public float DirectionDockingCircleWidth;
        /* 0x018C */ public float DirectionDockingCircleRadius;
        /* 0x0190 */ public float DirectionDockingCircleRadiusExtra;
        /* 0x0194 */ public float DirectionDockingIndicatorSpeed;
        /* 0x0198 */ public TkCurveType DirectionDockingIndicatorCurve;
        /* 0x019C */ public float ExhaustSpeed;
        /* 0x01A0 */ public float GroundNearEffectHeight;
        /* 0x01A4 */ public float GroundNearEffectRange;
        /* 0x01A8 */ public float GroundNearEffectNormalOffset;
        /* 0x01AC */ public float GroundNearEffectBuildingFade;
        /* 0x01B0 */ public bool TestShipAnims;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x01B1 */ public byte[] Padding1B1;
        /* 0x01B4 */ public float TestShipAnimRoll;
        /* 0x01B8 */ public float TestShipAnimThrust;
        /* 0x01BC */ public float TestShipAnimPulse;
        /* 0x01C0 */ public float TestShipAnimSpace;
        /* 0x01C4 */ public GcSpaceshipAvoidanceData Avoidance;
        /* 0x01E8 */ public float DefaultTrailInitialSpeed;
        /* 0x01EC */ public float DefaultTrailSpeedDamping;
        /* 0x01F0 */ public float DefaultTrailMinForwardSpeed;
        /* 0x01F4 */ public float TrailVelocityFactor;
        /* 0x01F8 */ public float ContrailSpeedDamping;
        /* 0x01FC */ public float MaxOverspeedBrake;
        /* 0x0200 */ public float PostWarpSlowDownTime;
        /* 0x0204 */ public float PulseDrivePlanetApproachMinAngle;
        /* 0x0208 */ public float PulseDrivePlanetApproachMaxAngle;
        /* 0x020C */ public float PulseDrivePlanetApproachHeight;
        /* 0x0210 */ public float TestJetsStage1;
        /* 0x0214 */ public float TestJetsStage2;
        /* 0x0218 */ public float TestJetsBoost;
        /* 0x021C */ public float TestTrailThreshold;
        /* 0x0220 */ public float ContrailDefaultAlpha;
        /* 0x0224 */ public float EngineJetLightIntensityMultiplier;
        /* 0x0228 */ public float EngineEffectsThrustContribution;
        /* 0x022C */ public float TestShieldEffect;
        /* 0x0230 */ public float ShieldEffectHitTime;
        /* 0x0234 */ public TkCurveType ShieldEffectHitCurve;
                     [NMS(Size = 0x08, Ignore = true)]
        /* 0x0238 */ public byte[] Padding238;
        /* 0x0240 */ public GcScanEffectData ShieldEffectScanData;
        /* 0x0290 */ public float _3rdPersonUpOffsetRollChangeSpeed;
        /* 0x0294 */ public float _3rdPersonRollAngle;
        /* 0x0298 */ public float _3rdPersonRollAngleDropship;
        /* 0x029C */ public float _3rdPersonRollAngleScience;
        /* 0x02A0 */ public float _3rdPersonPitchAngle;
        /* 0x02A4 */ public float _3rdPersonYawAngle;
        /* 0x02A8 */ public float _3rdPersonYawAngleLateralExtra;
        /* 0x02AC */ public float _3rdPersonAngleSpringTime;
        /* 0x02B0 */ public float _3rdPersonAngleMinSpeed;
        /* 0x02B4 */ public float _3rdPersonAngleSpeedRangePitch;
        /* 0x02B8 */ public float _3rdPersonAngleSpeedRangeYaw;
        /* 0x02BC */ public float _3rdPersonLowHeightMin;
        /* 0x02C0 */ public float _3rdPersonLowHeightMax;
        /* 0x02C4 */ public float _3rdPersonLowHeightOffsetVertRotationY;
        /* 0x02C8 */ public float _3rdPersonLowHeightOffsetY;
        /* 0x02CC */ public float _3rdPersonLowHeightSpringTime;
        /* 0x02D0 */ public float _3rdPersonAvoidanceAdjustPitchFactor;
        /* 0x02D4 */ public float _3rdPersonHeightForceAdjustPitchFactor;
        /* 0x02D8 */ public float _3rdPersonAvoidanceAdjustRollFactor;
        /* 0x02DC */ public float _3rdPersonAvoidanceAdjustYawFactor;
        /* 0x02E0 */ public float _3rdPersonFlashIntensity;
        /* 0x02E4 */ public float _3rdPersonFlashDuration;
        /* 0x02E8 */ public float _3rdPersonTransitionTime;
        /* 0x02EC */ public float CockpitRollAngleExtra;
        /* 0x02F0 */ public float CockpitRollAngle;
        /* 0x02F4 */ public float CockpitRollTime;
        /* 0x02F8 */ public float CockpitRollMultiplierCentre;
        /* 0x02FC */ public float CockpitRollMultiplierOpposite;
        /* 0x0300 */ public float CockpitDriftAngle;
        /* 0x0304 */ public float AvoidancePower;
        /* 0x0308 */ public float AvoidanceDistancePower;
        /* 0x030C */ public float CollisionDeflectForce;
        /* 0x0310 */ public float CollisionAlignStrength;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0314 */ public byte[] Padding314;
        /* 0x0320 */ public Vector4f DefaultCentreOffset;
        /* 0x0330 */ public Vector4f DefaultCentreOffsetDropship;
        /* 0x0340 */ public Vector4f DefaultCentreOffsetScientific;
        /* 0x0350 */ public Vector4f DefaultCentreOffsetRoyal;
        /* 0x0360 */ public float WeaponDamagePotentialReferenceRange;
        /* 0x0364 */ public float DirectionBrakeVerticalMultiplier;
        /* 0x0368 */ public float LateralDriftRollAmount;
        /* 0x036C */ public float LateralDriftRange;
        /* 0x0370 */ public float PadTurnSpeed;
        /* 0x0374 */ public float KBThrustSmoothTime;
        /* 0x0378 */ public float HoverTakeoffHeight;
        /* 0x037C */ public float HoverTime;
        /* 0x0380 */ public float HoverAlignTime;
        /* 0x0384 */ public float HoverSpeedFactor;
        /* 0x0388 */ public float HoverHeightFactor;
        /* 0x038C */ public float HoverMinSpeed;
        /* 0x0390 */ public float HoverLandReachedMinTime;
        /* 0x0394 */ public float HoverLandReachedDistance;
        /* 0x0398 */ public float HoverLandManeuvreTimeMin;
        /* 0x039C */ public float HoverLandManeuvreTimeMax;
        /* 0x03A0 */ public float HoverLandManeuvreBrake;
        /* 0x03A4 */ public float LandingOnGroundTip;
        /* 0x03A8 */ public bool LandingCheckBuildings;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x03A9 */ public byte[] Padding3A9;
        /* 0x03AC */ public float LandingCheckBuildingRadiusFactor;
        /* 0x03B0 */ public float AutoLevelWaterMargin;
        /* 0x03B4 */ public float AutoLevelWaterTorque;
        /* 0x03B8 */ public float AutoLevelWaterAngle;
        /* 0x03BC */ public float AutoLevelPitchCorrectMargin;
        /* 0x03C0 */ public Vector4f PostCollisionAngularFactor;
        /* 0x03D0 */ public float DrawLineLockTargetLineWidth;
        /* 0x03D4 */ public float DamageFlashScale;
        /* 0x03D8 */ public float DamageFlashMin;
        /* 0x03DC */ public float LandingButtonMinTime;
        /* 0x03E0 */ public float LandingPushNoseUpFactor;
        /* 0x03E4 */ public float GroundHeightSoftForce;
        /* 0x03E8 */ public float GroundHeightSoft;
        /* 0x03EC */ public float GroundHeightSoftHorizontal;
        /* 0x03F0 */ public TkCurveType GroundHeightSoftCurve;
        /* 0x03F4 */ public float GroundHeightHard;
        /* 0x03F8 */ public float GroundHeightHardHorizontal;
        /* 0x03FC */ public TkCurveType GroundHeightHardCurve;
        /* 0x0400 */ public float GroundHeightPostCollisionMultiplier;
        /* 0x0404 */ public float GroundHeightPostCollisionMultiplierTime;
        /* 0x0408 */ public float GroundHeightDownSpeedMultiplier;
        /* 0x040C */ public float GroundHeightBrakeMultiplier;
        /* 0x0410 */ public float CockpitPitchCorrectAngle;
        /* 0x0414 */ public float PitchCorrectDownSpeedMinSpeed;
        /* 0x0418 */ public float PitchCorrectDownSpeedRange;
        /* 0x041C */ public float PitchCorrectDownSpeedSoftAngle;
        /* 0x0420 */ public float PitchCorrectDownSpeedMaxDownAngle;
        /* 0x0424 */ public float PitchCorrectDownSpeedHeightMin;
        /* 0x0428 */ public float PitchCorrectDownSpeedHeightMax;
        /* 0x042C */ public float PitchCorrectCockpitSpring;
        /* 0x0430 */ public float PitchCorrectSoftDownAngle;
        /* 0x0434 */ public float PitchCorrectMaxDownAngle;
        /* 0x0438 */ public float PitchCorrectMaxDownAnglePostCollision;
        /* 0x043C */ public float PitchCorrectSoftDownAnglePostCollision;
        /* 0x0440 */ public float PitchCorrectMaxDownAngleWater;
        /* 0x0444 */ public float PitchCorrectSoftDownAngleWater;
        /* 0x0448 */ public float PitchCorrectTimeMin;
        /* 0x044C */ public float PitchCorrectTimeMax;
        /* 0x0450 */ public float PitchCorrectTimeHeight;
        /* 0x0454 */ public float PitchCorrectHeightSpring;
        /* 0x0458 */ public float PitchCorrectHeightMin;
        /* 0x045C */ public float PitchCorrectHeightMax;
        /* 0x0460 */ public TkCurveType PitchCorrectHeightCurve;
        /* 0x0464 */ public TkCurveType LandingCurve;
        /* 0x0468 */ public TkCurveType LandingCurveHeavy;
        /* 0x046C */ public GcPlayerSpaceshipControlData Control;
        /* 0x0568 */ public GcPlayerSpaceshipControlData ControlLight;
        /* 0x0664 */ public GcPlayerSpaceshipControlData ControlHeavy;
        /* 0x0760 */ public GcPlayerSpaceshipClassBonuses ControlBonusC;
        /* 0x0790 */ public GcPlayerSpaceshipClassBonuses ControlBonusB;
        /* 0x07C0 */ public GcPlayerSpaceshipClassBonuses ControlBonusA;
        /* 0x07F0 */ public GcPlayerSpaceshipClassBonuses ControlBonusS;
        /* 0x0820 */ public float HaulerTakeOffMod;
        /* 0x0824 */ public float FighterTakeOffMod;
        /* 0x0828 */ public float ShuttleTakeOffMod;
        /* 0x082C */ public float ExplorerTakeOffMod;
        /* 0x0830 */ public float RoyalTakeOffMod;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0834 */ public byte[] Padding834;
        /* 0x0840 */ public Colour AlarmLightColour;
                     [NMS(Size = 0x02)]
        /* 0x0850 */ public Vector4f[] AlarmLightOffsets;
        /* 0x0870 */ public float AlarmLightIntensity;
        /* 0x0874 */ public float AlarmRate;
        /* 0x0878 */ public float LockTargetMinDistance;
        /* 0x087C */ public float LockTargetRange;
        /* 0x0880 */ public float LockTargetMinScale;
        /* 0x0884 */ public float LockTargetMaxScale;
        /* 0x0888 */ public float AutoLevelMinPitchAngle;
        /* 0x088C */ public float AutoLevelMaxPitchAngle;
        /* 0x0890 */ public float AutoLevelMinAngle;
        /* 0x0894 */ public float AutoLevelMaxAngle;
        /* 0x0898 */ public bool AutoEjectOnLanding;
        /* 0x0899 */ public bool LandedCockpitFreeLook;
                     [NMS(Size = 0x02, Ignore = true)]
        /* 0x089A */ public byte[] Padding89A;
        /* 0x089C */ public float FrigateTargetLockRange;
        /* 0x08A0 */ public float TargetLockRange;
        /* 0x08A4 */ public float TargetLockNearestAngle;
        /* 0x08A8 */ public float RemotePlayerLockTimeAfterShot;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x08AC */ public byte[] Padding8AC;
        /* 0x08B0 */ public Colour TargetLockPassiveColour;
        /* 0x08C0 */ public Colour TargetLockDangerColour;
        /* 0x08D0 */ public float ShieldRechargeMinHitTime;
        /* 0x08D4 */ public float ShieldRechargeRate;
        /* 0x08D8 */ public float NoBoostStationDistance;
        /* 0x08DC */ public float NoBoostAnomalyDistance;
        /* 0x08E0 */ public float NoBoostSpaceAnomalyDistance;
        /* 0x08E4 */ public float NoBoostFreighterDistance;
        /* 0x08E8 */ public float NoBoostFreighterAngle;
        /* 0x08EC */ public float NoBoostShipDistance;
        /* 0x08F0 */ public float NoBoostShipNearMinTime;
        /* 0x08F4 */ public float NoBoostShipLastHitTime;
        /* 0x08F8 */ public float NoBoostCombatEventTime;
        /* 0x08FC */ public float ThrustDecaySpring;
        /* 0x0900 */ public float DriftEffectIntensity;
        /* 0x0904 */ public float SpeedCoolOffset;
        /* 0x0908 */ public float SpeedCoolNormalSpeedAmount;
        /* 0x090C */ public int HitAsteroidDamage;
        /* 0x0910 */ public float CameraPostWarpFovTime;
        /* 0x0914 */ public float CameraPostWarpFov;
        /* 0x0918 */ public float NormalModeTakeOffCostMultiplier;
        /* 0x091C */ public float SurvivalTakeOffCostMultiplier;
        /* 0x0920 */ public float PlayerFreighterClearSpaceRadius;
        /* 0x0924 */ public float DriftSpring;
        /* 0x0928 */ public float DriftTurnStrengthMultiplier;
        /* 0x092C */ public float DriftTurnBrakeMultiplier;
        /* 0x0930 */ public float TurnRudderStrength;
        /* 0x0934 */ public float MuzzleLightIntensity;
        /* 0x0938 */ public float MuzzleAnimSpeed;
        /* 0x093C */ public TkCurveType MuzzleLightCurve;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x094C */ public byte[] Padding94C;
        /* 0x0950 */ public Colour MuzzleLightColour;
        /* 0x0960 */ public Vector4f DamageLightOffsetTop;
        /* 0x0970 */ public Vector4f DamageLightOffsetLeft;
        /* 0x0980 */ public Vector4f DamageLightOffsetRight;
        /* 0x0990 */ public float DamageLightIntensity;
        /* 0x0994 */ public TkCurveType DamageLightCurve;
                     [NMS(Size = 0x0C, Ignore = true)]
        /* 0x09A4 */ public byte[] Padding9A4;
        /* 0x09B0 */ public Colour DamageLightColourShield;
        /* 0x09C0 */ public Colour DamageLightColour;
        /* 0x09D0 */ public bool AltAtmosphere;
                     [NMS(Size = 0x03, Ignore = true)]
        /* 0x09D1 */ public byte[] Padding9D1;
        /* 0x09D4 */ public float AsteroidHitAngle;
        /* 0x09D8 */ public float AsteroidHitAngleBoosting;
        /* 0x09DC */ public float AimCritAngle;
        /* 0x09E0 */ public float AimCritMinFwdAngle;
        /* 0x09E4 */ public float AimCritBehindAngle;
        /* 0x09E8 */ public float MissileShootTime;
        /* 0x09EC */ public float CruiseHeight;
        /* 0x09F0 */ public float CruiseHeightRange;
        /* 0x09F4 */ public float CruiseOffAngle;
        /* 0x09F8 */ public float CruiseOffAngleRange;
        /* 0x09FC */ public float CruiseForce;
        /* 0x0A00 */ public float HoverMaxSpeed;
        /* 0x0A04 */ public float HoverStopTime;
        /* 0x0A08 */ public float LandOffset;
        /* 0x0A0C */ public float AimFoVBoost;
        /* 0x0A10 */ public float AimFoVBoostTime;
        /* 0x0A14 */ public float AimFoVBoostTimeAuto;
        /* 0x0A18 */ public float AimTurnSlower;
        /* 0x0A1C */ public float AimMaxAutoAngle;
        /* 0x0A20 */ public float HoverBrakeStrength;
        /* 0x0A24 */ public float StickyTurnMinAngle;
        /* 0x0A28 */ public float StickyTurnAngleRange;
        /* 0x0A2C */ public float StickyTurnLow;
        /* 0x0A30 */ public float StickyTurnHigh;
        /* 0x0A34 */ public float StickyStickAngle;
        /* 0x0A38 */ public float ShipMotionDeadZone;
        /* 0x0A3C */ public Vector2f DeathSpinRoll;
        /* 0x0A44 */ public Vector2f DeathSpinPitch;
        /* 0x0A4C */ public int MiniWarpLinesNum;
        /* 0x0A50 */ public float MiniWarpLinesSpacing;
        /* 0x0A54 */ public float MiniWarpLinesOffset;
        /* 0x0A58 */ public float MiniWarpLinesHeight;
        /* 0x0A5C */ public float GravityDropMinHeight;
        /* 0x0A60 */ public float GravityDropMaxForceHeight;
        /* 0x0A64 */ public float GravityDropMaxHeight;
        /* 0x0A68 */ public float GravityDropForce;
        /* 0x0A6C */ public GcPlayerStickData StickData;
        /* 0x0A88 */ public float ResourceCollectOffset;
        /* 0x0A8C */ public float AimSpeedTrackDistance;
        /* 0x0A90 */ public float AimSpeedTrackForce;
        /* 0x0A94 */ public float CombatBoostMultiplier;
        /* 0x0A98 */ public float CombatBoostTurnDamp;
        /* 0x0A9C */ public float MarkerEventTime;
        /* 0x0AA0 */ public int GunAmmoMultiplier;
                     [NMS(Size = 0x03)]
        /* 0x0AA4 */ public GcPlayerSpaceshipAim[] LaserAimArray;
        /* 0x0AEC */ public int LaserAimLevel;
                     [NMS(Size = 0x03)]
        /* 0x0AF0 */ public GcPlayerSpaceshipAim[] GunAimArray;
        /* 0x0B38 */ public int TakeOffCost;
        /* 0x0B3C */ public int LandingCost;
        /* 0x0B40 */ public int GunAimLevel;
        /* 0x0B44 */ public GcPlayerSpaceshipAim MissileAim;
        /* 0x0B5C */ public float MissileLockSpeedUp;
        /* 0x0B60 */ public float MissileLockTime;
        /* 0x0B64 */ public float AutoPilotAlignStrength;
        /* 0x0B68 */ public float FreighterApproachDistanceMin;
        /* 0x0B6C */ public float FreighterApproachDistanceMax;
        /* 0x0B70 */ public float FreighterApproachSpeedDamper;
        /* 0x0B74 */ public float FreighterApproachExtraMargin;
        /* 0x0B78 */ public float MiniWarpShakeStrength;
        /* 0x0B7C */ public float MiniWarpPlanetRadius;
        /* 0x0B80 */ public float MiniWarpStationRadius;
        /* 0x0B84 */ public float MiniWarpFuelTime;
        /* 0x0B88 */ public float MiniWarpAlignStrength;
        /* 0x0B8C */ public float MiniWarpChargeTime;
        /* 0x0B90 */ public float MiniWarpSpeed;
        /* 0x0B94 */ public float MiniWarpTopSpeedTime;
        /* 0x0B98 */ public float MiniWarpTime;
        /* 0x0B9C */ public float MiniWarpCooldownTime;
        /* 0x0BA0 */ public float MiniWarpStoppingMarginPlanet;
        /* 0x0BA4 */ public float MiniWarpMinPlanetDistance;
        /* 0x0BA8 */ public float MiniWarpStoppingMarginStation;
        /* 0x0BAC */ public float MiniWarpTrackingMargin;
        /* 0x0BB0 */ public float MiniWarpExitSpeed;
        /* 0x0BB4 */ public float MiniWarpExitSpeedStation;
        /* 0x0BB8 */ public float MiniWarpExitTime;
        /* 0x0BBC */ public float MiniWarpHUDArrowAttractAngle;
        /* 0x0BC0 */ public TkCurveType MiniWarpCurve;
        /* 0x0BC4 */ public float MiniWarpFlashIntensity;
        /* 0x0BC8 */ public float MiniWarpFlashDuration;
        /* 0x0BCC */ public float MiniWarpFlashDelay;
        /* 0x0BD0 */ public float MiniWarpNoAsteroidRadius;
        /* 0x0BD4 */ public float BoostNoAsteroidRadius;
        /* 0x0BD8 */ public float LaserOverheatTime;
        /* 0x0BDC */ public float LaserOverheatDownTime;
        /* 0x0BE0 */ public float LaserCoolFactor;
        /* 0x0BE4 */ public float LaserFireTime;
        /* 0x0BE8 */ public float LaserWaitTime;
        /* 0x0BEC */ public float ProjectileOverheatTime;
        /* 0x0BF0 */ public float ProjectileFireRate;
        /* 0x0BF4 */ public float ProjectileReloadTime;
        /* 0x0BF8 */ public int ProjectileClipSize;
        /* 0x0BFC */ public float SummonShipAnywhereHeightOffset;
        /* 0x0C00 */ public float SummonShipAnywhereFwdOffset;
        /* 0x0C04 */ public float SummonShipAnywhereRangeMax;
        /* 0x0C08 */ public float SummonShipAnywhereRangeMin;
        /* 0x0C0C */ public float SummonShipHeightOffset;
        /* 0x0C10 */ public float SummonShipApproachOffset;
        /* 0x0C14 */ public float LandingHelperMinAngle;
        /* 0x0C18 */ public float LandingHelperTurnTime;
        /* 0x0C1C */ public float LandingHelperRollTime;
        /* 0x0C20 */ public float AnomalyStationMaxApproachSpeed;
        /* 0x0C24 */ public float LandGroundTakeOffTime;
        /* 0x0C28 */ public float LandLookingForward;
        /* 0x0C2C */ public float LandHeightThreshold;
        /* 0x0C30 */ public float LandWidthThreshold;
        /* 0x0C34 */ public float LandSlopeMax;
        /* 0x0C38 */ public float LandingAreaRadius;
        /* 0x0C3C */ public float LandingAreaFloorOffset;
        /* 0x0C40 */ public float TargetLockTime;
        /* 0x0C44 */ public float TargetLockChangeTime;
        /* 0x0C48 */ public float TargetLockLoseTime;
        /* 0x0C4C */ public float BoostChargeRate;
        /* 0x0C50 */ public float DamageMinHitTime;
        /* 0x0C54 */ public float DamageMaxHitTime;
        /* 0x0C58 */ public float DamageMinWoundTime;
        /* 0x0C5C */ public float SpaceBrakeMinAngularSpeed;
        /* 0x0C60 */ public float SpaceBrakeAngularRange;
        /* 0x0C64 */ public float CollisionSpeedDamageAmount;
        /* 0x0C68 */ public float CollisionDeflectTime;
        /* 0x0C6C */ public float CollisionDeflectDamping;
        /* 0x0C70 */ public float CollisionDeflectNormalFactor;
        /* 0x0C74 */ public float CollisionAsteroidDamp;
        /* 0x0C78 */ public float CollisionGroundDamp;
        /* 0x0C7C */ public float CollisionDistance;
        /* 0x0C80 */ public float CollisionDistanceGround;
        /* 0x0C84 */ public float CollisionDistanceAsteroid;
        /* 0x0C88 */ public float CollisionDistanceAsteroidSide;
        /* 0x0C8C */ public float CollisionDistanceSpaceships;
        /* 0x0C90 */ public float DeflectDistance;
        /* 0x0C94 */ public float DeflectAlignTimeMin;
        /* 0x0C98 */ public float DeflectAlignTimeMax;
        /* 0x0C9C */ public TkCurveType DeflectCurve;
        /* 0x0CA0 */ public float CollisionRadiusMultiplier;
        /* 0x0CA4 */ public float GroundHeightHardTimeMin;
        /* 0x0CA8 */ public float GroundHeightHardTimeMax;
        /* 0x0CAC */ public float GroundHeightPostCollisionDamper;
        /* 0x0CB0 */ public float GroundHeightSpeedLength;
        /* 0x0CB4 */ public float GroundHeightSpeedAngle;
        /* 0x0CB8 */ public float GroundHeightSpeedAngleRange;
        /* 0x0CBC */ public int GroundHeightNumRays;
        /* 0x0CC0 */ public float GroundHeightSmoothTime;
        /* 0x0CC4 */ public float LinearDamping;
        /* 0x0CC8 */ public float AngularDamping;
        /* 0x0CCC */ public float DirectionDockingAngle;
        /* 0x0CD0 */ public float DirectionDockTime;
        /* 0x0CD4 */ public float DirectionDockingInfoRange;
        /* 0x0CD8 */ public float LootAttractDistance;
        /* 0x0CDC */ public float LootAttractTime;
        /* 0x0CE0 */ public float LootDampForce;
        /* 0x0CE4 */ public float LootCollectDistance;
        /* 0x0CE8 */ public float GunOffset3rdPersonMultiplier;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x0CEC */ public byte[] PaddingCEC;
        /* 0x0CF0 */ public Vector4f GunOffsetLeft;
        /* 0x0D00 */ public Vector4f GunOffsetRight;
        /* 0x0D10 */ public Vector4f GunOffsetLeft2;
        /* 0x0D20 */ public Vector4f GunOffsetRight2;
        /* 0x0D30 */ public Vector4f GunOffset3rdPersonLeft;
        /* 0x0D40 */ public Vector4f GunOffset3rdPersonRight;
        /* 0x0D50 */ public GcPlayerSpaceshipWarpData Warp;
        /* 0x0D80 */ public float DockingRotateSpeed;
        /* 0x0D84 */ public float EjectAnimSwitchPoint;
        /* 0x0D88 */ public float EjectAnimSpeedFactor;
        /* 0x0D8C */ public float ShipDifferentRepelRange;
        /* 0x0D90 */ public float ShipDifferentRepelAmount;
        /* 0x0D94 */ public float AtmosphereSpeed;
        /* 0x0D98 */ public float AtmosphereAngle;
        /* 0x0D9C */ public float DroneAlignUpTime;
        /* 0x0DA0 */ public float DroneDustHeight;
        /* 0x0DA4 */ public float DroneMinHeight;
        /* 0x0DA8 */ public float DroneHeightAdjust;
        /* 0x0DAC */ public float FreighterSpeed;
        /* 0x0DB0 */ public float DroneWarpTime;
        /* 0x0DB4 */ public float DroneWarpMinForce;
        /* 0x0DB8 */ public float DroneWarpMaxForce;
                     [NMS(Size = 0x04, Ignore = true)]
        /* 0x0DBC */ public byte[] PaddingDBC;
        /* 0x0DC0 */ public Vector4f CockpitScale;
        /* 0x0DD0 */ public float ShakePowerScaler;
        /* 0x0DD4 */ public float ShakeSpeed;
        /* 0x0DD8 */ public float ShakeMaxPower;
        /* 0x0DDC */ public float ShakeMaxSpeed;
        /* 0x0DE0 */ public float ShakeAlignBrake;
        /* 0x0DE4 */ public float WingmanAtTimeStart;
        /* 0x0DE8 */ public float WingmanAtTime;
        /* 0x0DEC */ public float WingmanAtTimeBack;
        /* 0x0DF0 */ public float WingmanPerpTime;
        /* 0x0DF4 */ public float WingmanAttackOffset;
        /* 0x0DF8 */ public float WingmanAttackRange;
        /* 0x0DFC */ public float WingmanAttackMinRange;
        /* 0x0E00 */ public float WingmanAttackAngle;
        /* 0x0E04 */ public float WingmanViewerAngle;
        /* 0x0E08 */ public float WingmanAttackAimAngle;
        /* 0x0E0C */ public float WingmanAttackTime;
        /* 0x0E10 */ public float WingmanAttackTimeout;
        /* 0x0E14 */ public float WingmanAttackCoolTime;
        /* 0x0E18 */ public float WingmanSpawnDist;
        /* 0x0E1C */ public float WingmanAlign;
        /* 0x0E20 */ public float WingmanAngle;
        /* 0x0E24 */ public float WingmanAngle2;
        /* 0x0E28 */ public float WingmanRadius;
        /* 0x0E2C */ public float WingmanFwd1;
        /* 0x0E30 */ public float WingmanFwd2;
        /* 0x0E34 */ public float DronePlanetAttackRange;
        /* 0x0E38 */ public float DronePlanetAttackMinRange;
        /* 0x0E3C */ public float DroneShootTime;
        /* 0x0E40 */ public float DroneAlertAngle;
        /* 0x0E44 */ public float DroneAlertRange;
        /* 0x0E48 */ public float DronePatrolRadius;
        /* 0x0E4C */ public float DroneMoveArrivedRange;
        /* 0x0E50 */ public float DronePatrolTime;
        /* 0x0E54 */ public float ShipEnterRange;
        /* 0x0E58 */ public float ShipEnterAngle;
        /* 0x0E5C */ public float ShipEnterTransitionTime;
        /* 0x0E60 */ public float ShipEnterSpeed;
        /* 0x0E64 */ public float ShipEnterMinTime;
                     [NMS(Size = 0x04)]
        /* 0x0E68 */ public NMSString0x80[] ShipModels;
        /* 0x1068 */ public float HUDBoostUpgradeMultiplier;
        /* 0x106C */ public float LaunchThrustersRegenTimePeriod;
        /* 0x1070 */ public float LaunchThrustersMinimumSummonPercentage;
        /* 0x1074 */ public float LaunchThrustersSummonCostMultiplier;
        /* 0x1078 */ public float SpeedUpDistanceThreshold;
        /* 0x107C */ public float SpeedUpDistanceFadeThreshold;
        /* 0x1080 */ public float SpeedUpVelocityThreshold;
        /* 0x1084 */ public float SpeedUpVelocityCoeff;
        /* 0x1088 */ public float MaxSpeedUpDistance;
        /* 0x108C */ public float MaxSpeedUpVelocity;
    }
}