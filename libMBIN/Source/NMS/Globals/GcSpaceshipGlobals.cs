using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0xC399FD0701997B3A, NameHash = 0xC45203411E9AFE95)]
    public class GcSpaceshipGlobals : NMSTemplate
    {
        /* 0x0000 */ public float ShipThrottleNotchVibrationStrength;
        /* 0x0004 */ public float ShipThrottleBrakeVibrationStrength;
        /* 0x0008 */ public float ShipThrustReverseThreshhold;
        /* 0x000C */ public float ShieldLeechMul;
        /* 0x0010 */ public float AtmosphereCombatHeight;
        /* 0x0018 */ public NMSString0x10 SailShipCoreTechID;
        /* 0x0028 */ public bool AllowSideScreenPointing;
        /* 0x0029 */ public bool AddShipToCollectionOnEnter;
        /* 0x002A */ public bool EnablePulseDriveSpaceStationOrient;
        /* 0x002C */ public float DockingApproachRollHmdMod;
        /* 0x0030 */ public float DockingApproachSpeedHmdMod;
        /* 0x0034 */ public float DockingApproachBrakeHmdMod;
        /* 0x0038 */ public float LandingDirectionalSideOffsetFactor;
        /* 0x003C */ public float LandingHoverOffset;
        /* 0x0040 */ public float LandingMaxSpeed;
        /* 0x0044 */ public float LandingMaxAngle;
        /* 0x0048 */ public float LandingMargin;
        /* 0x004C */ public float LandingObstacleMinHeight;
        /* 0x0050 */ public float LandingTooManyLowPointsFraction;
        /* 0x0054 */ public float VignetteAmountAcceleration;
        /* 0x0058 */ public float VignetteAmountTurning;
        /* 0x005C */ public float PulseDriveBoostDoubleTapTime;
        /* 0x0060 */ public float RudderToRollMultiplierMin;
        /* 0x0064 */ public float RudderToRollMultiplierMax;
        /* 0x0068 */ public float RudderToRollMultiplierOpposite;
        /* 0x006C */ public float RudderToRollMultiplierSpace;
        /* 0x0070 */ public float RudderToRollMultiplierLow;
        /* 0x0074 */ public float RudderToRollCutoffRotation;
        /* 0x0078 */ public float RudderToRollUpsideDownRotation;
        /* 0x007C */ public TkCurveType RudderToRollCurve;
        /* 0x0080 */ public float RudderToRollAngleUpMax;
        /* 0x0084 */ public float RudderToRollAngleDownMin;
        /* 0x0088 */ public float RudderToRollAngleDownMax;
        /* 0x008C */ public float PulseDriveStationApproachAngleMin;
        /* 0x0090 */ public float PulseDriveStationApproachAngleRange;
        /* 0x0094 */ public float PulseDriveStationApproachPerpAngleMin;
        /* 0x0098 */ public float PulseDriveStationApproachPerpAngleRange;
        /* 0x009C */ public float PulseDriveStationApproachOffset;
        /* 0x00A0 */ public float PulseDriveStationApproachSlowdown;
        /* 0x00A4 */ public float PulseDriveStationApproachSlowdownRangeMin;
        /* 0x00A8 */ public float PulseDriveStationApproachSlowdownRange;
        /* 0x00AC */ public float HandControllerActiveBlendMinTime;
        /* 0x00B0 */ public float HandControllerActiveBlendTime;
        /* 0x00C0 */ public Vector3f HandControllerValueMultiplier;
        /* 0x00D0 */ public Vector3f HandControllerValueMultiplierSpace;
        /* 0x00E0 */ public Vector3f HandControllerDeadZone;
        /* 0x00F0 */ public Vector3f HandControllerExtents;
        /* 0x0100 */ public float HandControllerXReorientationMove;
        /* 0x0104 */ public float HandControllerZReorientationMove;
        /* 0x0108 */ public float HandControllerXReorientation;
        /* 0x010C */ public float HandControllerZReorientation;
        /* 0x0110 */ public float HandControllerThrottleDistance;
        /* 0x0114 */ public float HandControllerThrottleRange;
        /* 0x0118 */ public float HandControllerThrottleDeadZone;
        /* 0x011C */ public float HandControllerDirOffsetAngle;
        /* 0x0120 */ public float HandControllerDirOffsetAngleMove;
        /* 0x0124 */ public float CockpitRollAngleHmd;
        /* 0x0128 */ public float CockpitPitchCorrectAngleHmd;
        /* 0x012C */ public float CockpitDriftAngleHmd;
        /* 0x0130 */ public float CockpitRollAngle;
        /* 0x0134 */ public float CockpitPitchCorrectAngle;
        /* 0x0138 */ public float CockpitDriftAngle;
        /* 0x013C */ public float CockpitRollAngleExtra;
        /* 0x0140 */ public float CockpitRollTime;
        /* 0x0144 */ public float CockpitRollMultiplierCentre;
        /* 0x0148 */ public float CockpitRollMultiplierOpposite;
        /* 0x014C */ public float MaximumDistanceFromShipWhenExiting;
        /* 0x0150 */ public float MaximumHeightWhenExitingShip;
        /* 0x0154 */ public float DistanceFromShipToAllowSpawningOnFreighter;
        /* 0x0158 */ public float FreighterBattleIgnoreFriendlyFireDistance;
        /* 0x015C */ public bool AltControls;
        /* 0x015D */ public bool SpaceMapInWorld;
        /* 0x015E */ public bool _3rdPersonShipEnabled;
        /* 0x015F */ public bool AimZoomAuto;
        /* 0x0160 */ public bool EnableDepthTestedCrosshairSections;
        /* 0x0161 */ public bool CritsFromBehind;
        /* 0x0162 */ public bool DrawLineLockTarget;
        /* 0x0163 */ public bool ApplyHeightForce;
        /* 0x0164 */ public bool ApplyHeightAlign;
        /* 0x0165 */ public bool DoPreCollision;
        /* 0x0166 */ public bool SpeedTrackModeEnabled;
        /* 0x0168 */ public int TrailMaxNumPointsPerFrameOverride;
        /* 0x016C */ public float TestTrailSpeed;
        /* 0x0170 */ public float TestTrailRadius;
        /* 0x0174 */ public float CockpitExitAnimTime;
        /* 0x0178 */ public float CockpitExitAnimOffset;
        /* 0x017C */ public TkCurveType CockpitExitAnimCurve;
        /* 0x0180 */ public float WingmanSpeedTrackForceMax;
        /* 0x0184 */ public float WingmanSpeedTrackForceMin;
        /* 0x0188 */ public float WingmanSpeedTrackDistance;
        /* 0x018C */ public float WingmanSpeedTrackOffset;
        /* 0x0190 */ public float WingmanSpeedApproachSpeed;
        /* 0x0194 */ public float WingmanSpeedApproachSpeedSpace;
        /* 0x0198 */ public float DockingAttractAlign;
        /* 0x019C */ public float DockingAttractAlignRange;
        /* 0x01A0 */ public Colour LandingEffectSpaceColourOverride;
        /* 0x01B0 */ public Colour GroundEffectBuildingColour;
        /* 0x01C0 */ public Colour GroundEffectWaterColour;
        /* 0x01D0 */ public float GroundNearEffectLightFactor;
        /* 0x01D4 */ public float GroundNearEffectWaterLightFactor;
        /* 0x01D8 */ public float GroundWaterSpeedFactor;
        /* 0x01DC */ public float AtmosphereLightIntensity;
        /* 0x01E0 */ public Vector3f AtmosphereLightOffset;
        /* 0x01F0 */ public float OutpostDockSpeedAlignMinDistance;
        /* 0x01F4 */ public float OutpostDockSpeedAlignRange;
        /* 0x01F8 */ public float NearGroundPitchCorrectMinHeight;
        /* 0x01FC */ public float NearGroundPitchCorrectRange;
        /* 0x0200 */ public float NearGroundPitchCorrectMinHeightRemote;
        /* 0x0204 */ public float NearGroundPitchCorrectRangeRemote;
        /* 0x0208 */ public float MiniWarpMarkerApproachSlowdown;
        /* 0x020C */ public float MiniWarpMarkerAlignSlowdown;
        /* 0x0210 */ public float MiniWarpMarkerAlignSlowdownRange;
        /* 0x0214 */ public float MiniWarpAlignSlerp;
        /* 0x0218 */ public float WarpInTime;
        /* 0x021C */ public float WarpInFlashTime;
        /* 0x0220 */ public float WarpInRange;
        /* 0x0224 */ public float WarpScale;
        /* 0x0228 */ public float WarpInTimeFreighter;
        /* 0x022C */ public float WarpInFlashTimeFreighter;
        /* 0x0230 */ public float WarpInRangeFreighter;
        /* 0x0234 */ public float WarpScaleFreighter;
        /* 0x0238 */ public float WarpFadeInTime;
        /* 0x023C */ public float WarpInLineWidth;
        /* 0x0240 */ public TkCurveType WarpInCurve;
        /* 0x0244 */ public float WarpOutRange;
        /* 0x0248 */ public float WarpOutTime;
        /* 0x024C */ public float WarpInTimeNexus;
        /* 0x0250 */ public float WarpInFlashTimeNexus;
        /* 0x0254 */ public float WarpInRangeNexus;
        /* 0x0258 */ public float WarpScaleNexus;
        /* 0x025C */ public float WarpNexusRotation;
        /* 0x0260 */ public float WarpNexusPitch;
        /* 0x0264 */ public float WarpNexusDistance;
        /* 0x0268 */ public float NetworkDockSearchRadius;
        /* 0x026C */ public float DirectionDockingIndicatorRange;
        /* 0x0270 */ public float DirectionDockingIndicatorClearAngleRange;
        /* 0x0274 */ public float DirectionDockingIndicatorAngleRange;
        /* 0x0278 */ public float DirectionDockingIndicatorMinHeight;
        /* 0x027C */ public float DirectionDockingIndicatorMaxHeight;
        /* 0x0280 */ public Colour DirectionDockingInRangeColour;
        /* 0x0290 */ public Colour DirectionDockingOutRangeColour;
        /* 0x02A0 */ public float DirectionDockingCircleOffset;
        /* 0x02A4 */ public float DirectionDockingCircleOffsetExtra;
        /* 0x02A8 */ public float DirectionDockingCircleWidth;
        /* 0x02AC */ public float DirectionDockingCircleRadius;
        /* 0x02B0 */ public float DirectionDockingCircleRadiusExtra;
        /* 0x02B4 */ public float DirectionDockingIndicatorSpeed;
        /* 0x02B8 */ public TkCurveType DirectionDockingIndicatorCurve;
        /* 0x02BC */ public float ExhaustSpeed;
        /* 0x02C0 */ public float LowAltitudeAnimationHeight;
        /* 0x02C4 */ public float LowAltitudeAnimationHysteresisTime;
        /* 0x02C8 */ public float LowAltitudeAnimationTime;
        /* 0x02CC */ public float LowAltitudeContrailFadeAtAnimProgress;
        /* 0x02D0 */ public float GroundNearEffectHeight;
        /* 0x02D4 */ public float GroundNearEffectRange;
        /* 0x02D8 */ public float GroundNearEffectNormalOffset;
        /* 0x02DC */ public float GroundNearEffectBuildingFade;
        /* 0x02E0 */ public bool TestShipAnims;
        /* 0x02E4 */ public float TestShipAnimRoll;
        /* 0x02E8 */ public float TestShipAnimThrust;
        /* 0x02EC */ public float TestShipAnimPulse;
        /* 0x02F0 */ public float TestShipAnimSpace;
        /* 0x02F4 */ public float TestShipAnimLowAltitude;
        /* 0x02F8 */ public GcSpaceshipAvoidanceData Avoidance;
        /* 0x031C */ public float DefaultTrailInitialSpeed;
        /* 0x0320 */ public float DefaultTrailSpeedDamping;
        /* 0x0324 */ public float DefaultTrailMinForwardSpeed;
        /* 0x0328 */ public float TrailVelocityFactor;
        /* 0x032C */ public float ContrailSpeedDamping;
        /* 0x0330 */ public float MaxOverspeedBrake;
        /* 0x0334 */ public float PostWarpSlowDownTime;
        /* 0x0338 */ public float PostFreighterWarpTransitionTime;
        /* 0x033C */ public float PulseDrivePlanetApproachMinAngle;
        /* 0x0340 */ public float PulseDrivePlanetApproachMaxAngle;
        /* 0x0344 */ public float PulseDrivePlanetApproachHeight;
        /* 0x0348 */ public float TestJetsStage1;
        /* 0x034C */ public float TestJetsStage2;
        /* 0x0350 */ public float TestJetsBoost;
        /* 0x0354 */ public float TestTrailThreshold;
        /* 0x0358 */ public float ContrailDefaultAlpha;
        /* 0x035C */ public float EngineJetLightIntensityMultiplier;
        /* 0x0360 */ public float EngineEffectsThrustContribution;
        /* 0x0364 */ public float TestShieldEffect;
        /* 0x0368 */ public float ShieldEffectHitTime;
        /* 0x036C */ public TkCurveType ShieldEffectHitCurve;
        /* 0x0370 */ public GcScanEffectData ShieldEffectScanData;
        /* 0x03C0 */ public float AcrobaticLowFlightLevel;
        /* 0x03C4 */ public float _3rdPersonUpOffsetRollChangeSpeed;
        /* 0x03C8 */ public float _3rdPersonRollAngle;
        /* 0x03CC */ public float _3rdPersonRollAngleDropship;
        /* 0x03D0 */ public float _3rdPersonRollAngleScience;
        /* 0x03D4 */ public float _3rdPersonRollAngleAlien;
        /* 0x03D8 */ public float _3rdPersonPitchAngle;
        /* 0x03DC */ public float _3rdPersonYawAngle;
        /* 0x03E0 */ public float _3rdPersonYawAngleLateralExtra;
        /* 0x03E4 */ public float _3rdPersonAngleSpringTime;
        /* 0x03E8 */ public float _3rdPersonAngleMinSpeed;
        /* 0x03EC */ public float _3rdPersonAngleSpeedRangePitch;
        /* 0x03F0 */ public float _3rdPersonAngleSpeedRangeYaw;
        /* 0x03F4 */ public float _3rdPersonLowHeightMin;
        /* 0x03F8 */ public float _3rdPersonLowHeightMax;
        /* 0x03FC */ public float _3rdPersonLowHeightOffsetVertRotationY;
        /* 0x0400 */ public float _3rdPersonLowHeightOffsetY;
        /* 0x0404 */ public float _3rdPersonLowHeightSpringTime;
        /* 0x0408 */ public float _3rdPersonAvoidanceAdjustPitchFactor;
        /* 0x040C */ public float _3rdPersonHeightForceAdjustPitchFactor;
        /* 0x0410 */ public float _3rdPersonAvoidanceAdjustRollFactor;
        /* 0x0414 */ public float _3rdPersonAvoidanceAdjustYawFactor;
        /* 0x0418 */ public float _3rdPersonFlashIntensity;
        /* 0x041C */ public float _3rdPersonFlashDuration;
        /* 0x0420 */ public float _3rdPersonTransitionTime;
        /* 0x0424 */ public float _3rdPersonWarpXWander;
        /* 0x0428 */ public float _3rdPersonWarpYWander;
        /* 0x042C */ public float _3rdPersonWarpZWander;
        /* 0x0430 */ public float _3rdPersonWarpWanderStartTime;
        /* 0x0434 */ public float _3rdPersonWarpWanderSpring;
        /* 0x0438 */ public float _3rdPersonWarpWanderTimeX;
        /* 0x043C */ public float _3rdPersonWarpWanderTimeY;
        /* 0x0440 */ public float _3rdPersonWarpWanderTimeZ;
        /* 0x0444 */ public TkCurveType _3rdPersonWarpWanderCurve;
        /* 0x0448 */ public float AvoidancePower;
        /* 0x044C */ public float AvoidanceDistancePower;
        /* 0x0450 */ public float CollisionDeflectForce;
        /* 0x0454 */ public float CollisionAlignStrength;
        /* 0x0460 */ public Vector3f DefaultCentreOffset;
        /* 0x0470 */ public Vector3f DefaultCentreOffsetDropship;
        /* 0x0480 */ public Vector3f DefaultCentreOffsetScientific;
        /* 0x0490 */ public Vector3f DefaultCentreOffsetRoyal;
        /* 0x04A0 */ public Vector3f DefaultCentreOffsetSail;
        /* 0x04B0 */ public float WeaponDamagePotentialReferenceRange;
        /* 0x04B4 */ public float DirectionBrakeVerticalMultiplier;
        /* 0x04B8 */ public float LateralDriftRollAmount;
        /* 0x04BC */ public float LateralDriftRange;
        /* 0x04C0 */ public float PadTurnSpeed;
        /* 0x04C4 */ public float PadThrustSmoothTime;
        /* 0x04C8 */ public float KBThrustSmoothTime;
        /* 0x04CC */ public float HoverTakeoffHeight;
        /* 0x04D0 */ public float HoverTime;
        /* 0x04D4 */ public float HoverAlignTime;
        /* 0x04D8 */ public float HoverTimeAlt;
        /* 0x04DC */ public float HoverAlignTimeAlt;
        /* 0x04E0 */ public float HoverSpeedFactor;
        /* 0x04E4 */ public float HoverHeightFactor;
        /* 0x04E8 */ public float HoverMinSpeed;
        /* 0x04EC */ public float HoverLandReachedMinTime;
        /* 0x04F0 */ public float HoverLandReachedDistance;
        /* 0x04F4 */ public float HoverLandManeuvreTimeMin;
        /* 0x04F8 */ public float HoverLandManeuvreTimeMax;
        /* 0x04FC */ public float HoverLandManeuvreTimeHmdMin;
        /* 0x0500 */ public float HoverLandManeuvreTimeHmdMax;
        /* 0x0504 */ public float HoverLandManeuvreBrake;
        /* 0x0508 */ public float LandingOnGroundTip;
        /* 0x050C */ public bool LandingCheckBuildings;
        /* 0x0510 */ public float LandingCheckBuildingRadiusFactor;
        /* 0x0514 */ public float AutoLevelWaterMargin;
        /* 0x0518 */ public float AutoLevelWaterTorque;
        /* 0x051C */ public float AutoLevelWaterAngle;
        /* 0x0520 */ public float AutoLevelPitchCorrectMargin;
        /* 0x0530 */ public Vector3f PostCollisionAngularFactor;
        /* 0x0540 */ public float DrawLineLockTargetLineWidth;
        /* 0x0544 */ public float DamageFlashScale;
        /* 0x0548 */ public float DamageFlashMin;
        /* 0x054C */ public float LandingButtonMinTime;
        /* 0x0550 */ public float LandingPushNoseUpFactor;
        /* 0x0554 */ public float GroundHeightSoftForce;
        /* 0x0558 */ public float GroundHeightSoft;
        /* 0x055C */ public float GroundHeightSoftHorizontal;
        /* 0x0560 */ public TkCurveType GroundHeightSoftCurve;
        /* 0x0564 */ public float GroundHeightHard;
        /* 0x0568 */ public float GroundHeightHardHorizontal;
        /* 0x056C */ public TkCurveType GroundHeightHardCurve;
        /* 0x0570 */ public float GroundHeightPostCollisionMultiplier;
        /* 0x0574 */ public float GroundHeightPostCollisionMultiplierTime;
        /* 0x0578 */ public float GroundHeightDownSpeedMultiplier;
        /* 0x057C */ public float GroundHeightBrakeMultiplier;
        /* 0x0580 */ public float PitchCorrectDownSpeedMinSpeed;
        /* 0x0584 */ public float PitchCorrectDownSpeedRange;
        /* 0x0588 */ public float PitchCorrectDownSpeedSoftAngle;
        /* 0x058C */ public float PitchCorrectDownSpeedMaxDownAngle;
        /* 0x0590 */ public float PitchCorrectDownSpeedHeightMin;
        /* 0x0594 */ public float PitchCorrectDownSpeedHeightMax;
        /* 0x0598 */ public float PitchCorrectCockpitSpring;
        /* 0x059C */ public float PitchCorrectSoftDownAngle;
        /* 0x05A0 */ public float PitchCorrectMaxDownAngle;
        /* 0x05A4 */ public float PitchCorrectMaxDownAnglePostCollision;
        /* 0x05A8 */ public float PitchCorrectSoftDownAnglePostCollision;
        /* 0x05AC */ public float PitchCorrectMaxDownAngleWater;
        /* 0x05B0 */ public float PitchCorrectSoftDownAngleWater;
        /* 0x05B4 */ public float PitchCorrectTimeMin;
        /* 0x05B8 */ public float PitchCorrectTimeMax;
        /* 0x05BC */ public float PitchCorrectTimeHeight;
        /* 0x05C0 */ public float PitchCorrectHeightSpring;
        /* 0x05C4 */ public float PitchCorrectHeightMin;
        /* 0x05C8 */ public float PitchCorrectHeightMax;
        /* 0x05CC */ public TkCurveType PitchCorrectHeightCurve;
        /* 0x05CD */ public TkCurveType LandingCurve;
        /* 0x05CE */ public TkCurveType LandingCurveHeavy;
        /* 0x05D0 */ public GcPlayerSpaceshipControlData Control;
        /* 0x07E8 */ public GcPlayerSpaceshipControlData ControlLight;
        /* 0x0A00 */ public GcPlayerSpaceshipControlData ControlHeavy;
        /* 0x0C18 */ public GcPlayerSpaceshipControlData ControlHover;
        /* 0x0E30 */ public GcPlayerSpaceshipClassBonuses ControlBonusC;
        /* 0x0E60 */ public GcPlayerSpaceshipClassBonuses ControlBonusB;
        /* 0x0E90 */ public GcPlayerSpaceshipClassBonuses ControlBonusA;
        /* 0x0EC0 */ public GcPlayerSpaceshipClassBonuses ControlBonusS;
        /* 0x0EF0 */ public float HaulerTakeOffMod;
        /* 0x0EF4 */ public float FighterTakeOffMod;
        /* 0x0EF8 */ public float ShuttleTakeOffMod;
        /* 0x0EFC */ public float ExplorerTakeOffMod;
        /* 0x0F00 */ public float RoyalTakeOffMod;
        /* 0x0F10 */ public Colour AlarmLightColour;
        /* 0x0F20 */ public Colour AlarmLightColourHostile;
        /* 0x0F30 */ public List<Vector3f> AlarmLightOffsets;
        /* 0x0F40 */ public float AlarmLightIntensity;
        /* 0x0F44 */ public float AlarmRate;
        /* 0x0F48 */ public float AlarmLightIntensityHostile;
        /* 0x0F4C */ public float AlarmRateHostileMin;
        /* 0x0F50 */ public float AlarmRateHostileMax;
        /* 0x0F54 */ public float AlarmLastHitTime;
        /* 0x0F58 */ public float LockTargetMinDistance;
        /* 0x0F5C */ public float LockTargetRange;
        /* 0x0F60 */ public float LockTargetMinScale;
        /* 0x0F64 */ public float LockTargetMaxScale;
        /* 0x0F68 */ public float AutoLevelMinPitchAngle;
        /* 0x0F6C */ public float AutoLevelMaxPitchAngle;
        /* 0x0F70 */ public float AutoLevelMinAngle;
        /* 0x0F74 */ public float AutoLevelMaxAngle;
        /* 0x0F78 */ public bool AutoEjectOnLanding;
        /* 0x0F79 */ public bool LandedCockpitFreeLook;
        /* 0x0F7C */ public float FrigateTargetLockRange;
        /* 0x0F80 */ public float ResetTargetLockAngle;
        /* 0x0F84 */ public float TargetLockRange;
        /* 0x0F88 */ public float TargetLockNearestAngle;
        /* 0x0F8C */ public float RemotePlayerLockTimeAfterShot;
        /* 0x0F90 */ public Colour TargetLockPassiveColour;
        /* 0x0FA0 */ public Colour TargetLockDangerColour;
        /* 0x0FB0 */ public float ShieldRechargeMinHitTime;
        /* 0x0FB4 */ public float ShieldRechargeRate;
        /* 0x0FB8 */ public float NoBoostStationDistance;
        /* 0x0FBC */ public float NoBoostAnomalyDistance;
        /* 0x0FC0 */ public float NoBoostSpaceAnomalyDistance;
        /* 0x0FC4 */ public float NoBoostFreighterDistance;
        /* 0x0FC8 */ public float NoBoostFreighterAngle;
        /* 0x0FCC */ public float NoBoostShipDistance;
        /* 0x0FD0 */ public float NoBoostShipNearMinTime;
        /* 0x0FD4 */ public float NoBoostShipLastHitTime;
        /* 0x0FD8 */ public float NoBoostCombatEventMinBattleTime;
        /* 0x0FDC */ public float NoBoostCombatEventMinFreighterBattleTime;
        /* 0x0FE0 */ public float NoBoostCombatEventTime;
        /* 0x0FE4 */ public float ThrustDecaySpring;
        /* 0x0FE8 */ public float ThrustDecaySpringCombat;
        /* 0x0FEC */ public float DriftEffectIntensity;
        /* 0x0FF0 */ public float SpeedCoolOffset;
        /* 0x0FF4 */ public float SpeedCoolNormalSpeedAmount;
        /* 0x0FF8 */ public int HitAsteroidDamage;
        /* 0x0FFC */ public float CameraPostWarpFovTime;
        /* 0x1000 */ public float CameraPostWarpFov;
        /* 0x1004 */ public float PlayerFreighterClearSpaceRadius;
        /* 0x1008 */ public float DriftSpring;
        /* 0x100C */ public float DriftTurnStrengthMultiplier;
        /* 0x1010 */ public float DriftTurnBrakeMultiplier;
        /* 0x1014 */ public float DirectionBrakeVRBoost;
        /* 0x1018 */ public float TurnRudderStrength;
        /* 0x101C */ public float MuzzleLightIntensity;
        /* 0x1020 */ public float MuzzleAnimSpeed;
        /* 0x1024 */ public TkHitCurveData MuzzleLightCurve;
        /* 0x1030 */ public Colour MuzzleLightColour;
        /* 0x1040 */ public Vector3f DamageLightOffsetTop;
        /* 0x1050 */ public Vector3f DamageLightOffsetLeft;
        /* 0x1060 */ public Vector3f DamageLightOffsetRight;
        /* 0x1070 */ public float DamageLightIntensity;
        /* 0x1074 */ public TkHitCurveData DamageLightCurve;
        /* 0x1080 */ public Colour DamageLightColourShield;
        /* 0x1090 */ public Colour DamageLightColour;
        /* 0x10A0 */ public bool AltAtmosphere;
        /* 0x10A4 */ public float AsteroidHitAngle;
        /* 0x10A8 */ public float AsteroidHitAngleBoosting;
        /* 0x10AC */ public float AimCritAngle;
        /* 0x10B0 */ public float AimCritMinFwdAngle;
        /* 0x10B4 */ public float AimCritBehindAngle;
        /* 0x10B8 */ public float MissileShootTime;
        /* 0x10BC */ public float CruiseHeight;
        /* 0x10C0 */ public float CruiseHeightRange;
        /* 0x10C4 */ public float CruiseOffAngle;
        /* 0x10C8 */ public float CruiseOffAngleRange;
        /* 0x10CC */ public float CruiseForce;
        /* 0x10D0 */ public float HoverMaxSpeed;
        /* 0x10D4 */ public float HoverStopTime;
        /* 0x10D8 */ public float LandOffset;
        /* 0x10DC */ public float AimFoVBoost;
        /* 0x10E0 */ public float AimFoVBoostTime;
        /* 0x10E4 */ public float AimFoVBoostTimeAuto;
        /* 0x10E8 */ public float AimTurnSlower;
        /* 0x10EC */ public float AimMaxAutoAngle;
        /* 0x10F0 */ public float HoverBrakeStrength;
        /* 0x10F4 */ public float StickyTurnMinAngle;
        /* 0x10F8 */ public float StickyTurnAngleRange;
        /* 0x10FC */ public float StickyTurnLow;
        /* 0x1100 */ public float StickyTurnHigh;
        /* 0x1104 */ public float StickyStickAngle;
        /* 0x1108 */ public float ShipMotionDeadZone;
        /* 0x110C */ public Vector2f DeathSpinRoll;
        /* 0x1114 */ public Vector2f DeathSpinPitch;
        /* 0x111C */ public int MiniWarpLinesNum;
        /* 0x1120 */ public float MiniWarpLinesSpacing;
        /* 0x1124 */ public float MiniWarpLinesOffset;
        /* 0x1128 */ public float MiniWarpLinesHeight;
        /* 0x112C */ public float GravityDropMinHeight;
        /* 0x1130 */ public float GravityDropMaxForceHeight;
        /* 0x1134 */ public float GravityDropMaxHeight;
        /* 0x1138 */ public float GravityDropForce;
        /* 0x113C */ public GcPlayerStickData StickData;
        /* 0x1158 */ public float ResourceCollectOffset;
        /* 0x115C */ public float AimSpeedTrackDistance;
        /* 0x1160 */ public float AimSpeedTrackForce;
        /* 0x1164 */ public float CombatBoostMultiplier;
        /* 0x1168 */ public float CombatBoostTurnDamp;
        /* 0x116C */ public float MarkerEventTime;
        /* 0x1170 */ public int GunAmmoMultiplier;
        /* 0x1178 */ public List<GcPlayerSpaceshipAim> LaserAimArray;
        /* 0x1188 */ public int LaserAimLevel;
        /* 0x1190 */ public List<GcPlayerSpaceshipAim> GunAimArray;
        /* 0x11A0 */ public int TakeOffCost;
        /* 0x11A4 */ public int LandingCost;
        /* 0x11A8 */ public int GunAimLevel;
        /* 0x11AC */ public GcPlayerSpaceshipAim MissileAim;
        /* 0x11C4 */ public float MissileLockSpeedUp;
        /* 0x11C8 */ public float MissileLockTime;
        /* 0x11CC */ public float AutoPilotAlignStrength;
        /* 0x11D0 */ public float AutoPilotSmallShipAlignStrength;
        /* 0x11D4 */ public float AutoPilotCallDistance;
        /* 0x11D8 */ public float AutoPilotCallAngle;
        /* 0x11DC */ public float AutoPilotCallAngleVertical;
        /* 0x11E0 */ public float AutoPilotPositionAlignStrength;
        /* 0x11E4 */ public float FreighterApproachDistanceMin;
        /* 0x11E8 */ public float FreighterApproachDistanceMax;
        /* 0x11EC */ public float FreighterApproachSpeedDamper;
        /* 0x11F0 */ public float FreighterApproachExtraMargin;
        /* 0x11F4 */ public float MiniWarpShakeStrength;
        /* 0x11F8 */ public float MiniWarpPlanetRadius;
        /* 0x11FC */ public float MiniWarpStationRadius;
        /* 0x1200 */ public float MiniWarpFuelTime;
        /* 0x1204 */ public float MiniWarpAlignStrength;
        /* 0x1208 */ public float MiniWarpChargeTime;
        /* 0x120C */ public float MiniWarpSpeed;
        /* 0x1210 */ public float MiniWarpTopSpeedTime;
        /* 0x1214 */ public float MiniWarpTime;
        /* 0x1218 */ public float MiniWarpCooldownTime;
        /* 0x121C */ public float MiniWarpStoppingMarginPlanet;
        /* 0x1220 */ public float MiniWarpMinPlanetDistance;
        /* 0x1224 */ public float MiniWarpStoppingMarginDefault;
        /* 0x1228 */ public float MiniWarpStoppingMarginLong;
        /* 0x122C */ public float MiniWarpTrackingMargin;
        /* 0x1230 */ public float MiniWarpExitSpeed;
        /* 0x1234 */ public float MiniWarpExitSpeedStation;
        /* 0x1238 */ public float MiniWarpExitTime;
        /* 0x123C */ public float MiniWarpHUDArrowAttractAngle;
        /* 0x1240 */ public float MiniWarpHUDArrowAttractAngleStation;
        /* 0x1244 */ public float MiniWarpHUDArrowAttractAngleOtherPlayerStuff;
        /* 0x1248 */ public float MiniWarpHUDArrowAttractAngleSaveBeacon;
        /* 0x124C */ public float MiniWarpHUDArrowAttractAngleDense;
        /* 0x1250 */ public int MiniWarpHUDArrowNumMarkersToBeDense;
        /* 0x1254 */ public TkCurveType MiniWarpCurve;
        /* 0x1258 */ public float MiniWarpFlashIntensity;
        /* 0x125C */ public float MiniWarpFlashDuration;
        /* 0x1260 */ public float MiniWarpFlashDelay;
        /* 0x1264 */ public float MiniWarpNoAsteroidRadius;
        /* 0x1268 */ public float BoostNoAsteroidRadius;
        /* 0x126C */ public float ShipHeatAlertTime;
        /* 0x1270 */ public float LaserOverheatTime;
        /* 0x1274 */ public float LaserOverheatDownTime;
        /* 0x1278 */ public float LaserCoolFactor;
        /* 0x127C */ public float LaserFireTime;
        /* 0x1280 */ public float LaserWaitTime;
        /* 0x1284 */ public float ProjectileOverheatTime;
        /* 0x1288 */ public float ProjectileFireRate;
        /* 0x128C */ public float ProjectileReloadTime;
        /* 0x1290 */ public int ProjectileClipSize;
        /* 0x1294 */ public float SummonShipAnywhereHeightOffset;
        /* 0x1298 */ public float SummonShipAnywhereFwdOffset;
        /* 0x129C */ public float SummonShipAnywhereRangeMax;
        /* 0x12A0 */ public float SummonShipAnywhereRangeMin;
        /* 0x12A4 */ public float SummonShipHeightOffset;
        /* 0x12A8 */ public float SummonShipApproachOffset;
        /* 0x12AC */ public float LandingHelperMinAngle;
        /* 0x12B0 */ public float LandingHelperTurnTime;
        /* 0x12B4 */ public float LandingHelperRollTime;
        /* 0x12B8 */ public float AnomalyStationMaxApproachSpeed;
        /* 0x12BC */ public float TakeOffSphereCastLength;
        /* 0x12C0 */ public float TakeOffSphereCastRadiusMul;
        /* 0x12C4 */ public float LandGroundTakeOffTime;
        /* 0x12C8 */ public float LandLookingForward;
        /* 0x12CC */ public float LandHeightThreshold;
        /* 0x12D0 */ public float LandWidthThreshold;
        /* 0x12D4 */ public float LandSlopeMax;
        /* 0x12D8 */ public float LandingAreaRadius;
        /* 0x12DC */ public float LandingAreaFloorOffset;
        /* 0x12E0 */ public float TargetLockTime;
        /* 0x12E4 */ public float TargetLockChangeTime;
        /* 0x12E8 */ public float TargetLockLoseTime;
        /* 0x12EC */ public float BoostChargeRate;
        /* 0x12F0 */ public float DamageMinHitTime;
        /* 0x12F4 */ public float DamageMaxHitTime;
        /* 0x12F8 */ public float DamageMinWoundTime;
        /* 0x12FC */ public float SpaceBrakeMinAngularSpeed;
        /* 0x1300 */ public float SpaceBrakeAngularRange;
        /* 0x1304 */ public float CollisionSpeedDamageAmount;
        /* 0x1308 */ public float CollisionDeflectTime;
        /* 0x130C */ public float CollisionDeflectDamping;
        /* 0x1310 */ public float CollisionDeflectNormalFactor;
        /* 0x1314 */ public float CollisionAsteroidDamp;
        /* 0x1318 */ public float CollisionGroundDamp;
        /* 0x131C */ public float CollisionDistance;
        /* 0x1320 */ public float CollisionDistanceGround;
        /* 0x1324 */ public float CollisionDistanceAsteroid;
        /* 0x1328 */ public float CollisionDistanceAsteroidSide;
        /* 0x132C */ public float CollisionDistanceSpaceships;
        /* 0x1330 */ public float DeflectDistance;
        /* 0x1334 */ public float DeflectAlignTimeMin;
        /* 0x1338 */ public float DeflectAlignTimeMax;
        /* 0x133C */ public TkCurveType DeflectCurve;
        /* 0x1340 */ public float CollisionRadiusMultiplier;
        /* 0x1344 */ public float GroundHeightHardTimeMin;
        /* 0x1348 */ public float GroundHeightHardTimeMax;
        /* 0x134C */ public float GroundHeightPostCollisionDamper;
        /* 0x1350 */ public float GroundHeightSpeedLength;
        /* 0x1354 */ public float GroundHeightSpeedAngle;
        /* 0x1358 */ public float GroundHeightSpeedAngleRange;
        /* 0x135C */ public int GroundHeightNumRays;
        /* 0x1360 */ public float GroundHeightSmoothTime;
        /* 0x1364 */ public float LinearDamping;
        /* 0x1368 */ public float AngularDamping;
        /* 0x136C */ public float DirectionDockingAngle;
        /* 0x1370 */ public float DirectionDockTime;
        /* 0x1374 */ public float DirectionDockingInfoRange;
        /* 0x1378 */ public float LootAttractDistance;
        /* 0x137C */ public float LootAttractTime;
        /* 0x1380 */ public float LootDampForce;
        /* 0x1384 */ public float LootCollectDistance;
        /* 0x1388 */ public float GunOffset3rdPersonMultiplier;
        /* 0x1390 */ public Vector3f GunOffsetLeft;
        /* 0x13A0 */ public Vector3f GunOffsetRight;
        /* 0x13B0 */ public Vector3f GunOffsetLeft2;
        /* 0x13C0 */ public Vector3f GunOffsetRight2;
        /* 0x13D0 */ public Vector3f GunOffset3rdPersonLeft;
        /* 0x13E0 */ public Vector3f GunOffset3rdPersonRight;
        /* 0x13F0 */ public GcPlayerSpaceshipWarpData Warp;
        /* 0x1404 */ public float DockingRotateSpeed;
        /* 0x1408 */ public float DockingRotateSpeedVR;
        /* 0x140C */ public float EjectAnimSwitchPoint;
        /* 0x1410 */ public float EjectAnimSpeedFactor;
        /* 0x1414 */ public float ShipDifferentRepelRange;
        /* 0x1418 */ public float ShipDifferentRepelAmount;
        /* 0x141C */ public float AtmosphereSpeed;
        /* 0x1420 */ public float AtmosphereAngle;
        /* 0x1424 */ public float DroneAlignUpTime;
        /* 0x1428 */ public float DroneDustHeight;
        /* 0x142C */ public float DroneMinHeight;
        /* 0x1430 */ public float DroneHeightAdjust;
        /* 0x1434 */ public float FreighterSpeed;
        /* 0x1438 */ public float DroneWarpTime;
        /* 0x143C */ public float DroneWarpMinForce;
        /* 0x1440 */ public float DroneWarpMaxForce;
        /* 0x1450 */ public Vector3f CockpitScale;
        /* 0x1460 */ public float ShakePowerScaler;
        /* 0x1464 */ public float ShakeSpeed;
        /* 0x1468 */ public float ShakeMaxPower;
        /* 0x146C */ public float ShakeMaxSpeed;
        /* 0x1470 */ public float ShakeAlignBrake;
        /* 0x1474 */ public float WingmanAtTimeStart;
        /* 0x1478 */ public float WingmanAtTime;
        /* 0x147C */ public float WingmanAtTimeBack;
        /* 0x1480 */ public float WingmanPerpTime;
        /* 0x1484 */ public float WingmanAttackOffset;
        /* 0x1488 */ public float WingmanAttackRange;
        /* 0x148C */ public float WingmanAttackMinRange;
        /* 0x1490 */ public float WingmanAttackAngle;
        /* 0x1494 */ public float WingmanViewerAngle;
        /* 0x1498 */ public float WingmanAttackAimAngle;
        /* 0x149C */ public float WingmanAttackTime;
        /* 0x14A0 */ public float WingmanAttackTimeout;
        /* 0x14A4 */ public float WingmanAttackCoolTime;
        /* 0x14A8 */ public float WingmanSpawnDist;
        /* 0x14AC */ public float WingmanAlign;
        /* 0x14B0 */ public float WingmanAngle;
        /* 0x14B4 */ public float WingmanAngle2;
        /* 0x14B8 */ public float WingmanRadius;
        /* 0x14BC */ public float WingmanFwd1;
        /* 0x14C0 */ public float WingmanFwd2;
        /* 0x14C4 */ public float DronePlanetAttackRange;
        /* 0x14C8 */ public float DronePlanetAttackMinRange;
        /* 0x14CC */ public float DroneShootTime;
        /* 0x14D0 */ public float DroneAlertAngle;
        /* 0x14D4 */ public float DroneAlertRange;
        /* 0x14D8 */ public float DronePatrolRadius;
        /* 0x14DC */ public float DroneMoveArrivedRange;
        /* 0x14E0 */ public float DronePatrolTime;
        /* 0x14E4 */ public float ShipEnterRange;
        /* 0x14E8 */ public float ShipEnterAngle;
        /* 0x14EC */ public float ShipEnterTransitionTime;
        /* 0x14F0 */ public float ShipEnterSpeed;
        /* 0x14F4 */ public float ShipEnterMinTime;
        /* 0x14F8 */ public List<NMSString0x80> ShipModels;
        /* 0x1508 */ public float HUDBoostUpgradeMultiplier;
        /* 0x150C */ public float LaunchThrustersRegenTimePeriod;
        /* 0x1510 */ public float LaunchThrustersMinimumSummonPercentage;
        /* 0x1514 */ public float LaunchThrustersSummonCostMultiplier;
        /* 0x1518 */ public float SpeedUpDistanceThreshold;
        /* 0x151C */ public float SpeedUpDistanceFadeThreshold;
        /* 0x1520 */ public float SpeedUpVelocityThreshold;
        /* 0x1524 */ public float SpeedUpVelocityCoeff;
        /* 0x1528 */ public float MaxSpeedUpDistance;
        /* 0x152C */ public float MaxSpeedUpVelocity;
        /* 0x1530 */ public float StickLandThreshold;
        /* 0x1534 */ public float StickPulseThreshold;
        /* 0x1540 */ public Vector3f StickAnimationDamping;
        /* 0x1550 */ public float SpaceCombatFollowModeMaxTorque;
        /* 0x1554 */ public float SpaceCombatFollowModeAimTime;
        /* 0x1558 */ public float SpaceCombatFollowModeTargetDistance;
        /* 0x155C */ public float SpaceCombatFollowModeEvadeRoll;
        /* 0x1560 */ public float SpaceCombatFollowModeEvadeTime;
        /* 0x1564 */ public float SpaceCombatFollowModeBrakeBehindAngle;
        /* 0x1568 */ public float SpaceCombatFollowModeMaxBrakeBehind;
        /* 0x156C */ public float SpaceCombatFollowModeMaxBrakeHeadOn;
        /* 0x1570 */ public float SpaceCombatFollowModeEvadeThrust;
        /* 0x1574 */ public bool SpaceCombatFollowModeUseEvadeTarget;
        /* 0x1575 */ public bool SpaceCombatFollowModeUseBoost;
    }
}
