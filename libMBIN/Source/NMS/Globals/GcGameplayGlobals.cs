using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0xC5AADA7607E39E7, NameHash = 0x71CAF682B6986E6E)]
    public class GcGameplayGlobals : NMSTemplate
    {
        /* 0x0000 */ public float TurretAITargetingDistanceFactor;
        /* 0x0004 */ public float TurretAITargetingPitchAngleFactor;
        /* 0x0008 */ public float TurretAITargetingYawAngleFactor;
        /* 0x000C */ public float TurretAITargetingLastHitFactor;
        /* 0x0010 */ public float TurretAITargetingFocusPlayerFactor;
        [NMS(Size = 0x1, EnumType = typeof(GcModularCustomisationResourceType.ModularCustomisationResourceTypeEnum))]
        /* 0x0020 */ public GcModularCustomisationConfig[] ModularCustomisationConfigs;
        /* 0x0260 */ public float ScanToRevealDelayOverride;
        /* 0x0264 */ public bool ScanToRevealIgnoreRequirements;
        /* 0x0265 */ public bool ScanToRevealNPCsAlwaysTriggersCameraEvent;
        /* 0x0268 */ public float NPCWaitWhenRevealedTime;
        /* 0x0270 */ public GcDifficultyConfig DifficultyConfig;
        /* 0x2908 */ public float ScanToRevealVFXBaseScalingSize;
        /* 0x2910 */ public NMSString0x10 PirateMissionPrimaryReward;
        /* 0x2920 */ public NMSString0x10 PirateMissionSecondReward;
        /* 0x2930 */ public NMSString0x10 BuildersWordReward;
        [NMS(Size = 0x3, EnumType = typeof(GcMissionDifficulty.MissionDifficultyEnum))]
        /* 0x2940 */ public float[] MissionSubstanceDifficultyMultipliers;
        /* 0x294C */ public bool UseSecondaryBiomeSubstances;
        /* 0x294D */ public bool TechMustBeInTechInventory;
        /* 0x294E */ public bool DebugPrintShootables;
        /* 0x2950 */ public float SpecialTechSlotBonus;
        /* 0x2954 */ public int RocketLockerFuelUse;
        /* 0x2958 */ public bool EnableTechPackaging;
        /* 0x295C */ public float CargoShieldStrength;
        /* 0x2960 */ public float TechDamageChanceShieldedMax;
        /* 0x2964 */ public float TechDamageChanceShieldLevelMin;
        /* 0x2968 */ public float TechDamageChanceShieldLevelMax;
        /* 0x296C */ public float TechDamageChanceToSelectPrimary;
        /* 0x2970 */ public float PirateRaidAccelerator;
        /* 0x2974 */ public float PirateGroundAccelerator;
        /* 0x2978 */ public float PirateGroundInventoryAccelerator;
        /* 0x297C */ public float PoliceAcceleratorStationLockOn;
        /* 0x2980 */ public float PoliceAcceleratorPulseExtra;
        /* 0x2984 */ public int PoliceAcceleratorSmugglingItemsMax;
        /* 0x2988 */ public float PoliceAcceleratorSmugglingMulMax;
        /* 0x298C */ public float PoliceAcceleratorNoCargoWealthy;
        /* 0x2990 */ public float PoliceAcceleratorNoCargoNormal;
        /* 0x2994 */ public float PoliceAcceleratorNoCargoSkipScanOdds;
        /* 0x2998 */ public float ShipInterestAcceleratorInAsteroidField;
        /* 0x299C */ public float InfestedPlanetDeepSpaceFlybyMultiplier;
        /* 0x29A0 */ public float ShipMiningMul;
        /* 0x29A4 */ public float SmugglerSellingMarkup;
        /* 0x29A8 */ public float IllegalTechProductTradingMod;
        /* 0x29AC */ public float CombatLevelBestWeaponBias;
        /* 0x29B0 */ public float CombatLevelBaseValueBoltcaster;
        /* 0x29B4 */ public float CombatLevelBaseValueShotgun;
        /* 0x29B8 */ public float CombatLevelBaseValueRailgun;
        /* 0x29BC */ public float CombatLevelBaseValueSMG;
        /* 0x29C0 */ public float CombatLevelBaseValueCannon;
        /* 0x29C4 */ public float CombatLevelBaseValueGrenade;
        /* 0x29C8 */ public float CombatLevelSClassValue;
        /* 0x29D0 */ public NMSString0x10 NexusRecipeCostType;
        /* 0x29E0 */ public int NexusRecipeCostNaniteMultiplier;
        /* 0x29E4 */ public float ShipScanPlanetRechargeMultiplier;
        /* 0x29E8 */ public float ShipScanSpaceRechargeMultiplier;
        /* 0x29F0 */ public NMSString0x10 FreeSuitSlotID;
        /* 0x2A00 */ public float InitialLocationProtectionRadiusMultiplier;
        /* 0x2A04 */ public float PartyPlanetSearchDistance;
        /* 0x2A08 */ public float UnderwaterLightningDamageDistanceMultiplier;
        /* 0x2A0C */ public int MaxActiveWeatherHazardGifts;
        /* 0x2A10 */ public float WeatherHazardGiftMaxDistance;
        /* 0x2A14 */ public float WeatherHazardGiftLifeTime;
        /* 0x2A18 */ public GcTechnologyCategory TechnologyOverrideForSmuggler;
        /* 0x2A1C */ public float MaxMeteorSurfaceAngle;
        /* 0x2A20 */ public float StormGravityChangeTime;
        /* 0x2A24 */ public float StormBonusJetpackMod;
        /* 0x2A28 */ public float StormBonusSprintMod;
        /* 0x2A2C */ public float StormBonusMiningHeatMod;
        /* 0x2A30 */ public float StormBonusMiningAmountMod;
        /* 0x2A34 */ public GcPlayerHazardType StormBonusJetpackWeather;
        /* 0x2A38 */ public GcPlayerHazardType StormBonusSprintWeather;
        /* 0x2A3C */ public GcPlayerHazardType StormBonusMiningHeatWeather;
        /* 0x2A40 */ public GcPlayerHazardType StormBonusMiningAmountWeather;
        /* 0x2A44 */ public float AlienPodThreshold2;
        /* 0x2A48 */ public float AlienPodThreshold1;
        /* 0x2A50 */ public Colour BulletTraceLineColour;
        /* 0x2A60 */ public float BulletTraceLineWidth;
        /* 0x2A64 */ public float ShipBulletTraceLineWidth;
        /* 0x2A68 */ public float VehicleAllIconScanTime;
        /* 0x2A6C */ public int GPSRandomChangeTimeWide;
        /* 0x2A70 */ public int GPSRandomChangeTimeMid;
        /* 0x2A74 */ public int GPSRandomChangeTimeNarrow;
        /* 0x2A78 */ public float SalvageValueAsProds;
        /* 0x2A7C */ public int SalvageSubstanceValueThreshold;
        [NMS(Size = 0x4, EnumType = typeof(GcInventoryClass.InventoryClassEnum))]
        /* 0x2A80 */ public NMSString0x10[] SalvageRewardsShuttle;
        [NMS(Size = 0x4, EnumType = typeof(GcInventoryClass.InventoryClassEnum))]
        /* 0x2AC0 */ public NMSString0x10[] SalvageRewardsDropship;
        [NMS(Size = 0x4, EnumType = typeof(GcInventoryClass.InventoryClassEnum))]
        /* 0x2B00 */ public NMSString0x10[] SalvageRewardsFighter;
        [NMS(Size = 0x4, EnumType = typeof(GcInventoryClass.InventoryClassEnum))]
        /* 0x2B40 */ public NMSString0x10[] SalvageRewardsScience;
        [NMS(Size = 0x5)]
        /* 0x2B80 */ public NMSString0x10[] SalvageTechList;
        [NMS(Size = 0x5)]
        /* 0x2BD0 */ public NMSString0x10[] SalvageTechListMultiTool;
        /* 0x2C20 */ public List<NMSString0x10> SalvageProdsList;
        /* 0x2C30 */ public List<NMSString0x10> SalvageSubstancesList;
        /* 0x2C40 */ public float TorpedoCooldown;
        /* 0x2C44 */ public int MaxTorpedoesInFlight;
        /* 0x2C48 */ public float PirateFreighterBattleNoTargetLeaderTime;
        /* 0x2C4C */ public float TorpedoInitialWait;
        /* 0x2C50 */ public float TorpedoCooldownRandomExtra;
        /* 0x2C54 */ public float TorpedoLaunchWarning;
        /* 0x2C58 */ public float MultidimensionalFadeTime;
        /* 0x2C5C */ public float TeleporterDistanceTravelledMultiplier;
        /* 0x2C60 */ public GcScanEffectData BinocularSelectedEffect;
        /* 0x2CB0 */ public Colour BinocularSelectedColour;
        /* 0x2CC0 */ public Colour BinocularSelectedUnknownColour;
        /* 0x2CD0 */ public float CockpitScale;
        /* 0x2CD4 */ public float MaxDistanceForLadderTeleport;
        /* 0x2CD8 */ public float AngleFromBaseComputerWhenTeleporting;
        /* 0x2CDC */ public float DistanceFromBaseComputerWhenTeleporting;
        /* 0x2CE0 */ public float AutoTranslateWordChance;
        /* 0x2CE4 */ public bool MissionSurveySuggestSurveyForNearScannables;
        /* 0x2CE8 */ public float MissionSurveyMaxGuidanceDistance;
        /* 0x2CEC */ public float MissionSurveyMaxGuidanceDistanceWorms;
        /* 0x2CF0 */ public NMSString0x10 MissionSurveyWormID;
        /* 0x2D00 */ public float MissionSurveyMarkerAutoHideTime;
        /* 0x2D04 */ public float MissionSurveyScanRangeMultiplier;
        /* 0x2D08 */ public float MissionSurveyMaxScanAngle;
        /* 0x2D0C */ public float MissionSurveyMaxScanAngleScannableComp;
        /* 0x2D10 */ public float MissionSurveyBeginScanPercentageScannable;
        /* 0x2D14 */ public float MissionSurveyBeginScanPercentageEvent;
        /* 0x2D18 */ public float MissionSurveyScanSpeed;
        /* 0x2D1C */ public float MissionSurveyScanSpeedScannableComp;
        /* 0x2D20 */ public float MissionSurveyRevealWithoutScanDistance;
        /* 0x2D24 */ public float MissionSurveyAutoScanDistance;
        /* 0x2D28 */ public float MissionSurveyAutoScanFlattenRadiusMul;
        /* 0x2D2C */ public float MissionSurveySonarMinPulseSpeed;
        /* 0x2D30 */ public float MissionSurveySonarMaxPulseSpeed;
        /* 0x2D34 */ public float MissionSurveySonarPulseSpeedBandCount;
        /* 0x2D38 */ public float MissionSurveyMaxAngleOffset;
        /* 0x2D3C */ public float MissionSurveyMaxSignalConeAngle;
        /* 0x2D40 */ public float MissionSurveyInShipArrivedDistance;
        /* 0x2D44 */ public float SurveyBeginScanPercentage;
        /* 0x2D48 */ public float SurveyScanMinSpeed;
        /* 0x2D4C */ public float SurveyScanMaxSpeed;
        /* 0x2D50 */ public float SurveySonarPulseSpeedBandCount;
        /* 0x2D54 */ public float SurveySonarMinPulseSpeed;
        /* 0x2D58 */ public float SurveySonarMaxPulseSpeed;
        /* 0x2D5C */ public float SurveySonarMiddleRangeMin;
        /* 0x2D60 */ public float SurveySonarMiddleRangeMax;
        /* 0x2D64 */ public float SurveyMaxDistance;
        /* 0x2D68 */ public int CreaturesToBaitForTutorial;
        /* 0x2D6C */ public int CreaturesToFeedForTutorial;
        /* 0x2D70 */ public bool DisableGalaxyMapInQuickMenu;
        /* 0x2D71 */ public bool DisableNexusInQuickMenu;
        /* 0x2D72 */ public bool EnableTeleporters;
        /* 0x2D73 */ public bool AllowSpaceScanEvents;
        /* 0x2D74 */ public bool CanMoveTechnology;
        /* 0x2D78 */ public float NormalModeHeatBonus;
        /* 0x2D7C */ public float BaseLaserHeatTime;
        /* 0x2D80 */ public float HeatAlertTime;
        /* 0x2D84 */ public float HeatDamageBoost;
        /* 0x2D88 */ public float HeatWidthBoost;
        /* 0x2D8C */ public float HeatWidthBoostAlt;
        /* 0x2D90 */ public float OverheatGenerosity;
        /* 0x2D94 */ public float HeatMaxPowerPoint;
        /* 0x2D98 */ public float OverheatDecay;
        /* 0x2D9C */ public TkCurveType OverheatCurve;
        /* 0x2D9D */ public bool UseOverheatColour;
        /* 0x2DA0 */ public Colour OverHeatColour;
        /* 0x2DB0 */ public Colour OverHeatBarColour;
        /* 0x2DC0 */ public TkCurveType OverheatColourCurveShip;
        /* 0x2DC1 */ public TkCurveType OverheatColourCurve;
        /* 0x2DC4 */ public int RefinerProductsMadeInTime;
        /* 0x2DC8 */ public int RefinerSubsMadeInTime;
        /* 0x2DCC */ public int RefinerProductsMadeInTimeSurvival;
        /* 0x2DD0 */ public int RefinerSubsMadeInTimeSurvival;
        /* 0x2DD8 */ public List<NMSString0x10> HyperdriveAccess;
        /* 0x2DE8 */ public List<NMSString0x10> FreighterHyperdriveAccess;
        /* 0x2DF8 */ public float SeasonalMessageModuleAttractDistanceMul;
        /* 0x2DFC */ public float HmdInteractionRangeMinRange;
        /* 0x2E00 */ public float HmdInteractionRangeMinDistance;
        /* 0x2E04 */ public float HmdInteractionRangeMultiplier;
        /* 0x2E08 */ public bool InstallTechWithInteraction;
        /* 0x2E09 */ public bool FreighterRequiresRGBHyperdriveUpgrades;
        /* 0x2E0A */ public bool DisableAnomalyAmbientSpawn;
        /* 0x2E0B */ public bool AllowDeconstruct;
        /* 0x2E0C */ public bool AllowBinocularMarker;
        /* 0x2E0D */ public bool EveryMaintenanceIsBroken;
        /* 0x2E0E */ public bool SpawnResourceBlobsOnPartDelete;
        /* 0x2E0F */ public bool EnableShootHitEffect;
        /* 0x2E10 */ public int MaxNumSameGroupTech;
        /* 0x2E14 */ public float ShootableArmourHighlightHitTime;
        /* 0x2E18 */ public float ShootableAggroMinStartTime;
        /* 0x2E1C */ public float ShootableAggroForgetTime;
        /* 0x2E20 */ public Colour RefinerColour1A;
        /* 0x2E30 */ public Colour RefinerColour1B;
        /* 0x2E40 */ public Colour RefinerColour1C;
        /* 0x2E50 */ public Colour RefinerColour1D;
        /* 0x2E60 */ public float AtmosphereEntryTime;
        /* 0x2E64 */ public float AtmosphereEntryFadeTimeFactor;
        /* 0x2E68 */ public float AtmosphereEntryOffset;
        /* 0x2E6C */ public TkCurveType AtmosphereEntryCurve;
        /* 0x2E70 */ public float AtmosphereEntryErrorTime;
        /* 0x2E74 */ public int AsteroidScanMaxShown;
        /* 0x2E78 */ public float AsteroidScanTime;
        /* 0x2E7C */ public float AsteroidScanRange;
        /* 0x2E80 */ public float TerrainResourceScanTime;
        /* 0x2E84 */ public float TerrainResourceScanRange;
        /* 0x2E88 */ public float TerrainResourceCompassRange;
        /* 0x2E8C */ public bool BinocsDisplayUnknownCreatures;
        /* 0x2E90 */ public float BinocularScanTargetMinHeight;
        /* 0x2E94 */ public float BinocularScanTargetHeightRange;
        /* 0x2E98 */ public float BinocTimeBeforeScan;
        /* 0x2E9C */ public float BinocMinScanTime;
        /* 0x2EA0 */ public float BinocScanTime;
        /* 0x2EA4 */ public float BinocCreatureScanTime;
        /* 0x2EA8 */ public TkCurveType BinocularScanTargetHeightCurve;
        /* 0x2EAC */ public float BinocularScanTargetInitialFadeTime;
        /* 0x2EB0 */ public float BinocularScanTargetScaler;
        /* 0x2EB4 */ public float BinocularScanTargetLineWidth;
        /* 0x2EB8 */ public float BinocularScanTargetFadeTime;
        /* 0x2EC0 */ public Colour BinocularScanTargetColour;
        /* 0x2ED0 */ public GcScanEffectData BinocularScanEffect;
        /* 0x2F20 */ public float ScannerIconsClumpRadius;
        /* 0x2F24 */ public float ScannableComponentMarkerOffset;
        /* 0x2F28 */ public float ScannableComponentPlaceMarkerOffset;
        /* 0x2F2C */ public float MissionEventAllowResetDistance;
        /* 0x2F30 */ public float AllRecipesKnownNanitesMin;
        /* 0x2F34 */ public float AllRecipesKnownNanitesMax;
        /* 0x2F38 */ public float MaxPossibleShipDamagePotential;
        /* 0x2F3C */ public float BuildingPlayerBaseIconOffset;
        /* 0x2F40 */ public float CriticalHitMultiplier;
        /* 0x2F44 */ public float HitEffectMinTime;
        /* 0x2F48 */ public float GrabPlayerCooldownTime;
        /* 0x2F4C */ public float TapInteractionIncreaseAmount;
        /* 0x2F50 */ public float TapInteractionDecay;
        /* 0x2F60 */ public GcScanEffectData DeconstructEffect;
        /* 0x2FB0 */ public GcScanEffectData HitEffect;
        /* 0x3000 */ public GcScanEffectData HitEffectCritical;
        /* 0x3050 */ public float CommunicatorSpawnOffset;
        /* 0x3054 */ public float CommunicatorSpawnHeightOffset;
        /* 0x3060 */ public Vector3f CommunicatorShipSpawnOffset;
        /* 0x3070 */ public float CommunicatorSpawnScale;
        /* 0x3074 */ public float CommunicatorSpawnRotation;
        /* 0x3078 */ public float CommunicatorCargoScanDroneScale;
        /* 0x307C */ public float CommunicatorCargoScanDroneScaleFallback;
        /* 0x3080 */ public float CommunicatorCargoScanDroneUpOffset;
        /* 0x3084 */ public float CommunicatorCargoScanDroneUpOffsetFallback;
        /* 0x3088 */ public float CommunicatorCargoScanDroneAtOffsetFallback;
        /* 0x308C */ public float CommunicatorCargoScanDronePitch;
        /* 0x3090 */ public float CommunicatorCargoScanDroneRoll;
        /* 0x3094 */ public float CommunicatorCargoScanDroneYaw;
        /* 0x3098 */ public float CommunicatorFadeTime;
        /* 0x30A0 */ public List<GcScanEffectData> CommunicatorEffectTable;
        /* 0x30B0 */ public int MaxNumMissionsFromMissionGiver;
        /* 0x30B4 */ public float InteractionMinTimeBeforeHighlightedOptionSelection;
        /* 0x30B8 */ public float InteractionMinTimeBetweenStickOptionHighlights;
        /* 0x30BC */ public float InteractionStickOptionStrength;
        /* 0x30C0 */ public float InteractionMessageModuleDisplayTime;
        /* 0x30C4 */ public float InteractionAttractTime;
        /* 0x30C8 */ public float InteractionDescriptionTextTime;
        /* 0x30CC */ public float InteractionMinTimeForResponseText;
        /* 0x30D0 */ public bool InteractionOverride;
        /* 0x30D4 */ public GcInteractionType InteractionOverrideFrom;
        /* 0x30D8 */ public GcInteractionType InteractionOverrideTo;
        /* 0x30DC */ public float DestroyEffectHeight;
        /* 0x30E0 */ public float DestroyEffectMaxScale;
        /* 0x30E4 */ public float EventTargetSpeed;
        /* 0x30E8 */ public int SpecialMiningAmount;
        /* 0x30EC */ public float SpecialMiningTime;
        /* 0x30F0 */ public int HardModeTechDamageMidNum;
        /* 0x30F4 */ public int HardModeTechDamageMidPercent;
        /* 0x30F8 */ public int HardModeTechDamageHighPercent;
        /* 0x30FC */ public int EarlyPiratesToBeKilled;
        /* 0x3100 */ public int PlanetPirateFlybyMaxRepeatCounter;
        /* 0x3104 */ public int PirateInterestOverride;
        /* 0x3108 */ public float PirateInterestDistance;
        /* 0x310C */ public float PirateInterestDistanceMPMission;
        [NMS(Size = 0x3)]
        /* 0x3110 */ public int[] PirateInterestLevels;
        [NMS(Size = 0x3)]
        /* 0x311C */ public int[] PirateInterestLevelsSurvival;
        /* 0x3128 */ public int PoliceInterestOverride;
        /* 0x312C */ public float PoliceInterestDistance;
        /* 0x3130 */ public float PoliceInterestDistanceMPMission;
        [NMS(Size = 0x3)]
        /* 0x3134 */ public int[] PoliceInterestLevels;
        [NMS(Size = 0x3)]
        /* 0x3140 */ public int[] PoliceInterestLevelsSurvival;
        /* 0x314C */ public float SpaceCombatRadius;
        /* 0x3150 */ public int WarpsBetweenBattles;
        /* 0x3154 */ public float HoursBetweenBattles;
        /* 0x3158 */ public float SpaceBattleRadius;
        /* 0x315C */ public float SpaceBattleAnyHostileShipsRadius;
        /* 0x3160 */ public float FreighterBattleRadius;
        /* 0x3164 */ public int PirateFreighterFrigateCountForReinforce;
        /* 0x3168 */ public float PirateFreighterWarpChargeTimeToAddPerBrokenEngine;
        /* 0x316C */ public float PirateFreighterWarpChargeTime;
        /* 0x3170 */ public float PirateFreighterBeginFleeHealthFraction;
        /* 0x3174 */ public int SpaceBattleMaxTorpedosTargetingLeaderShip;
        /* 0x3178 */ public int SpaceBattleMaxTorpedosTargetingNonLeaderShip;
        /* 0x317C */ public float PirateFreighterRewardDelayTime;
        /* 0x3180 */ public float PirateFreighterRewardMessageDelayTime;
        /* 0x3184 */ public float PirateFreighterRewardDelayTimeEscaped;
        /* 0x3188 */ public float PirateFreighterRewardMessageDelayTimeEscaped;
        /* 0x318C */ public float FreighterFuelRodHealthFraction;
        /* 0x3190 */ public float FreighterCargoPodHealthFraction;
        [NMS(Size = 0x4, EnumType = typeof(GcPlayerConflictData.ConflictLevelEnum))]
        /* 0x3194 */ public float[] ChanceOfPirateFreighterBattleOnWarpToSystem;
        /* 0x31A4 */ public float MissileMaxTurnAngle;
        /* 0x31A8 */ public float MissileLockTime;
        /* 0x31AC */ public float MissileReloadTime;
        /* 0x31B0 */ public float MissileRotateMin;
        /* 0x31B4 */ public float MissileRotateMax;
        /* 0x31B8 */ public float MissileMaxSpeed;
        /* 0x31BC */ public float MissileForceMin;
        /* 0x31C0 */ public float MissileForceMax;
        /* 0x31C4 */ public float MissileBrakeForceMin;
        /* 0x31C8 */ public float MissileBrakeForceMax;
        /* 0x31CC */ public float MissileThreatTime;
        /* 0x31D0 */ public float MissileBrakeTime;
        /* 0x31D4 */ public float MissileHitRadius;
        /* 0x31D8 */ public float MissileOffset;
        /* 0x31DC */ public float MissileMinCircleTime;
        /* 0x31E0 */ public float MissileApproachTime;
        /* 0x31E4 */ public float MissileRotateSpeed;
        /* 0x31E8 */ public float ScanStartTimeDelayMinDist;
        /* 0x31EC */ public float ScanStartTimeDelayRange;
        /* 0x31F0 */ public float ScanStartTimeDistanceDelayTime;
        /* 0x31F4 */ public float ScanStickyDecay;
        /* 0x31F8 */ public float CreatureScanStickyDecay;
        /* 0x31FC */ public float CreatureScanAngle;
        /* 0x3200 */ public float CreatureMinScanTime;
        /* 0x3204 */ public float ScanAngle;
        /* 0x3208 */ public float NewDiscoveryDisplayTime;
        /* 0x320C */ public bool FailToFindBuildings;
        /* 0x3210 */ public float WaterLandingDamageMultiplier;
        /* 0x3214 */ public int CritDamage;
        /* 0x3218 */ public float CritScale;
        /* 0x321C */ public int NumMissionsPerSolarSystem;
        /* 0x3220 */ public float EmergencyBuildingScanEventDistance;
        /* 0x3224 */ public float EmergencyBuildingScanEventTime;
        /* 0x3228 */ public float ProjectileLightIntensity;
        /* 0x322C */ public float AggressiveSentinelProbability;
        /* 0x3230 */ public float AggressiveSentinelProbabilitySurvival;
        /* 0x3234 */ public float LowSentinelProbability;
        /* 0x3238 */ public float LowSentinelProbabilitySurvival;
        /* 0x323C */ public float NonAggressiveLushSurvivalProbabability;
        /* 0x3240 */ public int MaxDronesLow;
        /* 0x3244 */ public int MaxDronesLowSurvival;
        /* 0x3248 */ public int MaxDronesNormal;
        /* 0x324C */ public int MaxDronesNormalSurvival;
        /* 0x3250 */ public int MaxDronesAggressive;
        /* 0x3254 */ public int MaxDronesAggressiveSurvival;
        /* 0x3258 */ public GcExperienceTimers SentinelTimersLow;
        /* 0x3278 */ public GcExperienceTimers SentinelTimersNormal;
        /* 0x3298 */ public int FreighterStartPecent;
        /* 0x329C */ public GcExperienceTimers FreighterTimers;
        /* 0x32BC */ public GcExperienceTimers PlanetPirateTimers;
        /* 0x32DC */ public GcExperienceTimers SpacePirateTimers;
        /* 0x3300 */ public List<float> PirateEarlySpawnChances;
        /* 0x3310 */ public float PirateEarlySpawnTime;
        /* 0x3314 */ public GcExperienceTimers FlybyTimers;
        /* 0x3334 */ public GcExperienceTimers SpaceFlybyTimers;
        /* 0x3354 */ public GcExperienceTimers PoliceTimers;
        [NMS(Size = 0x7, EnumType = typeof(GcProceduralTechnologyData.QualityEnum))]
        /* 0x3374 */ public int[] FreighterTechQualityWeightings;
        /* 0x3390 */ public int SentinelsHigh;
        /* 0x3394 */ public int SentinelsLow;
        /* 0x3398 */ public float AsteroidHitForce;
        /* 0x339C */ public float AsteroidTorqueForce;
        /* 0x33A0 */ public float AsteroidCarveRadius;
        /* 0x33A4 */ public int DeathMoneyPenalty;
        /* 0x33A8 */ public int MaxResourceCrystalBlobSize;
        /* 0x33AC */ public float BuildingBeamDistance;
        /* 0x33B0 */ public float WaypointScanTime;
        /* 0x33B4 */ public int RareSubstanceEffectiveness;
        /* 0x33B8 */ public int CommonProductEffectiveness;
        /* 0x33BC */ public int RareProductEffectiveness;
        /* 0x33C0 */ public int AsteroidResourceReducer;
        /* 0x33C4 */ public int TunnelStatReducer;
        /* 0x33C8 */ public float VoxelAsteroidResourceChance;
        /* 0x33CC */ public int ResourceReducer;
        /* 0x33D0 */ public int ResourceMinAmount;
        /* 0x33D4 */ public int ResourceMaxAmount;
        /* 0x33D8 */ public int ResourceCommonReducer;
        /* 0x33DC */ public int ResourceCommonMinAmount;
        /* 0x33E0 */ public int ResourceCommonMaxAmount;
        /* 0x33E4 */ public int ResourceDirtReducer;
        /* 0x33E8 */ public int ResourceDirtMinAmount;
        /* 0x33EC */ public int ResourceDirtMaxAmount;
        /* 0x33F0 */ public NMSString0x10 ResourceDirtSubstanceID;
        /* 0x3400 */ public NMSString0x10 SandwormTerrainResource;
        /* 0x3410 */ public NMSString0x10 BioShipTerrainResource;
        /* 0x3420 */ public NMSString0x20 RobotResource;
        /* 0x3440 */ public NMSString0x20 DepotResource;
        /* 0x3460 */ public float DockNodeBuyRadius;
        /* 0x3464 */ public float BeaconInteractRange;
        /* 0x3468 */ public float ShipInteractRadius;
        /* 0x346C */ public GcResourceCollectEffect AsteroidResourceCollect;
        /* 0x34A0 */ public float ScanAngleCutoff;
        /* 0x34A8 */ public NMSString0x10 ToolScan;
        /* 0x34B8 */ public NMSString0x10 ToolScanHardMode;
        /* 0x34C8 */ public NMSString0x10 WaypointScan;
        /* 0x34D8 */ public NMSString0x10 BeaconScan;
        /* 0x34E8 */ public NMSString0x10 RadioTowerScan;
        /* 0x34F8 */ public NMSString0x10 ObservatoryScan;
        /* 0x3508 */ public NMSString0x10 DistressSignalScan;
        /* 0x3518 */ public NMSString0x10 DebugScanPlanet;
        /* 0x3528 */ public NMSString0x10 DebugScanSpace;
        /* 0x3538 */ public NMSString0x10 ShipScan;
        /* 0x3548 */ public NMSString0x10 VisualScan;
        /* 0x3558 */ public float ZoomFindBuildingRange;
        /* 0x355C */ public float TimeToDisplayScanResults;
        /* 0x3560 */ public float HoverTimeToScan;
        /* 0x3564 */ public float HoverTimeToScanCreatures;
        /* 0x3568 */ public int HoverVisiblePointsNeeded;
        /* 0x3570 */ public List<GcZoomData> ZoomLevels;
        /* 0x3580 */ public GcScanEffectData PassiveScanEffect;
        /* 0x35D0 */ public GcScanEffectData BuildingScanEffect;
        /* 0x3620 */ public GcScanEffectData TargetShipScanEffect;
        /* 0x3670 */ public GcScanEffectData HUDShipScanEffect;
        /* 0x36C0 */ public GcScanEffectData CreatureScanEffect;
        /* 0x3710 */ public GcScanEffectData ObjectsScanEffect;
        /* 0x3760 */ public GcScanEffectData VRGhostScanEffect;
        /* 0x37B0 */ public GcScanEffectData BlankScanEffect;
        /* 0x3800 */ public GcScanEffectData BaseBuildingValidScanEffect;
        /* 0x3850 */ public GcScanEffectData BaseBuildingPreviewSelectionScanEffect;
        /* 0x38A0 */ public GcScanEffectData BaseBuildingSelectionScanEffect;
        /* 0x38F0 */ public GcScanEffectData BaseBuildingDeleteScanEffect;
        /* 0x3940 */ public GcScanEffectData BaseBuildingGhostScanEffect;
        /* 0x3990 */ public GcScanEffectData BaseBuildingSpawnStaticEffect;
        /* 0x39E0 */ public GcScanEffectData BaseBuildingVisionScanEffect;
        /* 0x3A30 */ public GcScanEffectData BaseBuildingErrorInsideScanEffect;
        /* 0x3A80 */ public GcScanEffectData BaseBuildingErrorCollisionScanEffect;
        /* 0x3AD0 */ public GcScanEffectData BaseBuildingErrorImpossibleScanEffect;
        /* 0x3B20 */ public GcScanEffectData BaseBuildingErrorUnaffordableScanEffect;
        /* 0x3B70 */ public GcScanEffectData BaseBuildingErrorAboveWaterScanEffect;
        /* 0x3BC0 */ public GcScanEffectData BaseBuildingErrorBelowWaterScanEffect;
        /* 0x3C10 */ public GcScanEffectData BaseBuildingRemotePlayerValidScanEffect;
        /* 0x3C60 */ public GcScanEffectData BaseBuildingRemotePlayerSelectionScanEffect;
        /* 0x3CB0 */ public float BaseBuildingRemotePlayerErrorAlphaScanEffect;
        /* 0x3CB4 */ public bool UseDebugScan;
        /* 0x3CB5 */ public bool DebugScanForceBuilding;
        /* 0x3CB8 */ public GcBuildingClassification DebugScanForceBuildingType;
        /* 0x3CBC */ public float ShipScanOffset;
        /* 0x3CC0 */ public float ShipScanOffsetGap;
        /* 0x3CC4 */ public TkCurveType ShipScanCurve;
        /* 0x3CC8 */ public float ScannerMarkerFadeTime;
        /* 0x3CCC */ public float ScannerSmallMarkerFadeTime;
        /* 0x3CD0 */ public float ScannerPhysicsProbeAABBSize;
        /* 0x3CD4 */ public float ScannerAnalyzeFXRate;
        /* 0x3CD8 */ public float ScannerSubstanceTimePerTrigger;
        /* 0x3CDC */ public float ScannerTuningA;
        /* 0x3CE0 */ public float ScannerTuningB;
        /* 0x3CE4 */ public float ScannerTuningC;
        /* 0x3CE8 */ public float ScannerTuningD;
        /* 0x3CEC */ public float ScannerTuningResourceOffset1;
        /* 0x3CF0 */ public float ScannerTuningResourceOffset2;
        /* 0x3CF4 */ public float ScannerTuningSmoothStepAmount;
        /* 0x3CF8 */ public float ScannerTuningTrailingEdge;
        /* 0x3CFC */ public bool Autolevel;
        /* 0x3D00 */ public Colour ScannerColour1;
        /* 0x3D10 */ public Colour ScannerColour2;
        /* 0x3D20 */ public float HUDStoreFlashTime;
        /* 0x3D24 */ public float ExcitingViewAngle;
        /* 0x3D28 */ public float ExcitingViewRange;
        /* 0x3D2C */ public float ExcitingNearRange;
        /* 0x3D30 */ public float ProjectileSpeedBoost;
        /* 0x3D34 */ public float LineWidth;
        /* 0x3D38 */ public float LockOffFactor;
        /* 0x3D3C */ public float OffscreenFadeDistance;
        /* 0x3D40 */ public float OffscreenMinDot;
        /* 0x3D44 */ public bool HUDUpdateFromData;
        /* 0x3D48 */ public float HUDLockOnAudioTime;
        /* 0x3D4C */ public float HUDArrowPrimaryScaler;
        /* 0x3D50 */ public Vector2f HUDDamageSize;
        /* 0x3D58 */ public Vector2f HUDDamageSplatSize;
        /* 0x3D60 */ public Colour HUDDamageSplatShieldColour;
        /* 0x3D70 */ public Colour HUDDamageSplatPainColour;
        /* 0x3D80 */ public float HUDDamageOffset;
        /* 0x3D84 */ public float HUDDamageScaler;
        /* 0x3D88 */ public float HUDDamageRadius;
        /* 0x3D90 */ public GcShipHUDTargetData HUDTarget;
        /* 0x41C0 */ public float HUDLabelTime;
        /* 0x41C4 */ public float HUDLabelAngle;
        /* 0x41C8 */ public float HUDLabelAngleOffset;
        /* 0x41CC */ public float HUDLabelOffsetX;
        /* 0x41D0 */ public float HUDLabelOffsetY;
        /* 0x41D4 */ public float HUDLabelOffsetZ;
        /* 0x41D8 */ public float HUDLabelScale;
        /* 0x41DC */ public bool PlayHitEffectsOnZeroDamage;
        /* 0x41E0 */ public float MaxSpawnTime;
        /* 0x41E4 */ public NMSString0x80 ResourceParticleFile;
        /* 0x4264 */ public float ResourceParticleSpeed;
        /* 0x4268 */ public float ResourceParticleSpread;
        /* 0x426C */ public int ResourceParticleMaxNum;
        /* 0x4270 */ public int ResourceParticleMinNum;
        /* 0x4274 */ public float MapHeight;
        /* 0x4278 */ public float MapOffset;
        /* 0x427C */ public float MapTargetOffset;
        /* 0x4280 */ public float MapFOV;
        /* 0x4284 */ public float MapRadius;
        /* 0x4288 */ public float HUDScaleAdd;
        /* 0x428C */ public float HUDScaleRadius;
        /* 0x4290 */ public float HUDScaleMin;
        /* 0x4294 */ public float HUDScaleMinAim;
        /* 0x4298 */ public float HUDScaleMax;
        /* 0x429C */ public float HUDScaleFarTarget;
        /* 0x42A0 */ public float HUDReticuleMoveBack;
        /* 0x42A4 */ public float HUDReticuleMoveAim;
        /* 0x42A8 */ public float MouseSensitivity;
        /* 0x42AC */ public float MouseSensitivityShip;
        /* 0x42B0 */ public float MouseSensitivityVehicle;
        /* 0x42B4 */ public float PainTime;
        /* 0x42B8 */ public TkCurveType PainCurve;
        /* 0x42C0 */ public Colour PainColour;
        /* 0x42D0 */ public float GunOffsetX;
        /* 0x42D4 */ public float GunOffsetY;
        /* 0x42D8 */ public float GunOffsetZ;
        /* 0x42DC */ public float GunOffsetAggressiveX;
        /* 0x42E0 */ public float GunOffsetAggressiveY;
        /* 0x42E4 */ public float GunOffsetAggressiveZ;
        /* 0x42E8 */ public float GunDownAngle;
        /* 0x42EC */ public float GunUpAngle;
        /* 0x42F0 */ public float BarrelOffset;
        /* 0x42F4 */ public float HitOffset;
        /* 0x42F8 */ public GcTracerData BulletTracer;
        /* 0x4310 */ public GcTracerData ShipTracer;
        /* 0x4328 */ public NMSString0x10 DefaultAnim;
        /* 0x4338 */ public bool DebugDrawTriggerBoxes;
        /* 0x433C */ public float SpeedReadoutMultiplier;
        /* 0x4340 */ public float SpaceSpeedReadoutMultiplier;
        /* 0x4344 */ public float CombatSpeedReadoutMultiplier;
        /* 0x4348 */ public int TorchCookieIndex;
        /* 0x434C */ public float TorchFoV;
        /* 0x4350 */ public float TorchStrength;
        /* 0x4354 */ public int TorchDimCookieIndex;
        /* 0x4358 */ public float TorchDimFoV;
        /* 0x435C */ public float TorchDimStrength;
        /* 0x4360 */ public float InteractionTorchFoV;
        /* 0x4364 */ public float InteractionTorchStrength;
        /* 0x4368 */ public float UndergroundTorchFoV;
        /* 0x436C */ public float UndergroundTorchFoVFar;
        /* 0x4370 */ public float UndergroundTorchStrength;
        /* 0x4374 */ public float UndergroundTorchStrengthFar;
        /* 0x4378 */ public float TorchOffsetX;
        /* 0x437C */ public float TorchOffsetY;
        /* 0x4380 */ public float TorchOffsetZMin;
        /* 0x4384 */ public float TorchOffsetZ;
        /* 0x4388 */ public float TorchStaffOffsetY;
        /* 0x438C */ public float TorchStaffOffsetZMin;
        /* 0x4390 */ public float TorchStaffOffsetZ;
        /* 0x4394 */ public float TorchOffsetZSpeedRange;
        /* 0x4398 */ public float TorchOffsetZMinSpeed;
        /* 0x439C */ public float TorchHandOffsetX;
        /* 0x43A0 */ public float TorchHandOffsetY;
        /* 0x43A4 */ public float TorchHandOffsetZ;
        /* 0x43A8 */ public bool TorchDisabledInTheDay;
        /* 0x43AC */ public float TorchRotation;
        /* 0x43B0 */ public float TorchFollowCameraPitch;
        /* 0x43B4 */ public float TorchFollowCameraTime;
        /* 0x43C0 */ public Colour TorchColour;
        /* 0x43D0 */ public float PlayerAmbientSpotLightIntensity;
        /* 0x43E0 */ public Colour PlayerAmbientSpotLightColour;
        /* 0x43F0 */ public float PlayerAmbientSpotLightOffsetY;
        /* 0x43F4 */ public float PlayerAmbientSpotLightOffsetZ;
        /* 0x43F8 */ public float SimpleInteractionPickupAngle;
        /* 0x43FC */ public float SimpleInteractionPickupRadius;
        /* 0x4400 */ public float SimpleInteractionMessageTime;
        /* 0x4404 */ public float InteractionPickupAngle;
        /* 0x4408 */ public float InteractionPickupRadius;
        /* 0x440C */ public float ExplosionRadiusMultiplier;
        /* 0x4410 */ public float ExplosionForce;
        /* 0x4414 */ public float ExplosionForceMaxForceRadius;
        /* 0x4418 */ public float LaserExplosionForceRadius;
        /* 0x441C */ public float LaserExplosionForce;
        /* 0x4420 */ public float LaserExplosionForceMaxForceRadius;
        /* 0x4424 */ public NMSString0x80 InitialDebrisScene;
        /* 0x44A4 */ public float BonusSameTypeElementsAdd;
        /* 0x44A8 */ public float BonusSameTypeElementsMultiply;
        /* 0x44AC */ public float BonusChildTypeElementsAdd;
        /* 0x44B0 */ public float BonusChildTypeElementsMultiply;
        /* 0x44B4 */ public float InteractionComponentUpdateDistance;
        /* 0x44B8 */ public float GoalGapVoxelDist;
        /* 0x44BC */ public float BlackHoleJumpVoxelDist;
        /* 0x44C0 */ public float BlackHoleJumpVoxelVariation;
        /* 0x44C4 */ public float JumpToCenterFuelCost;
        /* 0x44C8 */ public int WarpsBetweenMiniStation;
        /* 0x44CC */ public float HoursBetweenMiniStation;
        /* 0x44D0 */ public NMSString0x80 LegacyBaseBuildingTable;
        /* 0x4550 */ public NMSString0x80 BaseBuildingTable;
        /* 0x45D0 */ public float BaseBuildingHoverTimeToKnowPart;
        /* 0x45D8 */ public ulong NPCWorkerInteractionCooldown;
        /* 0x45E0 */ public float LightStrength;
        /* 0x45E4 */ public float AirLockDoorRange;
        /* 0x45E8 */ public bool DisableBasePowerHUDOverlay;
        /* 0x45E9 */ public bool KeepAttackingMaxWantedLevel;
        /* 0x45EA */ public bool UseMultiplierBonus;
        /* 0x45EC */ public float ShipDisplayDamageMultiplier;
        /* 0x45F0 */ public bool UseTradingCostTable;
        /* 0x45F1 */ public bool ChangePricesLocally;
        /* 0x45F2 */ public bool ShowPriceMarkupsAsPercentages;
        /* 0x45F4 */ public int ProductItemStockDecayTime;
        /* 0x45F8 */ public int ProductItemStockReplenishTime;
        /* 0x45FC */ public int SubstanceItemStockDecayTime;
        /* 0x4600 */ public int SubstanceItemStockReplenishTime;
        /* 0x4604 */ public GcPortalData Portal;
        /* 0x460C */ public int FourthRaceSpawnPercentage;
        /* 0x4610 */ public int NonDominantRaceSpawnPercentage;
        /* 0x4614 */ public int NonDominantRaceSpawnPercentagePirate;
        /* 0x4618 */ public float CorruptSentinelProbability;
        /* 0x461C */ public float ViciousSentinelProbability;
        /* 0x4620 */ public float ViciousStormProbability;
        /* 0x4624 */ public float ViciousWeatherProbability;
        /* 0x4628 */ public float ScrapDroneProbability;
        /* 0x462C */ public float MaxRespawnOnGroundHeight;
        /* 0x4630 */ public float DeadPlanetGravityFactor;
        /* 0x4640 */ public GcScanEffectData ShipSalvageScanEffect;
        /* 0x4690 */ public float SalvageShipPitch;
        /* 0x4694 */ public float SalvageShipHeightOffset;
        /* 0x4698 */ public float SalvageShipExplodeSpeed;
        /* 0x469C */ public float SalvageShipShowShipSpeed;
        /* 0x46A0 */ public float SalvageShipShowShipDistance;
        /* 0x46A4 */ public float SalvageShipExplodeShipDistance;
        /* 0x46A8 */ public float SalvageShipOneRevolutionTime;
        /* 0x46AC */ public float SalvageWeaponPitch;
        /* 0x46B0 */ public float SalvageWeaponHeightOffset;
        /* 0x46B4 */ public float SalvageWeaponScale;
        /* 0x46B8 */ public NMSString0x20A CommunicatorFireteamNexusExitDialog;
        /* 0x46D8 */ public NMSString0x20A CommunicatorNexusExitAbandonWarningDialog;
        /* 0x46F8 */ public float BackgroundSpaceEncounterCheckTimer;
        /* 0x46FC */ public float PulseEncounterCheckTimer;
        /* 0x4700 */ public float PulseEncounterChance;
        /* 0x4704 */ public float PulseEncounterChanceStandard;
        /* 0x4708 */ public float PulseEncounterChanceRed;
        /* 0x470C */ public float PulseEncounterChanceGreen;
        /* 0x4710 */ public float PulseEncounterChanceBlue;
        /* 0x4714 */ public float PulseEncounterStopPower;
        /* 0x4718 */ public float PulseEncounterStopSpeed;
        /* 0x471C */ public float DerelictPulseEncounterAtmosphericEffectChance;
        [NMS(Size = 0x7)]
        /* 0x4720 */ public int[] AlienShipEvolveCosts;
        /* 0x473C */ public float SpawnerWeaponRange;
        /* 0x4740 */ public TkModelResource WeaponSpawnObject;
        /* 0x47C4 */ public TkModelResource WeaponSpawnAltObject;
        /* 0x4848 */ public bool UseCustomSaveDirectory;
        /* 0x484C */ public Vector2f FrigateFlybyTimer;
        /* 0x4854 */ public int PersonalInventoryMinWidthMax;
        /* 0x4858 */ public int PersonalInventoryMinHeightMax;
        /* 0x485C */ public int PersonalTechInventoryMinWidthMax;
        /* 0x4860 */ public int PersonalTechInventoryMinHeightMax;
        /* 0x4864 */ public int ShipInventoryMinWidthMax;
        /* 0x4868 */ public int ShipInventoryMinHeightMax;
        /* 0x486C */ public int ShipTechInventoryMinWidthMax;
        /* 0x4870 */ public int ShipTechInventoryMinHeightMax;
        /* 0x4874 */ public int VehicleInventoryMinWidthMax;
        /* 0x4878 */ public int VehicleInventoryMinHeightMax;
        /* 0x487C */ public int WeaponInventoryMinWidthMax;
        /* 0x4880 */ public int WeaponInventoryMinHeightMax;
        /* 0x4884 */ public float AtlasGunCurrencyConversion;
    }
}
