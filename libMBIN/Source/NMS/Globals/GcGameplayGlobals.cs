using System;
using System.Collections.Generic;

using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0x1F20, GUID = 0xAF3097104934EA65, NameHash = 0x71CAF682B6986E6E)]
    public class GcGameplayGlobals : NMSTemplate
    {
        /* 0x0000 */ public float CargoShieldStrength;
        /* 0x0004 */ public float PirateRaidAccelerator;
        /* 0x0008 */ public float PirateGroundAccelerator;
        /* 0x000C */ public float PirateGroundInventoryAccelerator;
        /* 0x0010 */ public float PoliceAcceleratorStationLockOn;
        /* 0x0014 */ public float PoliceAcceleratorPulseExtra;
        /* 0x0018 */ public int PoliceAcceleratorSmugglingItemsMax;
        /* 0x001C */ public float PoliceAcceleratorSmugglingMulMax;
        /* 0x0020 */ public float PoliceAcceleratorNoCargoWealthy;
        /* 0x0024 */ public float PoliceAcceleratorNoCargoNormal;
        /* 0x0028 */ public float PoliceAcceleratorNoCargoSkipScanOdds;
        /* 0x002C */ public float InfestedPlanetDeepSpaceFlybyMultiplier;
        /* 0x0030 */ public float SmugglerSellingMarkup;
        /* 0x0034 */ public float IllegalTechProductTradingMod;
        /* 0x0038 */ public float CombatLevelBestWeaponBias;
        /* 0x003C */ public float CombatLevelBaseValueBoltcaster;
        /* 0x0040 */ public float CombatLevelBaseValueShotgun;
        /* 0x0044 */ public float CombatLevelBaseValueRailgun;
        /* 0x0048 */ public float CombatLevelBaseValueSMG;
        /* 0x004C */ public float CombatLevelBaseValueCannon;
        /* 0x0050 */ public float CombatLevelBaseValueGrenade;
        /* 0x0054 */ public float CombatLevelSClassValue;
        /* 0x0058 */ public NMSString0x10 NexusRecipeCostType;
        /* 0x0068 */ public int NexusRecipeCostNaniteMultiplier;
        /* 0x006C */ public float ShipScanPlanetRechargeMultiplier;
        /* 0x0070 */ public float ShipScanSpaceRechargeMultiplier;
        /* 0x0078 */ public NMSString0x10 FreeSuitSlotID;
        /* 0x0088 */ public float InitialLocationProtectionRadiusMultiplier;
        /* 0x008C */ public float PartyPlanetSearchDistance;
        /* 0x0090 */ public float UnderwaterLightningDamageDistanceMultiplier;
        /* 0x0094 */ public int MaxActiveWeatherHazardGifts;
        /* 0x0098 */ public float WeatherHazardGiftMaxDistance;
        /* 0x009C */ public float WeatherHazardGiftLifeTime;
        /* 0x00A0 */ public GcTechnologyCategory TechnologyOverrideForSmuggler;
        /* 0x00A4 */ public float MaxMeteorSurfaceAngle;
        /* 0x00A8 */ public float StormGravityChangeTime;
        /* 0x00AC */ public float StormBonusJetpackMod;
        /* 0x00B0 */ public float StormBonusSprintMod;
        /* 0x00B4 */ public float StormBonusMiningHeatMod;
        /* 0x00B8 */ public float StormBonusMiningAmountMod;
        /* 0x00BC */ public GcPlayerHazardType StormBonusJetpackWeather;
        /* 0x00C0 */ public GcPlayerHazardType StormBonusSprintWeather;
        /* 0x00C4 */ public GcPlayerHazardType StormBonusMiningHeatWeather;
        /* 0x00C8 */ public GcPlayerHazardType StormBonusMiningAmountWeather;
        /* 0x00CC */ public float AlienPodThreshold2;
        /* 0x00D0 */ public float AlienPodThreshold1;
        /* 0x00E0 */ public Colour BulletTraceLineColour;
        /* 0x00F0 */ public float BulletTraceLineWidth;
        /* 0x00F4 */ public float ShipBulletTraceLineWidth;
        /* 0x00F8 */ public float VehicleAllIconScanTime;
        /* 0x00FC */ public int GPSRandomChangeTimeWide;
        /* 0x0100 */ public int GPSRandomChangeTimeMid;
        /* 0x0104 */ public int GPSRandomChangeTimeNarrow;
        /* 0x0108 */ public float SalvageValueAsProds;
        /* 0x010C */ public int SalvageSubstanceValueThreshold;
        [NMS(Size = 0x4)]
        /* 0x0110 */ public NMSString0x10[] SalvageRewardsShuttle;
        [NMS(Size = 0x4)]
        /* 0x0150 */ public NMSString0x10[] SalvageRewardsDropship;
        [NMS(Size = 0x4)]
        /* 0x0190 */ public NMSString0x10[] SalvageRewardsFighter;
        [NMS(Size = 0x4)]
        /* 0x01D0 */ public NMSString0x10[] SalvageRewardsScience;
        [NMS(Size = 0xA)]
        /* 0x0210 */ public NMSString0x10[] SalvageTechList;
        /* 0x02B0 */ public List<NMSString0x10> SalvageProdsList;
        /* 0x02C0 */ public List<NMSString0x10> SalvageSubstancesList;
        /* 0x02D0 */ public bool AlwaysSpaceBattle;
        /* 0x02D4 */ public float MultidimensionalFadeTime;
        /* 0x02D8 */ public float TeleporterDistanceTravelledMultiplier;
        /* 0x02E0 */ public GcScanEffectData BinocularSelectedEffect;
        /* 0x0330 */ public Colour BinocularSelectedColour;
        /* 0x0340 */ public Colour BinocularSelectedUnknownColour;
        /* 0x0350 */ public float CockpitScale;
        /* 0x0354 */ public float MaxDistanceForLadderTeleport;
        /* 0x0358 */ public float AngleFromBaseComputerWhenTeleporting;
        /* 0x035C */ public float DistanceFromBaseComputerWhenTeleporting;
        /* 0x0360 */ public float AutoTranslateWordChance;
        /* 0x0364 */ public bool MissionSurveySuggestSurveyForNearScannables;
        /* 0x0368 */ public float MissionSurveyMaxGuidanceDistance;
        /* 0x036C */ public float MissionSurveyMaxGuidanceDistanceWorms;
        /* 0x0370 */ public NMSString0x10 MissionSurveyWormID;
        /* 0x0380 */ public float MissionSurveyMarkerAutoHideTime;
        /* 0x0384 */ public float MissionSurveyScanRangeMultiplier;
        /* 0x0388 */ public float MissionSurveyMaxScanAngle;
        /* 0x038C */ public float MissionSurveyMaxScanAngleScannableComp;
        /* 0x0390 */ public float MissionSurveyBeginScanPercentageScannable;
        /* 0x0394 */ public float MissionSurveyBeginScanPercentageEvent;
        /* 0x0398 */ public float MissionSurveyScanSpeed;
        /* 0x039C */ public float MissionSurveyScanSpeedScannableComp;
        /* 0x03A0 */ public float MissionSurveyRevealWithoutScanDistance;
        /* 0x03A4 */ public float MissionSurveyAutoScanDistance;
        /* 0x03A8 */ public float MissionSurveyAutoScanFlattenRadiusMul;
        /* 0x03AC */ public float MissionSurveySonarMinPulseSpeed;
        /* 0x03B0 */ public float MissionSurveySonarMaxPulseSpeed;
        /* 0x03B4 */ public float MissionSurveySonarPulseSpeedBandCount;
        /* 0x03B8 */ public float MissionSurveyMaxAngleOffset;
        /* 0x03BC */ public float MissionSurveyMaxSignalConeAngle;
        /* 0x03C0 */ public float MissionSurveyInShipArrivedDistance;
        /* 0x03C4 */ public float SurveyBeginScanPercentage;
        /* 0x03C8 */ public float SurveyScanMinSpeed;
        /* 0x03CC */ public float SurveyScanMaxSpeed;
        /* 0x03D0 */ public float SurveySonarPulseSpeedBandCount;
        /* 0x03D4 */ public float SurveySonarMinPulseSpeed;
        /* 0x03D8 */ public float SurveySonarMaxPulseSpeed;
        /* 0x03DC */ public float SurveySonarMiddleRangeMin;
        /* 0x03E0 */ public float SurveySonarMiddleRangeMax;
        /* 0x03E4 */ public float SurveyMaxDistance;
        /* 0x03E8 */ public int CreaturesToBaitForTutorial;
        /* 0x03EC */ public int CreaturesToFeedForTutorial;
        /* 0x03F0 */ public bool DisableGalaxyMapInQuickMenu;
        /* 0x03F1 */ public bool DisableNexusInQuickMenu;
        /* 0x03F2 */ public bool EnableTeleporters;
        /* 0x03F3 */ public bool AllowSpaceScanEvents;
        /* 0x03F4 */ public bool CanMoveTechnology;
        /* 0x03F8 */ public float NormalModeHeatBonus;
        /* 0x03FC */ public float BaseLaserHeatTime;
        /* 0x0400 */ public float HeatAlertTime;
        /* 0x0404 */ public float HeatAlertTimeSurvival;
        /* 0x0408 */ public float HeatDamageBoost;
        /* 0x040C */ public float HeatWidthBoost;
        /* 0x0410 */ public float HeatWidthBoostAlt;
        /* 0x0414 */ public float OverheatGenerosity;
        /* 0x0418 */ public float HeatMaxPowerPoint;
        /* 0x041C */ public float HeatMaxPowerPointSurvival;
        /* 0x0420 */ public float OverheatDecay;
        /* 0x0424 */ public float OverheatDecaySurvival;
        /* 0x0428 */ public TkCurveType OverheatCurve;
        /* 0x042C */ public TkCurveType OverheatCurveSurvival;
        /* 0x0430 */ public bool UseOverheatColour;
        /* 0x0440 */ public Colour OverHeatColour;
        /* 0x0450 */ public Colour OverHeatBarColour;
        /* 0x0460 */ public Colour OverHeatColourSurvival;
        /* 0x0470 */ public TkCurveType OverheatColourCurveShip;
        /* 0x0474 */ public TkCurveType OverheatColourCurve;
        /* 0x0478 */ public TkCurveType OverheatColourCurveSurvival;
        /* 0x047C */ public int RefinerProductsMadeInTime;
        /* 0x0480 */ public int RefinerSubsMadeInTime;
        /* 0x0484 */ public int RefinerProductsMadeInTimeSurvival;
        /* 0x0488 */ public int RefinerSubsMadeInTimeSurvival;
        /* 0x0490 */ public List<NMSString0x10> HyperdriveAccess;
        /* 0x04A0 */ public List<NMSString0x10> FreighterHyperdriveAccess;
        /* 0x04B0 */ public float SeasonalMessageModuleAttractDistanceMul;
        /* 0x04B4 */ public float HmdInteractionRangeMinRange;
        /* 0x04B8 */ public float HmdInteractionRangeMinDistance;
        /* 0x04BC */ public float HmdInteractionRangeMultiplier;
        /* 0x04C0 */ public bool InstallTechWithInteraction;
        /* 0x04C1 */ public bool FreighterRequiresRGBHyperdriveUpgrades;
        /* 0x04C2 */ public bool DisableAnomalyAmbientSpawn;
        /* 0x04C3 */ public bool AllowDeconstruct;
        /* 0x04C4 */ public bool AllowBinocularMarker;
        /* 0x04C5 */ public bool EveryMaintenanceIsBroken;
        /* 0x04C6 */ public bool SpawnResourceBlobsOnPartDelete;
        /* 0x04C7 */ public bool EnableShootHitEffect;
        /* 0x04C8 */ public int MaxNumSameGroupTech;
        /* 0x04CC */ public float ShootableArmourHighlightHitTime;
        /* 0x04D0 */ public float ShootableAggroMinStartTime;
        /* 0x04D4 */ public float ShootableAggroForgetTime;
        /* 0x04E0 */ public Colour RefinerColour1A;
        /* 0x04F0 */ public Colour RefinerColour1B;
        /* 0x0500 */ public Colour RefinerColour1C;
        /* 0x0510 */ public Colour RefinerColour1D;
        /* 0x0520 */ public float AtmosphereEntryTime;
        /* 0x0524 */ public float AtmosphereEntryFadeTimeFactor;
        /* 0x0528 */ public float AtmosphereEntryOffset;
        /* 0x052C */ public TkCurveType AtmosphereEntryCurve;
        /* 0x0530 */ public float AtmosphereEntryErrorTime;
        /* 0x0534 */ public float TerrainResourceScanTime;
        /* 0x0538 */ public float TerrainResourceScanRange;
        /* 0x053C */ public float TerrainResourceCompassRange;
        /* 0x0540 */ public bool BinocsDisplayUnknownCreatures;
        /* 0x0544 */ public float BinocularScanTargetMinHeight;
        /* 0x0548 */ public float BinocularScanTargetHeightRange;
        /* 0x054C */ public float BinocTimeBeforeScan;
        /* 0x0550 */ public float BinocMinScanTime;
        /* 0x0554 */ public float BinocScanTime;
        /* 0x0558 */ public float BinocCreatureScanTime;
        /* 0x055C */ public TkCurveType BinocularScanTargetHeightCurve;
        /* 0x0560 */ public float BinocularScanTargetInitialFadeTime;
        /* 0x0564 */ public float BinocularScanTargetScaler;
        /* 0x0568 */ public float BinocularScanTargetLineWidth;
        /* 0x056C */ public float BinocularScanTargetFadeTime;
        /* 0x0570 */ public Colour BinocularScanTargetColour;
        /* 0x0580 */ public GcScanEffectData BinocularScanEffect;
        /* 0x05D0 */ public float ScannerIconsClumpRadius;
        /* 0x05D4 */ public float ScannableComponentMarkerOffset;
        /* 0x05D8 */ public float ScannableComponentPlaceMarkerOffset;
        /* 0x05DC */ public float MissionEventAllowResetDistance;
        /* 0x05E0 */ public float AllRecipesKnownNanitesMin;
        /* 0x05E4 */ public float AllRecipesKnownNanitesMax;
        /* 0x05E8 */ public float MaxPossibleShipDamagePotential;
        /* 0x05EC */ public float BuildingPlayerBaseIconOffset;
        /* 0x05F0 */ public float CriticalHitMultiplier;
        /* 0x05F4 */ public float HitEffectMinTime;
        /* 0x05F8 */ public float GrabPlayerCooldownTime;
        /* 0x05FC */ public float TapInteractionIncreaseAmount;
        /* 0x0600 */ public float TapInteractionDecay;
        /* 0x0610 */ public GcScanEffectData DeconstructEffect;
        /* 0x0660 */ public GcScanEffectData HitEffect;
        /* 0x06B0 */ public GcScanEffectData HitEffectCritical;
        /* 0x0700 */ public float CommunicatorSpawnOffset;
        /* 0x0704 */ public float CommunicatorSpawnHeightOffset;
        /* 0x0710 */ public Vector3f CommunicatorShipSpawnOffset;
        /* 0x0720 */ public float CommunicatorSpawnScale;
        /* 0x0724 */ public float CommunicatorSpawnRotation;
        /* 0x0728 */ public float CommunicatorCargoScanDroneScale;
        /* 0x072C */ public float CommunicatorCargoScanDroneScaleFallback;
        /* 0x0730 */ public float CommunicatorCargoScanDroneUpOffset;
        /* 0x0734 */ public float CommunicatorCargoScanDroneUpOffsetFallback;
        /* 0x0738 */ public float CommunicatorCargoScanDroneAtOffsetFallback;
        /* 0x073C */ public float CommunicatorCargoScanDronePitch;
        /* 0x0740 */ public float CommunicatorCargoScanDroneRoll;
        /* 0x0744 */ public float CommunicatorCargoScanDroneYaw;
        /* 0x0748 */ public float CommunicatorFadeTime;
        /* 0x0750 */ public List<GcScanEffectData> CommunicatorEffectTable;
        /* 0x0760 */ public int MaxNumMissionsFromMissionGiver;
        /* 0x0764 */ public float InteractionMinTimeBeforeHighlightedOptionSelection;
        /* 0x0768 */ public float InteractionMinTimeBetweenStickOptionHighlights;
        /* 0x076C */ public float InteractionStickOptionStrength;
        /* 0x0770 */ public float InteractionMessageModuleDisplayTime;
        /* 0x0774 */ public float InteractionAttractTime;
        /* 0x0778 */ public float InteractionDescriptionTextTime;
        /* 0x077C */ public float InteractionMinTimeForResponseText;
        /* 0x0780 */ public bool InteractionOverride;
        /* 0x0784 */ public GcInteractionType InteractionOverrideFrom;
        /* 0x0788 */ public GcInteractionType InteractionOverrideTo;
        /* 0x078C */ public float DestroyEffectHeight;
        /* 0x0790 */ public float DestroyEffectMaxScale;
        /* 0x0794 */ public float EventTargetSpeed;
        /* 0x0798 */ public int SpecialMiningAmount;
        /* 0x079C */ public float SpecialMiningTime;
        /* 0x07A0 */ public int HardModeTechDamageMidNum;
        /* 0x07A4 */ public int HardModeTechDamageMidPercent;
        /* 0x07A8 */ public int HardModeTechDamageHighPercent;
        /* 0x07AC */ public int EarlyPiratesToBeKilled;
        /* 0x07B0 */ public int PlanetPirateFlybyMaxRepeatCounter;
        /* 0x07B4 */ public int PirateInterestOverride;
        /* 0x07B8 */ public float PirateInterestDistance;
        /* 0x07BC */ public float PirateInterestDistanceMPMission;
        [NMS(Size = 0x3)]
        /* 0x07C0 */ public int[] PirateInterestLevels;
        [NMS(Size = 0x3)]
        /* 0x07CC */ public int[] PirateInterestLevelsSurvival;
        /* 0x07D8 */ public int PoliceInterestOverride;
        /* 0x07DC */ public float PoliceInterestDistance;
        /* 0x07E0 */ public float PoliceInterestDistanceMPMission;
        [NMS(Size = 0x3)]
        /* 0x07E4 */ public int[] PoliceInterestLevels;
        [NMS(Size = 0x3)]
        /* 0x07F0 */ public int[] PoliceInterestLevelsSurvival;
        /* 0x07FC */ public float SpaceCombatRadius;
        /* 0x0800 */ public int WarpsBetweenBattles;
        /* 0x0804 */ public float HoursBetweenBattles;
        /* 0x0808 */ public float SpaceBattleRadius;
        /* 0x080C */ public float SpaceBattleAnyHostileShipsRadius;
        /* 0x0810 */ public float FreighterBattleRadius;
        /* 0x0814 */ public float MissileMaxTurnAngle;
        /* 0x0818 */ public float MissileLockTime;
        /* 0x081C */ public float MissileReloadTime;
        /* 0x0820 */ public float MissileRotateMin;
        /* 0x0824 */ public float MissileRotateMax;
        /* 0x0828 */ public float MissileMaxSpeed;
        /* 0x082C */ public float MissileForceMin;
        /* 0x0830 */ public float MissileForceMax;
        /* 0x0834 */ public float MissileBrakeForceMin;
        /* 0x0838 */ public float MissileBrakeForceMax;
        /* 0x083C */ public float MissileThreatTime;
        /* 0x0840 */ public float MissileBrakeTime;
        /* 0x0844 */ public float MissileHitRadius;
        /* 0x0848 */ public float MissileOffset;
        /* 0x084C */ public float MissileMinCircleTime;
        /* 0x0850 */ public float MissileApproachTime;
        /* 0x0854 */ public float MissileRotateSpeed;
        /* 0x0858 */ public float ScanStartTimeDelayMinDist;
        /* 0x085C */ public float ScanStartTimeDelayRange;
        /* 0x0860 */ public float ScanStartTimeDistanceDelayTime;
        /* 0x0864 */ public float ScanStickyDecay;
        /* 0x0868 */ public float CreatureScanStickyDecay;
        /* 0x086C */ public float CreatureScanAngle;
        /* 0x0870 */ public float CreatureMinScanTime;
        /* 0x0874 */ public float ScanAngle;
        /* 0x0878 */ public float NewDiscoveryDisplayTime;
        /* 0x087C */ public bool FailToFindBuildings;
        /* 0x0880 */ public float WaterLandingDamageMultiplier;
        /* 0x0884 */ public int CritDamage;
        /* 0x0888 */ public float CritScale;
        /* 0x088C */ public int NumMissionsPerSolarSystem;
        /* 0x0890 */ public float EmergencyBuildingScanEventDistance;
        /* 0x0894 */ public float EmergencyBuildingScanEventTime;
        /* 0x0898 */ public float ProjectileLightIntensity;
        /* 0x089C */ public float AggressiveSentinelProbability;
        /* 0x08A0 */ public float AggressiveSentinelProbabilitySurvival;
        /* 0x08A4 */ public float LowSentinelProbability;
        /* 0x08A8 */ public float LowSentinelProbabilitySurvival;
        /* 0x08AC */ public float NonAggressiveLushSurvivalProbabability;
        /* 0x08B0 */ public int MaxDronesLow;
        /* 0x08B4 */ public int MaxDronesLowSurvival;
        /* 0x08B8 */ public int MaxDronesNormal;
        /* 0x08BC */ public int MaxDronesNormalSurvival;
        /* 0x08C0 */ public int MaxDronesAggressive;
        /* 0x08C4 */ public int MaxDronesAggressiveSurvival;
        /* 0x08C8 */ public GcExperienceTimers SentinelTimersLow;
        /* 0x08E8 */ public GcExperienceTimers SentinelTimersNormal;
        /* 0x0908 */ public GcExperienceTimers SentinelTimersSurvival;
        /* 0x0928 */ public int FreighterStartPecent;
        /* 0x092C */ public GcExperienceTimers FreighterTimers;
        /* 0x094C */ public GcExperienceTimers PlanetPirateTimers;
        /* 0x096C */ public GcExperienceTimers HardPlanetPirateTimers;
        /* 0x098C */ public GcExperienceTimers SpacePirateTimers;
        /* 0x09AC */ public GcExperienceTimers HardSpacePirateTimers;
        /* 0x09D0 */ public List<float> PirateEarlySpawnChances;
        /* 0x09E0 */ public float PirateEarlySpawnTime;
        /* 0x09E4 */ public GcExperienceTimers FlybyTimers;
        /* 0x0A04 */ public GcExperienceTimers SpaceFlybyTimers;
        /* 0x0A24 */ public GcExperienceTimers PoliceTimers;
        [NMS(Size = 0x6)]
        /* 0x0A44 */ public int[] FreighterTechQualityWeightings;
        /* 0x0A5C */ public int SentinelsHigh;
        /* 0x0A60 */ public int SentinelsLow;
        /* 0x0A64 */ public float AsteroidHitForce;
        /* 0x0A68 */ public float AsteroidTorqueForce;
        /* 0x0A6C */ public float AsteroidCarveRadius;
        /* 0x0A70 */ public int DeathMoneyPenalty;
        /* 0x0A74 */ public int DeathMoneyPenaltyHardMode;
        /* 0x0A78 */ public int MaxResourceCrystalBlobSize;
        /* 0x0A7C */ public float BuildingBeamDistance;
        /* 0x0A80 */ public float WaypointScanTime;
        /* 0x0A84 */ public int RareSubstanceEffectiveness;
        /* 0x0A88 */ public int CommonProductEffectiveness;
        /* 0x0A8C */ public int RareProductEffectiveness;
        /* 0x0A90 */ public int AsteroidResourceReducer;
        /* 0x0A94 */ public int TunnelStatReducer;
        /* 0x0A98 */ public float VoxelAsteroidResourceChance;
        /* 0x0A9C */ public int ResourceReducer;
        /* 0x0AA0 */ public int ResourceMinAmount;
        /* 0x0AA4 */ public int ResourceMaxAmount;
        /* 0x0AA8 */ public int ResourceCommonReducer;
        /* 0x0AAC */ public int ResourceCommonMinAmount;
        /* 0x0AB0 */ public int ResourceCommonMaxAmount;
        /* 0x0AB4 */ public int ResourceDirtReducer;
        /* 0x0AB8 */ public int ResourceDirtMinAmount;
        /* 0x0ABC */ public int ResourceDirtMaxAmount;
        /* 0x0AC0 */ public NMSString0x10 ResourceDirtSubstanceID;
        /* 0x0AD0 */ public NMSString0x10 SandwormTerrainResource;
        /* 0x0AE0 */ public NMSString0x10 BioShipTerrainResource;
        /* 0x0AF0 */ public NMSString0x20 RobotResource;
        /* 0x0B10 */ public NMSString0x20 DepotResource;
        /* 0x0B30 */ public float DockNodeBuyRadius;
        /* 0x0B34 */ public float BeaconInteractRange;
        /* 0x0B38 */ public float ShipInteractRadius;
        /* 0x0B3C */ public GcResourceCollectEffect AsteroidResourceCollect;
        /* 0x0B70 */ public float ScanAngleCutoff;
        /* 0x0B74 */ public GcScanData ToolScan;
        /* 0x0B88 */ public GcScanData ToolScanHardMode;
        /* 0x0B9C */ public GcScanData WaypointScan;
        /* 0x0BB0 */ public GcScanData BeaconScan;
        /* 0x0BC4 */ public GcScanData RadioTowerScan;
        /* 0x0BD8 */ public GcScanData ObservatoryScan;
        /* 0x0BEC */ public GcScanData DistressSignalScan;
        /* 0x0C00 */ public GcScanData DebugScanPlanet;
        /* 0x0C14 */ public GcScanData DebugScanSpace;
        /* 0x0C28 */ public GcScanData ShipScan;
        /* 0x0C3C */ public GcScanData VisualScan;
        /* 0x0C50 */ public float ZoomFindBuildingRange;
        /* 0x0C54 */ public float TimeToDisplayScanResults;
        /* 0x0C58 */ public float HoverTimeToScan;
        /* 0x0C5C */ public float HoverTimeToScanCreatures;
        /* 0x0C60 */ public int HoverVisiblePointsNeeded;
        /* 0x0C68 */ public List<GcZoomData> ZoomLevels;
        /* 0x0C80 */ public GcScanEffectData PassiveScanEffect;
        /* 0x0CD0 */ public GcScanEffectData BuildingScanEffect;
        /* 0x0D20 */ public GcScanEffectData TargetShipScanEffect;
        /* 0x0D70 */ public GcScanEffectData HUDShipScanEffect;
        /* 0x0DC0 */ public GcScanEffectData CreatureScanEffect;
        /* 0x0E10 */ public GcScanEffectData ObjectsScanEffect;
        /* 0x0E60 */ public GcScanEffectData VRGhostScanEffect;
        /* 0x0EB0 */ public GcScanEffectData BlankScanEffect;
        /* 0x0F00 */ public GcScanEffectData BaseBuildingValidScanEffect;
        /* 0x0F50 */ public GcScanEffectData BaseBuildingPreviewSelectionScanEffect;
        /* 0x0FA0 */ public GcScanEffectData BaseBuildingSelectionScanEffect;
        /* 0x0FF0 */ public GcScanEffectData BaseBuildingDeleteScanEffect;
        /* 0x1040 */ public GcScanEffectData BaseBuildingGhostScanEffect;
        /* 0x1090 */ public GcScanEffectData BaseBuildingSpawnStaticEffect;
        /* 0x10E0 */ public GcScanEffectData BaseBuildingVisionScanEffect;
        /* 0x1130 */ public GcScanEffectData BaseBuildingErrorInsideScanEffect;
        /* 0x1180 */ public GcScanEffectData BaseBuildingErrorCollisionScanEffect;
        /* 0x11D0 */ public GcScanEffectData BaseBuildingErrorImpossibleScanEffect;
        /* 0x1220 */ public GcScanEffectData BaseBuildingErrorUnaffordableScanEffect;
        /* 0x1270 */ public GcScanEffectData BaseBuildingErrorAboveWaterScanEffect;
        /* 0x12C0 */ public GcScanEffectData BaseBuildingErrorBelowWaterScanEffect;
        /* 0x1310 */ public GcScanEffectData BaseBuildingRemotePlayerValidScanEffect;
        /* 0x1360 */ public GcScanEffectData BaseBuildingRemotePlayerSelectionScanEffect;
        /* 0x13B0 */ public float BaseBuildingRemotePlayerErrorAlphaScanEffect;
        /* 0x13B4 */ public bool UseDebugScan;
        /* 0x13B5 */ public bool DebugScanForceBuilding;
        /* 0x13B8 */ public GcBuildingClassification DebugScanForceBuildingType;
        /* 0x13BC */ public float ShipScanOffset;
        /* 0x13C0 */ public float ShipScanOffsetGap;
        /* 0x13C4 */ public TkCurveType ShipScanCurve;
        /* 0x13C8 */ public float ScannerMarkerFadeTime;
        /* 0x13CC */ public float ScannerSmallMarkerFadeTime;
        /* 0x13D0 */ public float ScannerPhysicsProbeAABBSize;
        /* 0x13D4 */ public float ScannerAnalyzeFXRate;
        /* 0x13D8 */ public float ScannerSubstanceTimePerTrigger;
        /* 0x13DC */ public float ScannerTuningA;
        /* 0x13E0 */ public float ScannerTuningB;
        /* 0x13E4 */ public float ScannerTuningC;
        /* 0x13E8 */ public float ScannerTuningD;
        /* 0x13EC */ public float ScannerTuningResourceOffset1;
        /* 0x13F0 */ public float ScannerTuningResourceOffset2;
        /* 0x13F4 */ public float ScannerTuningSmoothStepAmount;
        /* 0x13F8 */ public float ScannerTuningTrailingEdge;
        /* 0x13FC */ public bool Autolevel;
        /* 0x1400 */ public Colour ScannerColour1;
        /* 0x1410 */ public Colour ScannerColour2;
        /* 0x1420 */ public float HUDStoreFlashTime;
        /* 0x1424 */ public float ExcitingViewAngle;
        /* 0x1428 */ public float ExcitingViewRange;
        /* 0x142C */ public float ExcitingNearRange;
        /* 0x1430 */ public float ProjectileSpeedBoost;
        /* 0x1434 */ public float LineWidth;
        /* 0x1438 */ public float LockOffFactor;
        /* 0x143C */ public float OffscreenFadeDistance;
        /* 0x1440 */ public float OffscreenMinDot;
        /* 0x1444 */ public bool HUDUpdateFromData;
        /* 0x1448 */ public float HUDLockOnAudioTime;
        /* 0x144C */ public float HUDArrowPrimaryScaler;
        /* 0x1450 */ public Vector2f HUDDamageSize;
        /* 0x1458 */ public Vector2f HUDDamageSplatSize;
        /* 0x1460 */ public Colour HUDDamageSplatShieldColour;
        /* 0x1470 */ public Colour HUDDamageSplatPainColour;
        /* 0x1480 */ public float HUDDamageOffset;
        /* 0x1484 */ public float HUDDamageScaler;
        /* 0x1488 */ public float HUDDamageRadius;
        /* 0x1490 */ public GcShipHUDTargetData HUDTarget;
        /* 0x18C0 */ public float HUDLabelTime;
        /* 0x18C4 */ public float HUDLabelAngle;
        /* 0x18C8 */ public float HUDLabelAngleOffset;
        /* 0x18CC */ public float HUDLabelOffsetX;
        /* 0x18D0 */ public float HUDLabelOffsetY;
        /* 0x18D4 */ public float HUDLabelOffsetZ;
        /* 0x18D8 */ public float HUDLabelScale;
        /* 0x18DC */ public bool PlayHitEffectsOnZeroDamage;
        /* 0x18E0 */ public float MaxSpawnTime;
        /* 0x18E4 */ public NMSString0x80 ResourceParticleFile;
        /* 0x1964 */ public float ResourceParticleSpeed;
        /* 0x1968 */ public float ResourceParticleSpread;
        /* 0x196C */ public int ResourceParticleMaxNum;
        /* 0x1970 */ public int ResourceParticleMinNum;
        /* 0x1974 */ public float MapHeight;
        /* 0x1978 */ public float MapOffset;
        /* 0x197C */ public float MapTargetOffset;
        /* 0x1980 */ public float MapFOV;
        /* 0x1984 */ public float MapRadius;
        /* 0x1988 */ public float HUDScaleAdd;
        /* 0x198C */ public float HUDScaleRadius;
        /* 0x1990 */ public float HUDScaleMin;
        /* 0x1994 */ public float HUDScaleMinAim;
        /* 0x1998 */ public float HUDScaleMax;
        /* 0x199C */ public float HUDScaleFarTarget;
        /* 0x19A0 */ public float HUDReticuleMoveBack;
        /* 0x19A4 */ public float HUDReticuleMoveAim;
        /* 0x19A8 */ public float MouseSensitivity;
        /* 0x19AC */ public float MouseSensitivityShip;
        /* 0x19B0 */ public float MouseSensitivityVehicle;
        /* 0x19B4 */ public float PainTime;
        /* 0x19B8 */ public TkCurveType PainCurve;
        /* 0x19C0 */ public Colour PainColour;
        /* 0x19D0 */ public float GunOffsetX;
        /* 0x19D4 */ public float GunOffsetY;
        /* 0x19D8 */ public float GunOffsetZ;
        /* 0x19DC */ public float GunOffsetAggressiveX;
        /* 0x19E0 */ public float GunOffsetAggressiveY;
        /* 0x19E4 */ public float GunOffsetAggressiveZ;
        /* 0x19E8 */ public float GunDownAngle;
        /* 0x19EC */ public float GunUpAngle;
        /* 0x19F0 */ public float BarrelOffset;
        /* 0x19F4 */ public float HitOffset;
        /* 0x19F8 */ public GcTracerData BulletTracer;
        /* 0x1A10 */ public GcTracerData ShipTracer;
        /* 0x1A28 */ public NMSString0x10 DefaultAnim;
        /* 0x1A38 */ public bool DebugDrawTriggerBoxes;
        /* 0x1A3C */ public float SpeedReadoutMultiplier;
        /* 0x1A40 */ public float SpaceSpeedReadoutMultiplier;
        /* 0x1A44 */ public float CombatSpeedReadoutMultiplier;
        /* 0x1A48 */ public int TorchCookieIndex;
        /* 0x1A4C */ public float TorchFoV;
        /* 0x1A50 */ public float TorchStrength;
        /* 0x1A54 */ public int TorchDimCookieIndex;
        /* 0x1A58 */ public float TorchDimFoV;
        /* 0x1A5C */ public float TorchDimStrength;
        /* 0x1A60 */ public float InteractionTorchFoV;
        /* 0x1A64 */ public float InteractionTorchStrength;
        /* 0x1A68 */ public float UndergroundTorchFoV;
        /* 0x1A6C */ public float UndergroundTorchFoVFar;
        /* 0x1A70 */ public float UndergroundTorchStrength;
        /* 0x1A74 */ public float UndergroundTorchStrengthFar;
        /* 0x1A78 */ public float TorchOffsetX;
        /* 0x1A7C */ public float TorchOffsetY;
        /* 0x1A80 */ public float TorchOffsetZ;
        /* 0x1A84 */ public float TorchOffsetZMin;
        /* 0x1A88 */ public float TorchOffsetZSpeedRange;
        /* 0x1A8C */ public float TorchOffsetZMinSpeed;
        /* 0x1A90 */ public float TorchHandOffsetX;
        /* 0x1A94 */ public float TorchHandOffsetY;
        /* 0x1A98 */ public float TorchHandOffsetZ;
        /* 0x1A9C */ public bool TorchDisabledInTheDay;
        /* 0x1AA0 */ public float TorchRotation;
        /* 0x1AA4 */ public float TorchFollowCameraPitch;
        /* 0x1AA8 */ public float TorchFollowCameraTime;
        /* 0x1AB0 */ public Colour TorchColour;
        /* 0x1AC0 */ public float PlayerAmbientSpotLightIntensity;
        /* 0x1AD0 */ public Colour PlayerAmbientSpotLightColour;
        /* 0x1AE0 */ public float PlayerAmbientSpotLightOffsetY;
        /* 0x1AE4 */ public float PlayerAmbientSpotLightOffsetZ;
        /* 0x1AE8 */ public float SimpleInteractionPickupAngle;
        /* 0x1AEC */ public float SimpleInteractionPickupRadius;
        /* 0x1AF0 */ public float SimpleInteractionMessageTime;
        /* 0x1AF4 */ public float InteractionPickupAngle;
        /* 0x1AF8 */ public float InteractionPickupRadius;
        /* 0x1AFC */ public float ExplosionRadiusMultiplier;
        /* 0x1B00 */ public float ExplosionForce;
        /* 0x1B04 */ public float ExplosionForceMaxForceRadius;
        /* 0x1B08 */ public float LaserExplosionForceRadius;
        /* 0x1B0C */ public float LaserExplosionForce;
        /* 0x1B10 */ public float LaserExplosionForceMaxForceRadius;
        /* 0x1B14 */ public NMSString0x80 InitialDebrisScene;
        /* 0x1B94 */ public float BonusSameTypeElementsAdd;
        /* 0x1B98 */ public float BonusSameTypeElementsMultiply;
        /* 0x1B9C */ public float BonusChildTypeElementsAdd;
        /* 0x1BA0 */ public float BonusChildTypeElementsMultiply;
        /* 0x1BA4 */ public float InteractionComponentUpdateDistance;
        /* 0x1BA8 */ public float GoalGapVoxelDist;
        /* 0x1BAC */ public float BlackHoleJumpVoxelDist;
        /* 0x1BB0 */ public float BlackHoleJumpVoxelVariation;
        /* 0x1BB4 */ public float JumpToCenterFuelCost;
        /* 0x1BB8 */ public int WarpsBetweenMiniStation;
        /* 0x1BBC */ public float HoursBetweenMiniStation;
        /* 0x1BC0 */ public NMSString0x80 LegacyBaseBuildingTable;
        /* 0x1C40 */ public NMSString0x80 BaseBuildingTable;
        /* 0x1CC0 */ public float BaseBuildingHoverTimeToKnowPart;
        /* 0x1CC8 */ public ulong NPCWorkerInteractionCooldown;
        /* 0x1CD0 */ public float LightStrength;
        /* 0x1CD4 */ public float AirLockDoorRange;
        /* 0x1CD8 */ public bool DisableBasePowerHUDOverlay;
        /* 0x1CD9 */ public bool KeepAttackingMaxWantedLevel;
        /* 0x1CDA */ public bool UseMultiplierBonus;
        /* 0x1CDC */ public float ShipDisplayDamageMultiplier;
        /* 0x1CE0 */ public bool UseTradingCostTable;
        /* 0x1CE1 */ public bool ChangePricesLocally;
        /* 0x1CE2 */ public bool ShowPriceMarkupsAsPercentages;
        /* 0x1CE4 */ public int ProductItemStockDecayTime;
        /* 0x1CE8 */ public int ProductItemStockReplenishTime;
        /* 0x1CEC */ public int SubstanceItemStockDecayTime;
        /* 0x1CF0 */ public int SubstanceItemStockReplenishTime;
        /* 0x1CF4 */ public GcPortalData Portal;
        /* 0x1CFC */ public int FourthRaceSpawnPercentage;
        /* 0x1D00 */ public int NonDominantRaceSpawnPercentage;
        /* 0x1D04 */ public int NonDominantRaceSpawnPercentagePirate;
        /* 0x1D08 */ public float ViciousSentinelProbability;
        /* 0x1D0C */ public float ViciousStormProbability;
        /* 0x1D10 */ public float ViciousWeatherProbability;
        /* 0x1D14 */ public float ScrapDroneProbability;
        /* 0x1D18 */ public float MaxRespawnOnGroundHeight;
        /* 0x1D1C */ public float DeadPlanetGravityFactor;
        /* 0x1D20 */ public GcScanEffectData ShipSalvageScanEffect;
        /* 0x1D70 */ public float SalvageShipPitch;
        /* 0x1D74 */ public float SalvageShipHeightOffset;
        /* 0x1D78 */ public float SalvageShipExplodeSpeed;
        /* 0x1D7C */ public float SalvageShipShowShipSpeed;
        /* 0x1D80 */ public float SalvageShipShowShipDistance;
        /* 0x1D84 */ public float SalvageShipExplodeShipDistance;
        /* 0x1D88 */ public float SalvageShipOneRevolutionTime;
        /* 0x1D90 */ public NMSString0x20A CommunicatorFireteamNexusExitDialog;
        /* 0x1DB0 */ public NMSString0x20A CommunicatorNexusExitAbandonWarningDialog;
        /* 0x1DD0 */ public float PulseEncounterCheckTimer;
        /* 0x1DD4 */ public float PulseEncounterChance;
        /* 0x1DD8 */ public float PulseEncounterChanceStandard;
        /* 0x1DDC */ public float PulseEncounterChanceRed;
        /* 0x1DE0 */ public float PulseEncounterChanceGreen;
        /* 0x1DE4 */ public float PulseEncounterChanceBlue;
        /* 0x1DE8 */ public float PulseEncounterStopPower;
        /* 0x1DEC */ public float PulseEncounterStopSpeed;
        [NMS(Size = 0x6)]
        /* 0x1DF0 */ public int[] AlienShipEvolveCosts;
        /* 0x1E08 */ public float SpawnerWeaponRange;
        /* 0x1E0C */ public TkTextureResource WeaponSpawnObject;
        /* 0x1E90 */ public TkTextureResource WeaponSpawnAltObject;
        /* 0x1F14 */ public bool UseCustomSaveDirectory;
        /* 0x1F18 */ public Vector2f FrigateFlybyTimer;
    }
}

/* Notes and algorithms:

Since the names for the sentinal timer and flyby timers are a bit hard to understand,
this is the algorithm that shows how the game uses them:

if SentinelLevel == Agressive:
	MaxActiveDrones = 1
	SentinelTimer = SentinelTimer_Default_or_Aggressive
	FlybyTimer = FlybyTimer_B_or_Aggressive
else:
	MaxActiveDrones = 2
	if RNG(0,100) >= SentinelTimer_Default_Chance_percent:
		SentinelTimer = SentinelTimer_A
		if RNG(0,100) < SentinelTimer_B_Chance_percent:
			SentinelTimer = SentinelTimer_B
	else:
		SentinelTimer = SentinelTimer_Default_or_Aggressive
	
	if RNG(0,100) >= FlybyTimer_Default_Chance_percent:
		FlybyTimer = FlybyTimer_A
		if RNG(0,100) < FlybyTimer_B_Chance_percent:
			FlybyTimer = FlybyTimer_B_or_Aggressive
	else:
		FlybyTimer = FlybyTimer_Default
*/