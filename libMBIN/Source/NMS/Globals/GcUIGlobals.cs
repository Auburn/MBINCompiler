using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0x3A8B475481E073A2)]
    public class GcUIGlobals : NMSTemplate
    {
        /*
          <Property name="HeatSpringTime" value="1.5" />
          <Property name="HeatAlertTime" value="0.6" />
          <Property name="HeatAlertFixedTime" value="1" />
          <Property name="HeatAlertSpringTime" value="0.2" />*/



        /* 0x0 */ public float Unknown0x0;
        /* 0x4 */ public float Unknown0x4;
        /* 0x8 */ public float Unknown0x8;
        /* 0xC */ public float Unknown0xC;
        /* 0x10 */ public float Unknown0x10;
        /* 0x14 */ public float Unknown0x14;
        /* 0x18 */ public float Unknown0x18;
        /* 0x1C */ public float Unknown0x1C;
        /* 0x20 */ public float Unknown0x20;
        /* 0x24 */ public float Unknown0x24;
        /* 0x28 */ public float Unknown0x28;
        /* 0x2C */ public float Unknown0x2C;
        /* 0x30 */ public float Unknown0x30;
        /* 0x34 */ public float Unknown0x34;
        /* 0x38 */ public float Unknown0x38;
        /* 0x3C */ public float Unknown0x3C;
        /* 0x40 */ public float Unknown0x40;
        /* 0x44 */ public float Unknown0x44;
        /* 0x48 */ public float Unknown0x48;
        /* 0x4C */ public float Unknown0x4C;
        /* 0x50 */ public float Unknown0x50;
        /* 0x54 */ public float Unknown0x54;
        /* 0x58 */ public float Unknown0x58;
        /* 0x5C */ public float Unknown0x5C;
        /* 0x60 */ public float Unknown0x60;
        /* 0x64 */ public float Unknown0x64;
        /* 0x68 */ public float Unknown0x68;
        /* 0x6C */ public float Unknown0x6C;
        /* 0x70 */ public float Unknown0x70;
        /* 0x74 */ public float Unknown0x74;
        /* 0x78 */ public float Unknown0x78;
        /* 0x7C */ public float Unknown0x7C;
        /* 0x80 */ public bool Unknown0x80;
        /* 0x84 */ public float Unknown0x84;
        /* 0x88 */ public float Unknown0x88;
        /* 0x8C */ public float Unknown0x8C;
        /* 0x90 */ public float Unknown0x90;
        /* 0x94 */ public float Unknown0x94;
        /* 0x98 */ public float Unknown0x98;
        /* 0x9C */ public float Unknown0x9C;
        /* 0xA0 */ public float Unknown0xA0;
        /* 0xA4 */ public float Unknown0xA4;
        /* 0xA8 */ public float Unknown0xA8;
        /* 0xAC */ public float Unknown0xAC;
        /* 0xB0 */ public float Unknown0xB0;
        /* 0xB4 */ public float Unknown0xB4;
        /* 0xB8 */ public bool Unknown0xB8;
        /* 0xB9 */ public bool Unknown0xB9;
        /* 0xBC */ public float Unknown0xBC;
        /* 0xC0 */ public float Unknown0xC0;
        /* 0xC4 */ public float Unknown0xC4;
        /* 0xC8 */ public float Unknown0xC8;
        /* 0xCC */ public float Unknown0xCC;
        /* 0xD0 */ public float Unknown0xD0;
        /* 0xD4 */ public float Unknown0xD4;
        /* 0xD8 */ public float Unknown0xD8;
        /* 0xDC */ public float Unknown0xDC;
        /* 0xE0 */ public float Unknown0xE0;
        /* 0xE4 */ public float Unknown0xE4;
        /* 0xE8 */ public float Unknown0xE8;
        /* 0xEC */ public float Unknown0xEC;
        /* 0xF0 */ public float Unknown0xF0;
        /* 0xF4 */ public float Unknown0xF4;
        /* 0xF8 */ public float Unknown0xF8;
        /* 0xFC */ public float Unknown0xFC;
        /* 0x100 */ public float Unknown0x100;
        /* 0x104 */ public float Unknown0x104;
        /* 0x108 */ public float Unknown0x108;
        /* 0x10C */ public float Unknown0x10C;
        /* 0x110 */ public int UnknownInt0x110;
        /* 0x114 */ public int UnknownInt0x114;
        [NMS(Size = 0x20)]
        /* 0x0118 */ public string HUDVRWarningScreen;
        /* 0x0138 */ public bool Unknown0x138;
        [NMS(Size = 0x7, Ignore = true)]
        /* 0x0139 */ public byte[] Padding139;
        /* 0x140 */ public float Unknown0x140;      // start of a struct??
        /* 0x144 */ public float Unknown0x144;
        /* 0x148 */ public float Unknown0x148;
        /* 0x14C */ public float Unknown0x14C;
        /* 0x150 */ public int UnknownInt0x150;
        /* 0x154 */ public int UnknownInt0x154;
        /* 0x158 */ public int UnknownInt0x158;
        /* 0x15C */ public int UnknownInt0x15C;
        /* 0x160 */ public float Unknown0x160;
        /* 0x164 */ public float Unknown0x164;
        /* 0x168 */ public float Unknown0x168;
        /* 0x16C */ public int UnknownInt0x16C;
        /* 0x170 */ public float Unknown0x170;
        /* 0x174 */ public float Unknown0x174;
        /* 0x178 */ public float Unknown0x178;
        /* 0x17C */ public float Unknown0x17C;
        /* 0x180 */ public float Unknown0x180;
        /* 0x184 */ public bool Unknown0x184;
        /* 0x188 */ public float Unknown0x188;
        /* 0x18C */ public float Unknown0x18C;
        /* 0x190 */ public float Unknown0x190;
        /* 0x194 */ public float Unknown0x194;
        /* 0x198 */ public float Unknown0x198;
        /* 0x19C */ public float Unknown0x19C;
        /* 0x1A0 */ public float Unknown0x1A0;
        /* 0x1A4 */ public float Unknown0x1A4;
        /* 0x1A8 */ public float Unknown0x1A8;
        /* 0x1AC */ public float Unknown0x1AC;
        /* 0x1B0 */ public float Unknown0x1B0;
        /* 0x1B4 */ public float Unknown0x1B4;
        /* 0x1B8 */ public float Unknown0x1B8;
        /* 0x1BC */ public float Unknown0x1BC;
        /* 0x1C0 */ public float Unknown0x1C0;
        /* 0x1C4 */ public float Unknown0x1C4;
        /* 0x1C8 */ public float Unknown0x1C8;
        /* 0x1CC */ public float Unknown0x1CC;
        /* 0x1D0 */ public float Unknown0x1D0;
        /* 0x1D4 */ public float Unknown0x1D4;
        /* 0x1D8 */ public float Unknown0x1D8;
        /* 0x1DC */ public float Unknown0x1DC;
        /* 0x1E0 */ public float Unknown0x1E0;
        /* 0x1E4 */ public float Unknown0x1E4;
        /* 0x1E8 */ public float Unknown0x1E8;
        /* 0x1EC */ public float Unknown0x1EC;
        /* 0x1F0 */ public float Unknown0x1F0;
        /* 0x1F4 */ public float Unknown0x1F4;
        /* 0x1F8 */ public float Unknown0x1F8;
        /* 0x1FC */ public float Unknown0x1FC;
        /* 0x200 */ public bool Unknown0x200;
        /* 0x201 */ public bool Unknown0x201;
        /* 0x204 */ public float Unknown0x204;
        /* 0x208 */ public float Unknown0x208;
        /* 0x20C */ public float Unknown0x20C;
        /* 0x210 */ public float Unknown0x210;
        /* 0x214 */ public float Unknown0x214;
        /* 0x218 */ public float Unknown0x218;
        /* 0x21C */ public float Unknown0x21C;
        /* 0x220 */ public int UnknownInt0x220;
        /* 0x224 */ public int UnknownInt0x224;
        /* 0x228 */ public float Unknown0x228;
        /* 0x22C */ public float Unknown0x22C;
        /* 0x230 */ public float Unknown0x230;
        /* 0x234 */ public float Unknown0x234;
        /* 0x238 */ public float Unknown0x238;
        /* 0x23C */ public float Unknown0x23C;
        /* 0x240 */ public float Unknown0x240;
        /* 0x244 */ public float Unknown0x244;
        /* 0x248 */ public float Unknown0x248;
        /* 0x24C */ public float Unknown0x24C;
        /* 0x250 */ public float Unknown0x250;
        /* 0x254 */ public float Unknown0x254;
        /* 0x258 */ public float Unknown0x258;
        /* 0x25C */ public float Unknown0x25C;
        /* 0x260 */ public int UnknownInt0x260;
        /* 0x264 */ public int UnknownInt0x264;
        /* 0x268 */ public int UnknownInt0x268;
        /* 0x26C */ public int UnknownInt0x26C;
        /* 0x270 */ public float Unknown0x270;
        /* 0x274 */ public float Unknown0x274;
        /* 0x278 */ public float Unknown0x278;
        /* 0x27C */ public float Unknown0x27C;
        /* 0x280 */ public float Unknown0x280;
        /* 0x284 */ public float Unknown0x284;
        /* 0x288 */ public float Unknown0x288;
        /* 0x28C */ public float Unknown0x28C;
        /* 0x290 */ public TkModelRendererData Unknown0x290;
        /* 0x340 */ public float Unknown0x340;
        /* 0x344 */ public float Unknown0x344;
        /* 0x348 */ public float Unknown0x348;
        /* 0x34C */ public float Unknown0x34C;
        /* 0x350 */ public float Unknown0x350;
        /* 0x354 */ public float Unknown0x354;
        /* 0x358 */ public float Unknown0x358;
        /* 0x35C */ public float Unknown0x35C;
        /* 0x360 */ public float Unknown0x360;
        /* 0x364 */ public float Unknown0x364;
        /* 0x368 */ public float Unknown0x368;
        /* 0x36C */ public float Unknown0x36C;
        /* 0x370 */ public float Unknown0x370;
        /* 0x374 */ public float Unknown0x374;
        /* 0x378 */ public float Unknown0x378;
        /* 0x37C */ public int UnknownInt0x37C;
        /* 0x380 */ public int UnknownInt0x380;
        /* 0x384 */ public float Unknown0x384;
        /* 0x388 */ public float Unknown0x388;
        /* 0x38C */ public bool Unknown0x38C;
        /* 0x390 */ public float Unknown0x390;
        /* 0x394 */ public float Unknown0x394;
        /* 0x398 */ public float Unknown0x398;
        /* 0x39C */ public bool Unknown0x39C;
        /* 0x39D */ public bool Unknown0x39D;
        /* 0x3A0 */ public float Unknown0x3A0;
        /* 0x3A4 */ public float Unknown0x3A4;
        /* 0x3A8 */ public float Unknown0x3A8;
        /* 0x3AC */ public float Unknown0x3AC;
        /* 0x3B0 */ public Colour Unknown0x3B0;
        /* 0x3C0 */ public Colour Unknown0x3C0;
        /* 0x3D0 */ public Colour Unknown0x3D0;
        /* 0x3E0 */ public Colour Unknown0x3E0;
        /* 0x3F0 */ public Colour Unknown0x3F0;
        /* 0x400 */ public Colour Unknown0x400;

        ///* 0x0410 */ public bool LoadPagesFromMetadataCache;          // I think this may be the one removed but not sure
        /* 0x0410 */ public bool AlwaysCloseQuickMenu;
        /* 0x0411 */ public bool UseWorldNodesForRepair;
        /* 0x0412 */ public bool RepairTechUseTechIcon;
        /* 0x0413 */ public bool DebugMissionLogText;
        /* 0x0414 */ public bool DebugShowMaintenanceScreenCentre;
        /* 0x0415 */ public bool DebugPopupSizes;
        /* 0x0416 */ public bool DebugInventoryIndices;
        /* 0x0417 */ public bool FixedInventoryIconPositions;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0418 */ public byte[] Padding418;
        /* 0x0420 */ public GcHUDEffectRewardData OSDRareItemRewardEffect;
        /* 0x0480 */ public GcHUDEffectRewardData OSDEpicItemRewardEffect;
        /* 0x04E0 */ public float OSDMessageQueueSpeedMultiplier;
        /* 0x04E4 */ public int OSDMessageQueueMin;
        /* 0x04E8 */ public int OSDMessageQueueMax;
        /* 0x04EC */ public float PopupValueSectionBaseHeight;
        /* 0x04F0 */ public float PopupValueSectionHeight;
        [NMS(Size = 0x0C, Ignore = true)]
        /* 0x04F4 */ public byte[] Padding4F4;
        /* 0x0500 */ public Colour ProcProductColourCommon;
        /* 0x0510 */ public Colour ProcProductColourUncommon;
        /* 0x0520 */ public Colour ProcProductColourRare;
        [NMS(Size = 0x04)]
        /* 0x0530 */ public Vector2f[] InventoryIconPositions;
        /* 0x0550 */ public Colour PickedItemBorderColour;
        /* 0x0560 */ public Colour MultiplayerMissionParticipantsColour;
        [NMS(Size = 0x10)]
        /* 0x0570 */ public string MultiplayerMissionInteractStartTrigger;
        [NMS(Size = 0x10)]
        /* 0x0580 */ public string MultiplayerMissionInteractEndTrigger;
        /* 0x0590 */ public float NotificationHazardMinTimeAfterRecharge;
        /* 0x0594 */ public float LoadFadeInDefaultTime;
        /* 0x0598 */ public float DroneIndicatorRadius;
        /* 0x059C */ public float DroneIndicatorCentreRadiusMax;
        /* 0x05A0 */ public float DroneIndicatorCentreRadiusMin;
        /* 0x05A4 */ public float DroneIndicatorFadeRange;
        /* 0x05A8 */ public float WantedDetectMessageTime;
        /* 0x05AC */ public float WantedDetectMinTimeout;
        /* 0x05B0 */ public float TakeoffFuelMessageTime;
        /* 0x05B4 */ public float MarkerHorizonOffsetAngle;
        /* 0x05B8 */ public float MarkerHorizonMinOffset;
        /* 0x05BC */ public float MarkerHorizonApproachAngle;
        /* 0x05C0 */ public float MarkerOffsetTypeAngle;
        /* 0x05C4 */ public float MarkerOffsetTypeAngleBattle;
        /* 0x05C8 */ public float MarkerOffsetTypeAngleBounty;
        /* 0x05CC */ public float MarkerOffsetTypeAnglePlayerShip;
        /* 0x05D0 */ public float MarkerHorizonOffPlanetLightBeamAngle;
        /* 0x05D4 */ public float MarkerHorizonShipApproachOffset;
        /* 0x05D8 */ public float TransferPopupCursorOffsetFactor;
        /* 0x05DC */ public float ScannableIconMergeAngle;
        /* 0x05E0 */ public float MissionObjectiveBaseHeight;
        /* 0x05E4 */ public float MarkerTagAppearDelay;
        /* 0x05E8 */ public Vector2f CompassCentre;
        /* 0x05F0 */ public float CompassHeight;
        /* 0x05F4 */ public float CompassWidth;
        /* 0x05F8 */ public float CompassDistanceScaleMin;
        /* 0x05FC */ public float CompassDistanceScaleRange;
        /* 0x0600 */ public float CompassDistanceScale;
        /* 0x0604 */ public float CompassDistanceMaxAngle;
        /* 0x0608 */ public float CompassDistanceYOffset;
        /* 0x060C */ public float CompassAngleClamp;
        /* 0x0610 */ public float CompassAngleFade;
        /* 0x0614 */ public TkCurveType CompassCurve;
        /* 0x0618 */ public float BaseComplexityDangerFactor;
        /* 0x061C */ public float BaseComplexityWarningFactor;
        /* 0x0620 */ public Colour BaseComplexityDefaultColour;
        /* 0x0630 */ public Colour BaseComplexityWarningColour;
        /* 0x0640 */ public Colour BaseComplexityDangerColour;
        /* 0x0650 */ public float MarkerRingInnerRadius;
        /* 0x0654 */ public float MarkerRingOuterRadius;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0658 */ public byte[] Padding658;
        /* 0x0660 */ public Colour MarkerRingBGColour;
        /* 0x0670 */ public float RepairTechRepairedWaitTime1;
        /* 0x0674 */ public float RepairTechRepairedWaitTime2;
        /* 0x0678 */ public float RepairTechRepairedMessageTime;
        /* 0x067C */ public float TechPopupRepairLayerHeight;
        /* 0x0680 */ public float TechPopupBuildLayerHeight;
        /* 0x0684 */ public float TechPopupRequirementHeight;
        /* 0x0688 */ public float DamageTrackArrowTime;
        /* 0x068C */ public bool Unknown0c68C;
        /* 0x0690 */ public float HUDMarkerObjectMinScreenDistance;
        /* 0x0694 */ public float HUDMarkerDistanceOrTimeDistance;
        /* 0x0698 */ public float MarkerComponentOffset;
        /* 0x069C */ public float RepairTechLabelOffset;
        /* 0x06A0 */ public float MaintenanceIconFadeStart;
        /* 0x06A4 */ public float MaintenanceIconFadeTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x06A8 */ public byte[] Padding6A8;
        /* 0x06B0 */ public TkModelRendererData RepairCamera;
        /* 0x0760 */ public TkModelRendererData RepairWeaponCamera;
        /* 0x0810 */ public TkModelRendererData RepairBackpackCamera;
        /* 0x08C0 */ public TkModelRendererData RepairShipCamera;
        /* 0x0970 */ public Vector2f BinocularsDiscoveryPos;
        [NMS(Size = 0x08, Ignore = true)]
        /* 0x0978 */ public byte[] Padding978;
        /* 0x0980 */ public Colour InteractionLabelCostColour;
        /* 0x0990 */ public Colour InteractionLabelPickupColour;
        /* 0x09A0 */ public Colour InteractionLabelPickupFillColour;
        /* 0x09B0 */ public float RefinerPadStartTime;
        /* 0x09B4 */ public float RefinerPadStartDecayTime;
        /* 0x09B8 */ public float RefinerBeginDialInnerRadius;
        /* 0x09BC */ public float RefinerProgressDialInnerRadius;
        /* 0x09C0 */ public Vector4f DefaultRefinerOffsetIn;
        /* 0x09D0 */ public Vector4f DefaultRefinerOffsetOut;
        /* 0x09E0 */ public Vector2f RefinerParallax;
        /* 0x09E8 */ public Vector2f ModelViewWorldParallax;
        /* 0x09F0 */ public Vector2f HUDPlayerSentinelPulseFreq;
        /* 0x09F8 */ public Vector2f HUDPlayerSentinelPulseSize;
        /* 0x0A00 */ public float HUDPlayerSentinelPulseWidth;
        /* 0x0A04 */ public float HUDPlayerSentinelRangeFactor;
        /* 0x0A08 */ public float HUDPlayerSentinelPulseScanFreq;
        /* 0x0A0C */ public float HUDPlayerPhonePulseScanFreq;
        /* 0x0A10 */ public float RefinerAutoCloseTime;
        [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0A14 */ public byte[] PaddingA14;
        /* 0x0A20 */ public Colour RefinerBackgroundColour;
        /* 0x0A30 */ public Colour RefinerErrorBackgroundColour;
        /* 0x0A40 */ public Colour Unknown0xA40;        // I am guessing these are colours because they look like them
        /* 0x0A50 */ public Colour Unknown0xA50;
        /* 0x0A60 */ public Colour Unknown0xA60;
        /* 0x0A70 */ public Colour Unknown0xA70;
        /* 0x0A80 */ public Colour Unknown0xA80;
        /* 0x0A90 */ public Colour Unknown0xA90;
        /* 0x0AA0 */ public Colour TransferSendPopupColour;
        /* 0x0AB0 */ public float BountyMarkerOffset;
        /* 0x0AB4 */ public float TransitionOffset;
        /* 0x0AB8 */ public float PageTurnTime;
        /* 0x0ABC */ public TkCurveType PageTurnCurve;
        /* 0x0AC0 */ public TkCurveType PageTurnFadeCurve;
        /* 0x0AC4 */ public float LowHealthShieldMin;
        /* 0x0AC8 */ public float LowHealthShieldFactor;
        /* 0x0ACC */ public int MaxDialogCharSizeRoman;
        [NMS(Size = 0x20)]
        /* 0x0AD0 */ public string MaxDialogCharSizeRomanString;
        /* 0x0AF0 */ public int MaxDialogCharSizeIdeographic;
        [NMS(Size = 0x20)]
        /* 0x0AF4 */ public string MaxDialogCharSizeIdeographicString;
        /* 0x0B14 */ public float ShipOverheatSwitchMessageWait;
        /* 0x0B18 */ public float ShipOverheatSwitchMessageTime;
        /* 0x0B1C */ public bool LeadTargetEnabled;
        [NMS(Size = 0x03, Ignore = true)]
        /* 0x0B1D */ public byte[] PaddingB1D;
        /* 0x0B20 */ public Vector2f SaveIconPosition;
        /* 0x0B28 */ public float MissionStartEndTime;
        /* 0x0B2C */ public float MissionStartEndOSDTime;
        /* 0x0B30 */ public float MissionStartEndOSDTimeProcedural;
        /* 0x0B34 */ public float StandingRewardOSDTime;
        [NMS(Size = 0x08, Ignore = true)]
        /* 0x0B38 */ public byte[] PaddingB38;
        /* 0x0B40 */ public Colour MissionOSDMessageBarColour;
        /* 0x0B50 */ public Colour NotificationDefaultColour;
        /* 0x0B60 */ public Colour NotificationDangerColour;
        /* 0x0B70 */ public Colour NotificationInfoColour;
        /* 0x0B80 */ public Colour NotificationUrgentColour;
        /* 0x0B90 */ public float ShipDamageDirectionIndicatorRadius;
        /* 0x0B94 */ public float ShipDamageDirectionIndicatorFadeRange;
        /* 0x0B98 */ public float OnFootDamageDirectionIndicatorRadius;
        /* 0x0B9C */ public float OnFootDamageDirectionIndicatorFadeRange;
        /* 0x0BA0 */ public float DamageDirectionIndicatorOnScreenRadiusMultiplier;
        /* 0x0BA4 */ public Vector2f DialogPageCursorOffset;
        /* 0x0BAC */ public int MissionSpecificMissionPercent;
        /* 0x0BB0 */ public int MissionLoopCount;
        /* 0x0BB4 */ public int MissionSeedOffset;
        [NMS(Size = 0x08, Ignore = true)]
        /* 0x0BB8 */ public byte[] PaddingBB8;
        /* 0x0BC0 */ public Vector4f SpaceMapCockpitOffset;
        /* 0x0BD0 */ public float SpaceMapCockpitScale;
        /* 0x0BD4 */ public float SpaceMapCockpitAngle;
        /* 0x0BD8 */ public float TargetDisplayScale;
        /* 0x0BDC */ public float TargetDisplayShipScale;
        /* 0x0BE0 */ public Vector4f TargetDisplayShipOffset;
        /* 0x0BF0 */ public float TargetDisplayDamageFlashTime;
        [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0BF4 */ public byte[] PaddingBF4;
        /* 0x0C00 */ public GcScanEffectData TargetDisplayScanEffect;
        /* 0x0C50 */ public bool ProgressiveDialogStyle;
        /* 0x0C54 */ public float CommunicatorMessageTime;
        [NMS(Size = 0x08, Ignore = true)]
        /* 0x0C58 */ public byte[] PaddingC58;
        /* 0x0C60 */ public Colour CommunicatorMessageColour;
        /* 0x0C70 */ public float GridFlickerBaseAlpha;
        /* 0x0C74 */ public float GridFlickerFreq;
        /* 0x0C78 */ public float GridFlickerAmp;
        /* 0x0C7C */ public float HUDMarkerLabelWidthMultiplier;
        /* 0x0C80 */ public float HUDMarkerLabelBaseWidth;
        /* 0x0C84 */ public float HUDMarkerLabelArriveDistance;
        /* 0x0C88 */ public float HUDMarkerLabelDisplayDistance;
        /* 0x0C8C */ public float HUDMarkerNonActiveMissionAlpha;
        /* 0x0C90 */ public bool DebugMarkerLabels;
        [NMS(Size = 0x0F, Ignore = true)]
        /* 0x0C91 */ public byte[] PaddingC91;
        /* 0x0CA0 */ public GcScanEffectData DebugEditorPreviewEffect;
        /* 0x0CF0 */ public bool ShowDamageNumbers;
        /* 0x0CF4 */ public float QuickMenuCloseTime;
        /* 0x0CF8 */ public float QuickMenuErrorTime;
        /* 0x0CFC */ public float FrontendWaitResponse;
        /* 0x0D00 */ public float FrontendWaitInitial;
        /* 0x0D04 */ public float FrontendWaitInitialTerminal;
        /* 0x0D08 */ public float FrontendWaitFadeTextOut;
        /* 0x0D0C */ public float FrontendWaitFadeTextFrameOut;
        /* 0x0D10 */ public float FrontendWaitFadeProgressiveDialogOut;
        /* 0x0D14 */ public float FrontendWaitResponseOffset;
        /* 0x0D18 */ public float TalkBoxAlienTextSpeed;
        /* 0x0D1C */ public float TalkBoxAlienTextTimeMin;
        /* 0x0D20 */ public float TalkBoxAlienTextTimeMax;
        /* 0x0D24 */ public float DescriptionTextDelay;
        /* 0x0D28 */ public float DescriptionTextSpeed;
        /* 0x0D2C */ public float DescriptionTextSpeedProgressive;
        /* 0x0D30 */ public float DescriptionTextTimeMin;
        /* 0x0D34 */ public float DescriptionTextTimeMax;
        /* 0x0D38 */ public float ConsoleTextSpeed;
        /* 0x0D3C */ public float ConsoleTextTimeMin;
        /* 0x0D40 */ public float ConsoleTextTimeMax;
        /* 0x0D44 */ public float HoverOffscreenBorder;
        /* 0x0D48 */ public float Unknown0xD48;
        /* 0x0D4C */ public float TransferSendOffscreenBorder;
        /* 0x0D50 */ public float TimedEventLookTime;
        /* 0x0D54 */ public float Unknown0xD54;
        /* 0x0D58 */ public float Unknown0xD58;
        /* 0x0D5C */ public float Unknown0xD5C;
        /* 0x0D60 */ public float Unknown0xD60;
        /* 0x0D64 */ public float Unknown0xD64;
        /* 0x0D68 */ public float Unknown0xD68;
        /* 0x0D6C */ public bool Unknown0xD6C;
        /* 0x0D70 */ public float DamageImpactMergeTime;
        /* 0x0D74 */ public float DamageImpactTimeBetweenNumbers;
        /* 0x0D78 */ public float DamageImpactMinDistance;
        /* 0x0D7C */ public float DamagePerSecondSampleTime;
        /* 0x0D80 */ public float DamageNumberTime;
        /* 0x0D84 */ public float DamageNumberSizeInShip;
        /* 0x0D88 */ public float DamageNumberSize;
        /* 0x0D8C */ public float DamageNumberSizeCritMultiplier;
        /* 0x0D90 */ public float Unknown0xD90;
        /* 0x0D94 */ public float Unknown0xD94;
        /* 0x0D98 */ public float Unknown0xD98;
        /* 0x0D9C */ public float DamageNumberBlackAlpha;
        /* 0x0DA0 */ public float DamageNumberOutline;
        /* 0x0DA4 */ public float DamageNumberOutline2;
        /* 0x0DA8 */ public float DamageNumberOffsetX;
        /* 0x0DAC */ public float DamageNumberOffsetY;
        /* 0x0DB0 */ public Vector2f DamageNumberSideSpeed;
        /* 0x0DB8 */ public float DamageNumberFadeIn;
        /* 0x0DBC */ public float DamageNumberFadeOut;
        /* 0x0DC0 */ public float DamageNumberUpOffset;
        /* 0x0DC4 */ public TkCurveType DamageNumberUpCurve;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0DC8 */ public byte[] PaddingDC8;
        /* 0x0DD0 */ public Colour DamageNumberCriticalColour;
        /* 0x0DE0 */ public Colour DamageNumberIneffectiveColour;
        /* 0x0DF0 */ public Colour PhotoModeSelectedColour;
        /* 0x0E00 */ public Colour PhotoModeUnselectedColour;
        /* 0x0E10 */ public Colour FuelBgColour;
        /* 0x0E20 */ public float PhotoModeValueAlpha;
        /* 0x0E24 */ public float PhotoModeTimeofDayChange;
        /* 0x0E28 */ public float FrigateIconOffset;
        /* 0x0E2C */ public float Unknown0xE2C;     // this value and next may be swapped...
        /* 0x0E30 */ public float DelayBeforeHidingHangarAfterGalaxyMap;
        /* 0x0E34 */ public float DelayBeforeShowingHangarIntoGalaxyMap;
        /* 0x0E38 */ public float FreighterSummonTurn;
        /* 0x0E3C */ public float FreighterSummonPitch;
        /* 0x0E40 */ public float FreighterSummonOffset;
        /* 0x0E44 */ public float FreighterSummonDelay;
        /* 0x0E48 */ public int FreighterSummonTurnNumTries;
        /* 0x0E4C */ public float FreighterSummonTurnAngleIncrement;
        /* 0x0E50 */ public float FreighterSummonGridSize;
        /* 0x0E54 */ public float FreighterCommanderMarkerMinDistance;
        /* 0x0E58 */ public float FreighterBaseIconOffset;
        /* 0x0E5C */ public float FreighterSurfaceMinAngle;
        /* 0x0E60 */ public float FreighterSummonPulseRate;
        /* 0x0E64 */ public float FreighterSummonPulseFadeAmount;
        /* 0x0E68 */ public float FreighterSummonPlanetOffset;
        /* 0x0E6C */ public float FreighterSummonLookTime;
        /* 0x0E70 */ public float FreighterHighlightRange;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x0E74 */ public byte[] PaddingE74;
        /* 0x0E80 */ public GcScanEffectData FreighterSummonScanEffect;
        /* 0x0ED0 */ public Colour FreighterSummonScanEffectColourBlocked;
        /* 0x0EE0 */ public Colour FreighterSummonScanEffectColourHighlight;
        /* 0x0EF0 */ public float PirateCountdownTime;
        /* 0x0EF4 */ public float PirateAttackIndicatorWidth;
        /* 0x0EF8 */ public float PirateAttackIndicatorRadius;
        /* 0x0EFC */ public float PirateAttackProbeDisplayFinishFactor;
        /* 0x0F00 */ public float HazardArrowsLevel2Threshold;
        /* 0x0F04 */ public float HazardArrowsLevel3Threshold;
        /* 0x0F08 */ public float ArrowBounceLength;
        /* 0x0F0C */ public float ArrowBounceRate;
        /* 0x0F10 */ public float ArrowBounceRightRate1;
        /* 0x0F14 */ public float ArrowBounceRightRate2;
        /* 0x0F18 */ public TkCurveType ArrowBounceRightCurve;
        /* 0x0F1C */ public float ArrowBounceLeftRate1;
        /* 0x0F20 */ public float ArrowBounceLeftRate2;
        /* 0x0F24 */ public float ArrowBounceLeftRate3;
        /* 0x0F28 */ public TkCurveType ArrowBounceLeftCurve;
        /* 0x0F2C */ public float PlanetScanDelayTime;
        /* 0x0F30 */ public float AlwaysShowIconFadeDistance;
        /* 0x0F34 */ public float AlwaysShowIconFadeRange;
        /* 0x0F38 */ public float FrigatePurchaseNotificationResetDistanceMultiplier;
        /* 0x0F3C */ public float FrigateDamageIconVisibilityDistance;
        /* 0x0F40 */ public float FreighterLeaderIconDistance;
        /* 0x0F44 */ public float FreighterEntranceOffset;
        /* 0x0F48 */ public float ShipHeadsUpDisplayDistance;
        /* 0x0F4C */ public float ShipHeadsUpLineFadeTime;
        /* 0x0F50 */ public float CrosshairAimTime;
        /* 0x0F54 */ public float CrosshairAimOffTime;
        /* 0x0F58 */ public float CrosshairInnerMinFade;
        /* 0x0F5C */ public float CrosshairInnerMinFadeRange;
        /* 0x0F60 */ public float CrosshairLeadScaleIn;
        /* 0x0F64 */ public float CrosshairLeadInDelay;
        /* 0x0F68 */ public float CrosshairLeadInTime;
        /* 0x0F6C */ public float CrosshairLeadCornerOffset;
        /* 0x0F70 */ public float CrosshairLeadTopOffset;
        /* 0x0F74 */ public float CrosshairLeadTopLock;
        /* 0x0F78 */ public float CrosshairLeadPulseSize;
        /* 0x0F7C */ public TkCurveType CrosshairLeadScaleCurve;
        /* 0x0F80 */ public float CrosshairSpringTime;
        /* 0x0F84 */ public float CrosshairSpringAimTime;
        /* 0x0F88 */ public float CrosshairLeadSpring;
        /* 0x0F8C */ public float CrosshairLeadSpringOff;
        /* 0x0F90 */ public float CrosshairLeadFadeRange;
        /* 0x0F94 */ public float CrosshairLeadFadeSize;
        [NMS(Size = 0x08, Ignore = true)]
        /* 0x0F98 */ public byte[] PaddingF98;
        /* 0x0FA0 */ public Colour CrosshairLeadThreatColour;
        /* 0x0FB0 */ public Colour CrosshairLeadPassiveColour;
        /* 0x0FC0 */ public float CrosshairInterceptSize;
        /* 0x0FC4 */ public float CrosshairInterceptBaseSize;
        /* 0x0FC8 */ public float CrosshairInterceptCentreBaseSize;
        /* 0x0FCC */ public float CrosshairInterceptSpringTime;
        /* 0x0FD0 */ public float CrosshairInterceptAlpha;
        /* 0x0FD4 */ public float CrosshairInterceptLockRange;
        /* 0x0FD8 */ public float CrosshairTargetLockSize;
        /* 0x0FDC */ public TkCurveType CrosshairTargetLockCurve;
        /* 0x0FE0 */ public TkCurveType CrosshairTargetLockAlphaCurve;
        [NMS(Size = 0x0C, Ignore = true)]
        /* 0x0FE4 */ public byte[] PaddingFE4;
        /* 0x0FF0 */ public Colour CrosshairColour;
        /* 0x1000 */ public TkHitCurveData CrosshairLeadHitCurve;
        /* 0x1010 */ public TkHitCurveData ShootableHitCurve;
        /* 0x1020 */ public int ControlScrollSteps;
        /* 0x1024 */ public float ControlScrollDistance;
        [NMS(Size = 0x08, Ignore = true)]
        /* 0x1028 */ public byte[] Padding1028;
        /* 0x1030 */ public Colour SelectedControlColour;
        /* 0x1040 */ public Colour RemappedControlColour;
        /* 0x1050 */ public float CreatureRoutineMarkerTime;
        /* 0x1054 */ public int CreatureRoutineRegionsPerFrame;
        /* 0x1058 */ public float SpaceMarkersOffset;
        /* 0x105C */ public float SpaceMarkersBattleOffset;
        /* 0x1060 */ public float LargeSpaceIconSize;
        /* 0x1064 */ public float SmallSpaceIconSize;
        /* 0x1068 */ public Vector2f TrackTypeIconOffset;
        /* 0x1070 */ public float TrackTypeIconSize;
        /* 0x1074 */ public float TrackPrimaryCentreOffset;
        /* 0x1078 */ public float TrackTimerAlpha;
        /* 0x107C */ public float TrackTimerRadarPulseSize;
        /* 0x1080 */ public float TrackTimerIconOuterRadius;
        /* 0x1084 */ public float TrackTimerIconInnerRadius;
        /* 0x1088 */ public float TrackTimerIconExclaimRadius;
        /* 0x108C */ public float TrackGlowBase;
        /* 0x1090 */ public float TrackHitPulseTime;
        /* 0x1094 */ public float TrackGlowCritical;
        /* 0x1098 */ public float TrackGlowHit;
        /* 0x109C */ public float MissileCentreOffset;
        /* 0x10A0 */ public float TrackMissileTargetPulseRate;
        /* 0x10A4 */ public float TrackScaleCritical;
        /* 0x10A8 */ public float TrackScaleHit;
        /* 0x10AC */ public float TrackLeadTargetInScale;
        /* 0x10B0 */ public float TrackReticuleScale;
        /* 0x10B4 */ public float TrackReticuleAngle;
        /* 0x10B8 */ public float TrackReticuleInTime;
        /* 0x10BC */ public float TrackReticuleInactiveTime;
        /* 0x10C0 */ public float TrackReticuleRandomTime;
        /* 0x10C4 */ public float TrackReticuleRandomDelay;
        /* 0x10C8 */ public TkCurveType TrackReticuleInCurve;
        /* 0x10CC */ public TkCurveType TrackReticuleInAngleCurve;
        /* 0x10D0 */ public float CreatureReticuleScale;
        /* 0x10D4 */ public TkCurveType CreatureReticuleScaleCurve;
        /* 0x10D8 */ public TkCurveType CreatureReticuleAlphaCurve;
        /* 0x10DC */ public TkCurveType Unknown0x10DC;
        /* 0x10E0 */ public float Unknown0x10C0;
        /* 0x10E4 */ public float HUDPlayerTrackNoSightPulse;
        /* 0x10E8 */ public float HUDPlayerTrackTimerStart;
        /* 0x10EC */ public float HUDPlayerTrackTimerStartFade;
        /* 0x10F0 */ public float HUDPlayerTrackTimerEnd;
        /* 0x10F4 */ public float HUDPlayerTrackTimerPulseRate;
        /* 0x10F8 */ public TkCurveType TrackCritCurve;
        /* 0x10FC */ public Vector2f TrackCriticalHitOffset;
        /* 0x1104 */ public float TrackCriticalHitSize;
        /* 0x1108 */ public float TrackCriticalPulseTime;
        /* 0x110C */ public float ThirdPersonCrosshairDistance;
        /* 0x1110 */ public float ThirdPersonCrosshairCircle1Distance;
        /* 0x1114 */ public float ThirdPersonCrosshairCircle2Distance;
        /* 0x1118 */ public float HUDPlayerTrackArrowShipLabelOffset;
        /* 0x111C */ public float HUDPlayerTrackArrowIconPulseTime;
        /* 0x1120 */ public float HUDPlayerTrackArrowIconShowTime;
        /* 0x1124 */ public float HUDPlayerTrackArrowIconFadeTime;
        /* 0x1128 */ public Vector2f HUDPlayerTrackArrowIconPulseSize;
        /* 0x1130 */ public float HUDPlayerTrackArrowIconPulseWidth1;
        /* 0x1134 */ public float HUDPlayerTrackArrowIconPulseWidth2;
        /* 0x1138 */ public float HUDPlayerTrackArrowIconPulse2Alpha;
        /* 0x113C */ public float HUDPlayerTrackArrowIconFadeDist;
        /* 0x1140 */ public float HUDPlayerTrackArrowIconFadeRange;
        /* 0x1144 */ public float HUDPlayerTrackArrowPulseOffset;
        /* 0x1148 */ public float HUDPlayerTrackArrowPulseRate;
        /* 0x114C */ public Vector2f HUDPlayerTrackIconOffset;
        /* 0x1154 */ public float ShipFullscreenDamper;
        /* 0x1158 */ public float ShipDesatDamper;
        /* 0x115C */ public float ScanEventArrowShipFadeRange;
        /* 0x1160 */ public float ScanEventArrowShipFadeDistance;
        /* 0x1164 */ public float ScanEventArrowPlayerFadeRange;
        /* 0x1168 */ public float ScanEventArrowPlayerFadeDistance;
        /* 0x116C */ public float ScanEventArrowOffsetMultiplier;
        /* 0x1170 */ public float ScanEventArrowOffsetMultiplierOneEvent;
        /* 0x1174 */ public float ScanEventArrowSecondaryAlpha;
        /* 0x1178 */ public GcAudioWwiseEvents ScanEventIconAudio;
        /* 0x117C */ public TkNGuiRectanglePulseEffect PulseBarData;
        /* 0x1190 */ public TkNGuiRectanglePulseEffect PulseIconData;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x11A4 */ public byte[] Padding11A4;
        /* 0x011B0 */ public Colour PulseDamageColour;
        /* 0x011C0 */ public Colour PulseAlertColour;
        /* 0x011D0 */ public float TechDisplayDelayTime;
        /* 0x011D4 */ public float CriticalMessageTime;
        /* 0x011D8 */ public int NumDeathQuotes;
        /* 0x011DC */ public bool EnableKanaConversion;
        [NMS(Size = 0x03, Ignore = true)]
        /* 0x011DD */ public byte[] Padding11DD;
        /* 0x011E0 */ public float HUDDisplayTime;
        /* 0x011E4 */ public float HUDPlayerTrackDangerPulse;
        /* 0x011E8 */ public float HUDPlayerTrackArrowTextOffset;
        /* 0x011EC */ public float HUDPlayerTrackArrowTextHeight;
        /* 0x011F0 */ public Colour HUDPlayerTrackArrowTextColour;
        /* 0x01200 */ public float HUDPlayerTrackArrowHealthOffset;
        /* 0x01204 */ public Vector2f HUDPlayerTrackArrowHealthSize;
        /* 0x0120C */ public float HUDPlayerTrackArrowHealthGlowOffset;
        /* 0x01210 */ public Vector2f HUDPlayerTrackArrowHealthGlowSize;
        /* 0x01218 */ public float HUDPlayerTrackArrowTargetDist;
        /* 0x0121C */ public float HUDPlayerTrackArrowOffset;
        /* 0x01220 */ public float HUDPlayerTrackArrowScreenBorder;
        /* 0x01224 */ public float HUDPlayerTrackArrowSize;
        /* 0x01228 */ public float HUDPlayerTrackArrowSizeMin;
        /* 0x0122C */ public float HUDPlayerTrackArrowSizeMax;
        /* 0x01230 */ public float HUDPlayerTrackArrowIconSize;
        /* 0x01234 */ public float HUDPlayerTrackArrowArrowSize;
        /* 0x01238 */ public float HUDPlayerTrackArrowDotSize;
        /* 0x0123C */ public float Unknown0x123C;
        /* 0x01240 */ public Colour HUDPlayerTrackArrowDotColour;
        /* 0x01250 */ public Colour HUDPlayerTrackArrowDotColourPolice;
        /* 0x01260 */ public Colour HUDPlayerTrackArrowDotColourPirate;
        /* 0x01270 */ public Colour HUDWarningColour;
        /* 0x01280 */ public Colour HUDNotifyColour;
        /* 0x01290 */ public float HUDPlayerTrackArrowMinFadeDist;
        /* 0x01294 */ public float HUDPlayerTrackArrowFadeRange;
        /* 0x01298 */ public float IconBackgroundAlpha;
        /* 0x0129C */ public float WantedLevelWitnessPulseRate;
        /* 0x012A0 */ public float WantedLevelWitnessOffset;
        /* 0x012A4 */ public float WantedLevelTimeoutPulseRate;
        /* 0x012A8 */ public float WantedLevelWitnessAlpha;
        /* 0x012AC */ public float WantedLevelScanAlpha;
        /* 0x012B0 */ public float WantedLevelScannedRate;
         [NMS(Size = 0x37)]
        /* 0x12B4 */ public NMSString0x80[] StatIcons;
        /* 0x2E34 */ public bool ShowJetpackNotificationForNonTerrain;
        /* 0x2E38 */ public float StatsMessageDelayTime;
        /* 0x2E3C */ public int NotificationsResourceExtractHintCount;
        /* 0x2E40 */ public float NotificationStaminaHintDistanceWalked;
        /* 0x2E44 */ public float NotificationMinVisibleTime;
        /* 0x2E48 */ public float NotificationHazardSafeThreshold;
        /* 0x2E4C */ public float NotificationHazardTimer;
        /* 0x2E50 */ public float NotificationInteractHintStartTime;
        /* 0x2E54 */ public float NotificationBuildHintStartTime;
        /* 0x2E58 */ public float NotificationJetpackTime;
        /* 0x2E5C */ public float NotificationShieldTime;
        /* 0x2E60 */ public float NotificationShipBoostTime;
        /* 0x2E64 */ public float Unknown0x2E64;
        /* 0x2E68 */ public float NotificationCantFireTime;
        /* 0x2E6C */ public float NotificationDangerTime;
        /* 0x2E70 */ public float NotificationScanTime;
        /* 0x2E74 */ public float NotificationScanTimeCutoff;
        /* 0x2E78 */ public float NotificationMessageCycleTime;
        /* 0x2E7C */ public float NotificationMaxPageHintTime;
        /* 0x2E80 */ public float NotificationShipJumpMinTime;
        /* 0x2E84 */ public float NotificationShipJumpReminderTime;
        /* 0x2E88 */ public float NotificationShipJumpReminderTutorial;
        /* 0x2E8C */ public float NotificationShipBoostMinTime;
        /* 0x2E90 */ public float NotificationShipBoostReminderTime;
        /* 0x2E94 */ public float NotificationShipBoostReminderTimeTutorial;
        /* 0x2E99 */ public float LandNotifySpeedThreshold;
        /* 0x2E9C */ public float LandNotifyHeightThreshold;
        /* 0x2EA0 */ public float Unknown0x2EA0;
        /* 0x2EA4 */ public float NotificationTimeBeforeHeridiumMarker;
        /* 0x2EA8 */ public float NotificationUrgentMessageTime;
        /* 0x2EAC */ public float NotificationGoToSpaceStationWait;
        /* 0x2EB0 */ public float NotificationMonolithMissionWait;
        /* 0x2EB4 */ public float NotificationFinalMissionWait;
        /* 0x2EB8 */ public float NotificationWaypointReachDistance;
        /* 0x2EBC */ public float NotificationBridgeReachDistance;
        /* 0x2EC0 */ public float NotificationDiscoveryIdleTime;
        /* 0x2EC4 */ public float NotificationInfoIdleTime;
        /* 0x2EC8 */ public float NotificationNewTechIdleTime;
        /* 0x2ECC */ public float NotificationScanEventMissionIdleTime;
        /* 0x2ED0 */ public float NotificationDeviceIdleTime;
        /* 0x2ED4 */ public float NotificationMissionHintTime;
        /* 0x2ED8 */ public float NotificationMissionHintTimeCritical;
        /* 0x2EDC */ public float NotificationMissionHintTimeSecondary;
        /* 0x2EE0 */ public Vector2f NotificationMissionHintPauseTime;
        /* 0x2EE8 */ public Vector2f NotificationMissionHintPauseTimeCritical;
        /* 0x2EF0 */ public Vector2f NotificationMissionHintPauseTimeSecondary;
        /* 0x2EF8 */ public float TooltipTime;
        /* 0x2EFC */ public float InventoryIconTime;
        /* 0x2F00 */ public float MessageNotificationTime;
        /* 0x2F04 */ public float MessageTimeQuick;
        /* 0x2F08 */ public float Unknown0x2F08;
        /* 0x2F0C */ public float DeathMessageSwitchTime;
        /* 0x2F10 */ public float DeathMessageTotalTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x2F14 */ public byte[] Padding2F14;
        /* 0x2F20 */ public Colour DeathMessageColour;
        /* 0x2F30 */ public Colour PinnedRecipeBorder;
        [NMS(Size = 0x20)]
        /* 0x2F40 */ public string DistanceUnitM;
        [NMS(Size = 0x20)]
        /* 0x2F60 */ public string DistanceUnitKM;
        [NMS(Size = 0x20)]
        /* 0x2F80 */ public string DistanceUnitMpS;
        /* 0x2FA0 */ public float ZoomHUDElementsOffsetX;
        /* 0x2FA4 */ public float ZoomHUDElementsOffsetY;
        /* 0x2FA8 */ public float ZoomHUDElementTime;
        /* 0x2FAC */ public float Unknown0x2FAC;
        /* 0x2FB0 */ public float Unknown0x2FB0;
        /* 0x2FB4 */ public float Unknown0x2FB4;
        /* 0x2FB8 */ public float HUDElementsOffsetX_0;
        /* 0x2FBC */ public float HUDElementsOffsetY_0;
        /* 0x2FC0 */ public float HUDElementsOffsetX_1;
        /* 0x2FC4 */ public float HUDElementsOffsetY_1;
        /* 0x2FC8 */ public float HUDElementsOffsetX_2;
        /* 0x2FCC */ public float HUDElementsOffsetY_2;
        /* 0x2FD0 */ public float HUDElementsOffsetX_3;
        /* 0x2FD4 */ public float HUDElementsOffsetY_3;
        /* 0x2FD8 */ public float HUDElementsOffsetX_4;
        /* 0x2FDC */ public float HUDElementsOffsetY_4;
        /* 0x2FE0 */ public float HUDElementsOffsetX_5;
        /* 0x2FE4 */ public float HUDElementsOffsetY_5;
        /* 0x2FE8 */ public GcWorldUISettings WorldUISettings;
        /* 0x3018 */ public float Unknown0x3018;
        /* 0x301C */ public Vector2f PlanetLabelOffset;
        /* 0x3024 */ public Vector2f PlanetMeasureOffset;
        /* 0x302C */ public Vector2f PlanetLineOffset;
        /* 0x3034 */ public float PlanetLabelTime;
        /* 0x3038 */ public float PlanetLabelAngle;
        [NMS(Size = 0x04, Ignore = true)]
        /* 0x303C */ public byte[] Padding303C;
        /* 0x3040 */ public Colour ItemSlotColourSubstance;
        /* 0x3050 */ public Colour ItemSlotColourTech;
        /* 0x3060 */ public Colour ItemSlotColourTechCharge;
        /* 0x3070 */ public Colour ItemSlotColourTechDamage;
        /* 0x3080 */ public Colour Unknown0x3080;
        /* 0x3090 */ public float ItemSlotColourTechChargeRate;
        [NMS(Size = 0x0C, Ignore = true)]
        /* 0x3094 */ public byte[] Padding3094;
        /* 0x30A0 */ public Colour ItemSlotColourProduct;
        /* 0x30B0 */ public Colour ItemSlotTextColourSubstance;
        /* 0x30C0 */ public Colour ItemSlotTextColourTech;
        /* 0x30D0 */ public Colour ItemSlotTextColourProduct;
        /* 0x30E0 */ public float InteractionScanScanTime;
        /* 0x30E4 */ public float InteractionScanMinTime;
        /* 0x30E8 */ public float InteractionScanDisplayTime;
        /* 0x30EC */ public float InteractionScanSlapTime;
        /* 0x30F0 */ public float InteractionScanSlapScale;
        /* 0x30F4 */ public float InteractionScanSlapOverallTime;
        /* 0x30F8 */ public TkCurveType InteractionScanSlapCurve;
        /* 0x30FC */ public float ShipHUDMissileLockSizeMin;
        /* 0x3100 */ public float ShipHUDMissileLockSizeMax;
        /* 0x3104 */ public float ShipHUDMissileLockSpringSlow;
        /* 0x3108 */ public float ShipHUDMissileLockSpringFast;
        /* 0x310C */ public float ShipHUDMaxOffscreenTargetDist;
        /* 0x3110 */ public float ShipHUDTargetRadius;
        /* 0x3114 */ public float ShipHUDTargetTriangleRadius;
        /* 0x3118 */ public float ShipHUDTargetAlpha;
        /* 0x311C */ public float ShipHUDTargetArrowLength;
        /* 0x3120 */ public float ShipHUDTargetMinDist;
        /* 0x3124 */ public float ShipHUDTargetRange;
        /* 0x3128 */ public float ShipHUDTargetScale;
        /* 0x312C */ public float ShipHUDTargetArrowsRotationRate;
        /* 0x3130 */ public Colour ShipHUDTargetArrowsColourOutOfRange;
        /* 0x3140 */ public Colour ShipHUDTargetArrowsColourThreat;
        /* 0x3150 */ public Colour ShipHUDTargetArrowsColourLocal;
        [NMS(Size = 0x4)]
        /* 0x3160 */ public Colour[] ShipHUDTargetArrowsColour;
        /* 0x31A0 */ public Colour ShipHUDAimTargetColour;
        /* 0x31B0 */ public Colour ShipHUDAimTargetCritColour;
        /* 0x31C0 */ public float ShipHUDHitPointTime;
        /* 0x31C4 */ public float ShipHUDHitPointSize;
        /* 0x31C8 */ public float TargetScreenFoV;
        /* 0x31CC */ public float TargetScreenDistance;
        /* 0x31D0 */ public Vector2f TargetScreenCamOffset;
        /* 0x31D8 */ public float InventoryFullMessageRepeatTime;
        /* 0x31DC */ public float HoldTimerResetTime;
        /* 0x31E0 */ public bool ModelRendererBGPass;
        /* 0x31E1 */ public bool ModelRendererPass1;
        /* 0x31E2 */ public bool ModelRendererPass2;
        /* 0x31E4 */ public float HazardScreenEffectPulseRate;
        /* 0x31E8 */ public float KeepHazardBarActiveTime;
        /* 0x31EC */ public float KeepSecondHazardBarActiveTime;
        /* 0x31F0 */ public float HazardBarPulseTime;
        /* 0x31F4 */ public float HazardScreenEffectPulseTime;
        /* 0x31F8 */ public float HazardScreenEffectStrength;
        /* 0x31FC */ public float ShieldSpringTime;
        /* 0x3200 */ public float ShieldPulseTime;
        /* 0x3204 */ public float ShieldHazardPulseRate;
        /* 0x3208 */ public float ShieldHazardPulseThreshold;
        /* 0x320C */ public float AlwaysOnHazardThreshold;
        /* 0x3210 */ public float AlwaysOnHazardStrengthTox;
        /* 0x3214 */ public float AlwaysOnHazardStrengthHeat;
        /* 0x3218 */ public float AlwaysOnHazardStrengthRad;
        /* 0x321C */ public float AlwaysOnHazardStrengthCold;
        /* 0x3220 */ public float AlwaysOnHazardMultiplierTox;
        /* 0x3224 */ public float AlwaysOnHazardMultiplierHeat;
        /* 0x3228 */ public float AlwaysOnHazardMultiplierRad;
        /* 0x322C */ public float AlwaysOnHazardMultiplierCold;
        /* 0x3230 */ public float HazardPulseRate;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3234 */ public NMSString0x80[] HazardTextures;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3534 */ public NMSString0x80[] HazardNormalMaps;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3834 */ public NMSString0x80[] HazardHeightmaps;
        /* 0x3B34 */ public float IconPulseRate;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x3B38 */ public byte[] Padding3B38;
        /* 0x3B40 */ public Colour EnergyBgColour;
        /* 0x3B50 */ public Colour EnergyBgPulseColour;
        /* 0x3B60 */ public Colour HazardBgPulseColour;
        /* 0x3B70 */ public Colour HazardDamagePulseColour;
        /* 0x3B80 */ public Colour ShieldColour;
        /* 0x3B90 */ public Colour ShieldDamageColour;
        /* 0x3BA0 */ public Colour ShieldBgColour;
        /* 0x3BB0 */ public Colour ShieldDamageBgColour;
        /* 0x3BC0 */ public Vector2f ScanLabelOffset;
        /* 0x3BC8 */ public Vector2f InteractionLabelOffset;
        /* 0x3BD0 */ public Vector2f InteractionLabelOffset_1;
        /* 0x3BD8 */ public Vector2f InteractionLabelSize;
        /* 0x3BE0 */ public Vector2f InteractionLabelLineOffset;
        /* 0x3BE8 */ public float InteractionLabelRadiusScaler;
        /* 0x3BEC */ public float InteractionLabelHeight;
        /* 0x3BF0 */ public float InteractionLabelLineAlpha;
        /* 0x3BF4 */ public float InteractionIconInnerRadius;
        /* 0x3BF8 */ public float InteractionIconOuterRadius;
        /* 0x3BFC */ public float InteractionLabelPixelHeightMin;
        /* 0x3C00 */ public float InteractionLabelPixelHeightMax;
        /* 0x3C04 */ public float ScanTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x3C08 */ public byte[] Padding3C08;
        /* 0x3C10 */ public GcModelViewCollection ModelViews;
        /* 0x4BE0 */ public Colour CursorColour;
        /* 0x4BF0 */ public Colour CursorConfirmColour;
        /* 0x4C00 */ public Colour Unknown0x4C00;
        /* 0x4C10 */ public Colour CursorDeleteColour;
        /* 0x4C20 */ public float CursorHoverSlowFactor;
        /* 0x4C24 */ public float FrontendBGAlpha;
        /* 0x4C28 */ public float FrontendConfirmTimeMouseMultiplier;
        /* 0x4C2C */ public float FrontendConfirmTimeFast;
        /* 0x4C30 */ public float FrontendConfirmTime;
        /* 0x4C34 */ public float Unknown0x4C34;
        /* 0x4C38 */ public TkCurveType FrontendConfirmCurve;
        /* 0x4C3C */ public float FrontendCursorSize;
        /* 0x4C40 */ public float FrontendCursorOffset;
        /* 0x4C44 */ public float PopupXClampOffset;
        /* 0x4C48 */ public float Unknown0x4C48;
        /* 0x4C4C */ public float PopupSlotWidthOffset;
        /* 0x4C50 */ public float FrontendCursorWidth;
        /* 0x4C54 */ public float FrontendDeactivateTime;
        /* 0x4C58 */ public float FrontendDeactivateSplit;
        /* 0x4C5C */ public float FrontendActivateTime;
        /* 0x4C60 */ public float FrontendActivateSplit;
        /* 0x4C64 */ public float FrontendStatCircleWidth;
        /* 0x4C68 */ public float FrontendStatCircleWidthExtra;
        /* 0x4C6C */ public float FrontendBootTime;
        /* 0x4C70 */ public float FrontendBootBarTime;
        /* 0x4C74 */ public TkCurveType FrontendBootBarCurve;
        /* 0x4C78 */ public float PopupDebounceTime;
        /* 0x4C7C */ public float PopupActivateTime;
        /* 0x4C80 */ public float PopupDeactivateTime;
        /* 0x4C84 */ public TkCurveType PopupActivateCurve1;
        /* 0x4C88 */ public TkCurveType PopupActivateCurve2;
        /* 0x4C8C */ public float HatchPulseSpeed;
        /* 0x4C90 */ public float HatchPulseWidth;
        /* 0x4C94 */ public float HatchPulsePauseTime;
        /* 0x4C98 */ public int HatchCount;
        /* 0x4C9C */ public float HatchCursorRadius;
        /* 0x4CA0 */ public float HatchAlphaMain;
        /* 0x4CA4 */ public float HatchAlphaBase;
        /* 0x4CA8 */ public float HatchAlphaCursor;
        /* 0x4CAC */ public float FrontendDoFNearPlaneMin;
        /* 0x4CB0 */ public float FrontendDoFNearPlaneMax;
        /* 0x4CB4 */ public float FrontendDoFFarPlaneMin;
        /* 0x4CB8 */ public float FrontendDoFFarPlaneMax;
        /* 0x4CBC */ public float FrontendDoFFarPlaneFadeMin;
        /* 0x4CC0 */ public float FrontendDoFFarPlaneFadeMax;
        /* 0x4CC4 */ public float FrontendDoFBlurMultiplier;
        /* 0x4CC8 */ public bool FrontendDoFEnableBokeh;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x4CC9 */ public byte[] Padding4CC9;
        /* 0x4CCC */ public TkCurveType FrontendDoFCurve;
        /* 0x4CD0 */ public float FrontendShineSpeed;
        /* 0x4CD4 */ public float FrontendToolbarTextHeight;
        /* 0x4CD8 */ public float FrontendToolbarTextHeightSelected;
        /* 0x4CDC */ public float FrontendTitleFontSpacing;
        /* 0x4CE0 */ public float NGuiPadSensitivity;
        /* 0x4CE4 */ public float NGuiMouseSensitivity;
        /* 0x4CE8 */ public Vector2f NGuiTouchPadSensitivity;
        /* 0x4CF0 */ public Colour TargetMarkerColour;
        /* 0x4D00 */ public Colour TargetMarkerHighlightColour;
        /* 0x4D10 */ public float TargetMarkerScaleStart;
        /* 0x4D14 */ public float TargetMarkerScaleEnd;
        /* 0x4D18 */ public float TargetMarkerFadeAngleMin;
        /* 0x4D1C */ public float TargetMarkerFadeAngleRange;
        /* 0x4D20 */ public float HitMarkerPulseSize;
        /* 0x4D24 */ public float HitMarkerPulseTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x4D28 */ public byte[] Padding4D28;
        /* 0x4D30 */ public Colour WantedColour;
        /* 0x4D40 */ public float PlanetPoleMaxDotProduct;
        /* 0x4D44 */ public float SpaceMapFoV;
        /* 0x4D48 */ public float SpaceMapAspectRatio;
        /* 0x4D4C */ public float SpaceMapDistanceScale;
        /* 0x4D50 */ public float SpaceMapDistanceLogScaler;
        /* 0x4D54 */ public float SpaceMapScaleMin;
        /* 0x4D58 */ public float SpaceMapScaleRangeMin;
        /* 0x4D5C */ public float SpaceMapScaleRangeMax;
        /* 0x4D60 */ public float SpaceMapObjectScale;
        /* 0x4D64 */ public float SpaceMapFreighterScale;
        /* 0x4D68 */ public float SpaceMapStationScale;
        /* 0x4D6C */ public float SpaceMapPlanetScale;
        /* 0x4D70 */ public float SpaceMapMoonScale;
        /* 0x4D74 */ public float SpaceMapShipScale;
        /* 0x4D78 */ public float SpaceMapOtherPlayerScale;
        /* 0x4D7C */ public float SpaceMapActionScale;
        /* 0x4D80 */ public float SpaceMapPlayerScale;
        /* 0x4D84 */ public float SpaceMapMarkerScale;
        /* 0x4D88 */ public float SpaceMapDistance;
        /* 0x4D8C */ public float SpaceMapDistanceMultiplier;
        /* 0x4D90 */ public float SpaceMapHorizonThickness;
        /* 0x4D94 */ public float SpaceMapFadeAngleMin;
        /* 0x4D98 */ public float SpaceMapFadeAngleMax;
        /* 0x4D9C */ public float SpaceMapCamHeight;
        /* 0x4DA0 */ public float SpaceMapCamAngle;
        /* 0x4DA4 */ public float SpaceMapCamDistance;
        /* 0x4DA8 */ public float SpaceMapShipScaleMin;
        /* 0x4DAC */ public float SpaceMapLightPitch;
        /* 0x4DB0 */ public float SpaceMapLightYaw;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x4DB4 */ public byte[] Padding4DB4;
        /* 0x4DC0 */ public Vector4f SpaceMapPosScaler;
        /* 0x4DD0 */ public Colour SpaceMapAttackColour;
        /* 0x4DE0 */ public Colour SpaceMapOtherPlayerColour;
        /* 0x4DF0 */ public Colour SpaceMapThreatColour;
        /* 0x4E00 */ public Colour SpaceMapNeutralColour;
        /* 0x4E10 */ public Colour SpaceMapDeathPointColour;
        /* 0x4E20 */ public GcSpaceMapObjectData SpaceMapMarkerData;
        /* 0x4E50 */ public GcSpaceMapObjectData SpaceMapPlanetData;
        /* 0x4E80 */ public GcSpaceMapObjectData SpaceMapStationData;
        /* 0x4EB0 */ public GcSpaceMapObjectData SpaceMapShipData;
        /* 0x4EE0 */ public GcSpaceMapObjectData SpaceMapFreighterData;
        /* 0x4F10 */ public Vector2f HUDTargetHealthOffset;
        /* 0x4F18 */ public Vector2f HUDTargetHealthSize;
        /* 0x4F20 */ public Vector2f HUDTargetHealthIconOffset;
        /* 0x4F28 */ public float HUDTargetHealthIconSize;
        /* 0x4F2C */ public float HUDTargetHealthDangerTime;
        /* 0x4F30 */ public float HUDTargetMarkerOffset;
        /* 0x4F34 */ public float HUDTargetMarkerSize;
        /* 0x4F38 */ public float HUDTargetIconOffset;
        /* 0x4F3C */ public float HUDTargetIconSize;
        /* 0x4F40 */ public float HUDMarkerOffset;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x4F44 */ public byte[] Padding4F44;
        /* 0x4F50 */ public Colour HUDMarkerColour;
        /* 0x4F60 */ public Colour HUDSpaceshipColour;
        /* 0x4F70 */ public Colour HUDRelicMarkerColourDiscovered;
        /* 0x4F80 */ public Colour HUDRelicMarkerColourUnknown;
        /* 0x4F90 */ public Colour HUDOutpostColour;
        /* 0x4FA0 */ public Vector2f HUDMarkerPrimaryIndicatorOffset;
        /* 0x4FA8 */ public Vector2f HUDMarkerCompassPrimaryIndicatorOffset;
        /* 0x4FB0 */ public NMSString0x100 HUDMarkerIcon;
        /* 0x50B0 */ public NMSString0x100 HUDMarkerPrimaryIndicatorIcon;
        /* 0x51B0 */ public NMSString0x100 HUDMarkerColourIcon;
        /* 0x52B0 */ public NMSString0x100 HUDPointIcon;
        /* 0x53B0 */ public NMSString0x100 HUDSpaceshipIcon;
        /* 0x54B0 */ public NMSString0x100 HUDSaveIcon;
        /* 0x55B0 */ public NMSString0x100 HUDDeathPointIcon;
        /* 0x56B0 */ public NMSString0x100 HUDHexAnimIcon;
        /* 0x57B0 */ public NMSString0x100 HUDCircleAnimIcon;
        /* 0x58B0 */ public float HUDMarkerAnimSpeed;
        /* 0x58B4 */ public float HUDMarkerAnimScale;
        /* 0x58B8 */ public float HUDMarkerAnimOffset;
        /* 0x58BC */ public float HUDMarkerAnimLoopTime;
        /* 0x58C0 */ public TkCurveType HUDMarkerAnimAlphaCurve;
        /* 0x58C4 */ public TkCurveType HUDMarkerAnimCurve;
        /* 0x58C8 */ public float HUDMarkerPrimaryIndicatorSize;
        /* 0x58CC */ public float HUDMarkerHoverAngleTestGround;
        /* 0x58D0 */ public float Unknown0x58D0;
        /* 0x58D4 */ public float HUDMarkerWideHoverAngleTest;
        /* 0x58D8 */ public float HUDMarkerHoverAngleTestShip;
        /* 0x58DC */ public float Unknown0x58DC;
        /* 0x58E0 */ public float Unknown0x58E0;
        /* 0x58E4 */ public float HUDMarkerShipOffsetMaxDist;
        /* 0x58E8 */ public float HUDMarkerShipOffsetMinDist;
        /* 0x58EC */ public float HUDMarkerNearFadeDistance;
        /* 0x58F0 */ public float HUDMarkerNearFadeRange;
        /* 0x58F4 */ public float HUDMarkerFarDistance;
        /* 0x58F8 */ public float HUDMarkerFarFadeRange;
        /* 0x58FC */ public float HUDMarkerScalerMin;
        /* 0x5900 */ public float HUDMarkerScalerRange;
        /* 0x5904 */ public float HUDMarkerScalerSizeMin;
        /* 0x5908 */ public float HUDMarkerScalerSizeMax;
        /* 0x590C */ public float HUDMarkerHorizonBlendRange;
        /* 0x5910 */ public float HUDMarkerAlpha;
        /* 0x5914 */ public float HUDMarkerModelFadeRange;
        /* 0x5918 */ public float HUDMarkerModelFadeMinHeight;
        /* 0x591C */ public float HUDMarkerShowActualIconDistance;
        /* 0x5920 */ public float HUDMarkerShowActualSpaceIconDistance;
        /* 0x5924 */ public float HUDMarkerActiveTime;
        /* 0x5928 */ public TkCurveType HUDMarkerActiveCurve;
        /* 0x592C */ public float Unknown0x592C;
        /* 0x5930 */ public float AltimeterResolution;
        /* 0x5934 */ public float AltimeterLineSpacing;
        /* 0x5938 */ public float AltimeterWidth;
        /* 0x593C */ public float AltimeterMin;
        /* 0x5940 */ public float AltimeterMax;
        /* 0x5944 */ public float AltimeterTextSize;
        /* 0x5948 */ public float AltimeterMinValue;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x594C */ public byte[] Padding594Cp;
        /* 0x5950 */ public Colour AltimeterBandColour1;
        /* 0x5960 */ public Colour AltimeterBandColour2;
        /* 0x5970 */ public Colour AltimeterColour1;
        /* 0x5980 */ public Colour AltimeterColour2;
        /* 0x5990 */ public float LockOnMarkerSize;
        /* 0x5994 */ public float LockOnMarkerSizeLock;
        [NMS(Size = 0x08, Ignore = true)]
        /* 0x5998 */ public byte[] Padding5998;
        /* 0x59A0 */ public Colour LockOnMarkerActiveColour;
        /* 0x59B0 */ public float MissileIconAttackPulseTime;
        /* 0x59B4 */ public float MissileIconAttackPulseAmount;
        /* 0x59B8 */ public float NGuiModelRotationDegreesX;
        /* 0x59BC */ public float NGuiModelRotationDegreesY;
        /* 0x59C0 */ public float NGuiModelRotationDegreesZ;
        /* 0x59C4 */ public float NGuiModelViewDistanceGlobal;
        /* 0x59C8 */ public float NGuiModelViewDistanceSuitPage;
        /* 0x59CC */ public float NGuiModelViewDistanceWeaponPage;
        /* 0x59D0 */ public float NGuiModelViewDistanceShipPage;
        /* 0x59D4 */ public float NGuiModelViewDistanceDiscoveryPage;
        /* 0x59D8 */ public float NGuiModelViewFov;
        /* 0x59DC */ public float NGuiModelViewCdSmoothTime;
        /* 0x59E0 */ public float NGuiAltPlacementDistanceScrollSpeed;
        /* 0x59E4 */ public float NGuiPlacementAngleScrollSpeed;
        /* 0x59E8 */ public float NGuiModelViewFractionOfBBHeightAboveReflectivePlane;
        [NMS(Size = 0x04, Ignore = true)]
        /* 0x59EC */ public byte[] Padding59EC;
        /* 0x59F0 */ public Vector4f NGuiModelTranslationFactors;
        /* 0x5A00 */ public Vector4f NGuiModelTranslationFactorsInteraction;
        /* 0x5A10 */ public Vector4f NGuiThumbnailModelTranslationFactors;
        /* 0x5A20 */ public float NGuiThumbnailModelRotationDegreesY;
        /* 0x5A24 */ public float NGuiThumbnailModelViewDistance;
        /* 0x5A28 */ public float NGuiCursorOffsetMultiplier;
        /* 0x5A2C */ public float NGuiActiveAreaOffsetTime;
        /* 0x5A30 */ public Vector2f NGuiMin2DParallax;
        /* 0x5A38 */ public Vector2f NGuiMax2DParallax;
        /* 0x5A40 */ public Vector2f NGuiModelParallax;
        /* 0x5A48 */ public Vector2f NGuiShipInteractParallax;
        /* 0x5A50 */ public Vector2f InteractionWorldParallax;
        /* 0x5A58 */ public float TargetParallaxMouseMultiplier;
        /* 0x5A5C */ public float TargetParallaxMaintenancePageMultiplier;
        /* 0x5A60 */ public float NGuiModelViewFadeInAfterRenderTime;
        /* 0x5A64 */ public TkCurveType NGuiModelViewFadeInAfterRenderCurve;
        /* 0x5A68 */ public bool NGuiUseSeparateLayersForModelAndReflection;
        [NMS(Size = 0x03, Ignore = true)]
        /* 0x5A69 */ public byte[] Padding5A69;
        /* 0x5A6C */ public GcDiscoveryHelperTimings DiscoveryHelperTimings;
        /* 0x5A78 */ public GcHUDStartupTable IntroTiming;
        /* 0x5AF8 */ public GcInventorySlotActionData InstallTechSlotAction;
        /* 0x5B14 */ public GcInventorySlotActionData BuildProductSlotAction;
        /* 0x5B30 */ public GcInventorySlotActionData ChargeSlotAction;
        /* 0x5B4C */ public GcInventorySlotActionData RepairSlotAction;
        /* 0x5B68 */ public GcInventorySlotActionData NewSlotRevealAction;
        /* 0x5B84 */ public GcInventorySlotActionData NewSlotPulseAction;
        /* 0x5B84 */ public GcInventorySlotActionData Unknown0x5BA0;
        /* 0x5BBC */ public float ReportBaseFlashTime;
        /* 0x5BC0 */ public float ReportBaseFlashIntensity;
        /* 0x5BC4 */ public float ReportBaseFlashDelay;
        /* 0x5BC8 */ public int ReportBaseTexWidth;
        /* 0x5BCC */ public int ReportBaseTexHeight;
        /* 0x5BD0 */ public float ReportCameraSpeed;
        /* 0x5BD4 */ public float AmbientModeFadeTime;
        /* 0x5BD8 */ public bool HideQuickMenuControls;
        /* 0x5BD9 */ public bool QuickMenuAllowCycle;
        /* 0x5BDC */ public float TextChatMaxDisplayTime;
        /* 0x5BE0 */ public float TextChatStayBigAfterTextInput;
        /* 0x5BE4 */ public int BuildingShopMaxItems;
        /* 0x5BE8 */ public float Unknown0x5BE8;
        /* 0x5BEC */ public float Unknown0x5BEC;
        /* 0x5BF0 */ public float Unknown0x5BF0;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x5BF4 */ public byte[] EndPadding;
    }
}