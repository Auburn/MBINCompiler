using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0x6950, GUID = 0x66642D0536FF1625)]
    public class GcUIGlobals : NMSTemplate
    {
        /* 0x0 */ public int ForceOpenHazardProtInventoryThreshold;
		/* 0x4 */ public float PlanetDataExtraRadius;
		/* 0x8 */ public float StackSizeRateChangeRate;
		/* 0xC */ public float StackSizeChangeMinRate;
		/* 0x10 */ public float StackSizeChangeMaxRate;
		/* 0x14 */ public float ClosestDoorMarkerBuffer;
		/* 0x18 */ public bool SkipShopIntro;
		/* 0x1C */ public float ZoomFactorOverride;
		/* 0x20 */ public float PlacedMarkerFadeTime;
		/* 0x24 */ public float LoadingTravelDistance;
		/* 0x28 */ public float LoadingScreenTravelSpeed;
		/* 0x2C */ public float LoadingScreenTime;
		/* 0x30 */ public float OSDMessagePauseOffscreenAngle;
		/* 0x34 */ public float QuickMenuCentrePos;
		/* 0x38 */ public float QuickMenuSideOffset;
		/* 0x3C */ public float QuickMenuCentreSideOffset;
		/* 0x40 */ public float InWorldInteractLabelScale;
		/* 0x44 */ public float InWorldScreenScaleDistance;
		/* 0x48 */ public Vector2f InWorldInteractLabelAlignment;
		/* 0x50 */ public Vector3f InWorldInteractLabelCentreOffset;
		/* 0x60 */ public Vector3f InWorldInteractLabelTopOffset;
		/* 0x70 */ public Vector3f InWorldInteractLabelLineOffset;
		/* 0x80 */ public float InWorldInteractLabelMinHeadOffset;
		/* 0x84 */ public float InWorldInteractLabelNearDistance;
		/* 0x88 */ public float InWorldInteractLabelNearRange;
		/* 0x8C */ public float InWorldInteractLabelFarDistance;
		/* 0x90 */ public float InWorldInteractLabelFarRange;
		/* 0x94 */ public float BinocularScreenOffset;
		/* 0x98 */ public float BinocularScreenScale;
		/* 0x9C */ public float BinocularMarkerSideAngle;
		/* 0xA0 */ public float BinocularMarkerUpAngle;
		/* 0xA4 */ public bool BinocularScanScreen;
		/* 0xA8 */ public float AlignmentRequiredToDisableFrostedGlass;
		/* 0xB0 */ public Vector3f BinocularPanelLinePointOffset;
		/* 0xC0 */ public float FrontendOffsetVR;
		/* 0xC4 */ public float ProjectorScale;
		/* 0xC8 */ public float CockpitGlassFrostTime;
		/* 0xCC */ public float CockpitGlassDefrostTime;
		/* 0xD0 */ public float TextPrintoutMultiplier;
		/* 0xD4 */ public float TextPrintoutMultiplierAlien;
		/* 0xD8 */ public bool EnableHandMenuButtons;
		/* 0xD9 */ public bool AllowInWorldDebugBorders;
		/* 0xDC */ public Vector2f MarkerDistanceVRAlignment;
		/* 0xE4 */ public float CompassIconOffsetVR;
		/* 0xE8 */ public float LowerHelmetScreenScale;
		/* 0xEC */ public float LowerHelmetScreenPitch;
		/* 0xF0 */ public Vector3f LowerHelmetScreenOffset;
		/* 0x100 */ public float InWorldScreenMinScreenDistance;
		/* 0x104 */ public float InWorldScreenForwardOffset;
		/* 0x108 */ public float InWorldNGuiScreenScale;
		/* 0x110 */ public Vector3f InWorldNGuiScreenRotation;
		/* 0x120 */ public Vector2f InWorldNGuiParallax;
		/* 0x128 */ public Vector2f InWorldGameGuiAlignment;
		/* 0x130 */ public int InWorldInteractLabelWidth;
		/* 0x134 */ public int InWorldInteractLabelHeight;
        [NMS(Size = 0x20)]
		/* 0x138 */ public string VRDistanceWarningUIFile;
		/* 0x158 */ public bool ShowVRDistanceWarning;
		/* 0x160 */ public Vector3f FaceLockedScreenOffset;
		/* 0x170 */ public int VRFaceLockedScreenWidth;
		/* 0x174 */ public int VRFaceLockedScreenHeight;
		/* 0x178 */ public bool OnlyShowEjectHandlesInVR;
		/* 0x17C */ public int CompassScreenWidth;
		/* 0x180 */ public int CompassScreenHeight;
		/* 0x184 */ public float CompassLineContractionStartAngle;
		/* 0x188 */ public float CompassLineContractionEndAngle;
		/* 0x18C */ public float CompassLineContractionTargetAngle;
		/* 0x190 */ public int CompassLineNumNotches;
		/* 0x194 */ public float CompassLineThickness;
		/* 0x198 */ public float CompassLineOffset;
		/* 0x19C */ public float CompassLineNotchAngleRange;
		/* 0x1A0 */ public float CompassLineNotchThickness;
		/* 0x1A4 */ public float CompassLineNotchLength;
		/* 0x1A8 */ public bool EnableHandMenuDebug;
		/* 0x1AC */ public float HandControlMenuCursorScale;
		/* 0x1B0 */ public float QuickMenuCursorScale;
		/* 0x1B4 */ public float QuickMenuAlpha;
		/* 0x1B8 */ public float HandScreenGraphicsWidth;
		/* 0x1BC */ public float HandScreenGraphicsHeight;
		/* 0x1C0 */ public float HandScreenNearActivateDistance;
		/* 0x1C4 */ public float HandButtonRadius;
		/* 0x1C8 */ public float HandButtonRadiusTouch;
		/* 0x1CC */ public float HandButtonRadiusTouchNear;
		/* 0x1D0 */ public float HandButtonRadiusTouchNearActive;
		/* 0x1D4 */ public float HandButtonPostClickTime;
		/* 0x1D8 */ public float HandButtonReleaseThreshold;
		/* 0x1DC */ public float HandButtonReleaseThresholdInit;
		/* 0x1E0 */ public float HandButtonCursorScale;
		/* 0x1E4 */ public float HandButtonPushDistance;
		/* 0x1E8 */ public float HandButtonNearDistance;
		/* 0x1EC */ public float HandButtonRadiusClick;
		/* 0x1F0 */ public float HandButtonClickTime;
		/* 0x1F4 */ public float HandButtonTouchReturnTime;
		/* 0x1F8 */ public float HandButtonFrontendCursorScale;
		/* 0x1FC */ public float HandButtonThickness;
		/* 0x200 */ public float HandButtonDotRadius;
		/* 0x204 */ public float HandButtonPulseRadius;
		/* 0x208 */ public float HandButtonPulseThickness;
		/* 0x20C */ public float ShipSideScreenHeight;
		/* 0x210 */ public float SolidPointerScale;
		/* 0x214 */ public float SolidPointerLengthScale;
		/* 0x218 */ public float SolidPointerMaxLength;
		/* 0x21C */ public float InWorldInteractionScreenScale;
		/* 0x220 */ public float InWorldNPCInteractionScreenScale;
		/* 0x224 */ public bool EnableCraftingTree;
		/* 0x225 */ public bool QuickMenuEnableSwipe;
		/* 0x228 */ public float QuickMenuSwipeHeightMin;
		/* 0x22C */ public float QuickMenuSwipeHeightMax;
		/* 0x230 */ public float BuildMenuItemNavAnimTime;
		/* 0x234 */ public float BuildMenuItemNextNavAnimTime;
		/* 0x238 */ public float BuildMenuItemNextNavAnimWait;
		/* 0x23C */ public float QuickMenuInteractAdjustX;
		/* 0x240 */ public float QuickMenuInteractAdjustY;
		/* 0x244 */ public int QuickMenuScreenWidth;
		/* 0x248 */ public int QuickMenuScreenHeight;
		/* 0x24C */ public float QuickMenuHighlightRate;
		/* 0x250 */ public float HandControlButtonSize;
		/* 0x254 */ public float HandControlPointMargin;
		/* 0x258 */ public float HandControlPointActiveMargin;
		/* 0x25C */ public float HandControlMenuMoveDistance;
		/* 0x260 */ public float HandControlMenuMoveDistanceScroll;
		/* 0x264 */ public float HandControlMenuMoveDistanceVertical;
		/* 0x268 */ public float HandControlMenuMoveActionDistance;
		/* 0x26C */ public float HandControlMenuAngle;
		/* 0x270 */ public float HandControlMenuSurfaceOffset;
		/* 0x274 */ public float HandControlMenuSelectRadius;
		/* 0x278 */ public float HandControlMenuSelectRadius1;
		/* 0x27C */ public float HandControlMenuSelectRadius2;
		/* 0x280 */ public float HandControlTopMenuSelectRadius;
		/* 0x284 */ public int HandScreenWeaponWidth;
		/* 0x288 */ public int HandScreenWeaponHeight;
		/* 0x28C */ public int HandScreenWidth;
		/* 0x290 */ public int HandScreenHeight;
		/* 0x2A0 */ public Colour QuickMenuSelectedItemColour1;
		/* 0x2B0 */ public Colour QuickMenuSelectedItemColour2;
		/* 0x2C0 */ public TkModelRendererData ShipThumbnailModelView;
		/* 0x370 */ public TkModelRendererData MultitoolThumbnailModelView;
		/* 0x420 */ public TkModelRendererData LargeMultitoolThumbnailModelView;
		/* 0x4D0 */ public Colour FrontendCursorBackgroundColour;
		/* 0x4E0 */ public float NGuiHmdOffset;
		/* 0x4E4 */ public float HmdFramerateScreenPitch;
		/* 0x4F0 */ public Vector3f HmdFramerateScreenOffset;
		/* 0x500 */ public float CrosshairScaleHmd;
		/* 0x504 */ public float CrosshairOffsetHmd;
		/* 0x508 */ public float CrosshairOffsetHmdUp;
		/* 0x50C */ public int CrosshairScreenWidth;
		/* 0x510 */ public int CrosshairScreenHeight;
		/* 0x514 */ public float HUDMarkerHoverAngleTestGroundHmd;
		/* 0x518 */ public float HUDMarkerWideHoverAngleTestHmd;
		/* 0x51C */ public bool InteractionInWorldPlayerCamAlways;
		/* 0x520 */ public float InteractionInWorldPitchDistance;
		/* 0x524 */ public float InteractionInWorldMinScreenDistance;
		/* 0x528 */ public float InteractionInWorldSeatedNPCHeightAdjust;
		/* 0x52C */ public float TravelTargetRadius;
		/* 0x530 */ public float TravelLineThickness;
		/* 0x540 */ public Colour TravelLineColour;
		/* 0x550 */ public Colour TravelLineTooFarColour;
		/* 0x560 */ public Colour TravelLineTooSteepColour;
		/* 0x570 */ public Colour TravelLineInvalidColour;
		/* 0x580 */ public Colour TravelLineNotAllowedColour;
		/* 0x590 */ public Colour TravelTargetColour;
		/* 0x5A0 */ public bool AlwaysCloseQuickMenu;
		/* 0x5A1 */ public bool UseWorldNodesForRepair;
		/* 0x5A2 */ public bool RepairTechUseTechIcon;
		/* 0x5A3 */ public bool DebugMissionLogText;
		/* 0x5A4 */ public bool DebugShowMaintenanceScreenCentre;
		/* 0x5A5 */ public bool DebugPopupSizes;
		/* 0x5A6 */ public bool DebugInventoryIndices;
		/* 0x5A7 */ public bool FixedInventoryIconPositions;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x05A8 */ public byte[] Padding5A8;
        /* 0x05B0 */ public GcHUDEffectRewardData OSDRareItemRewardEffect;
        /* 0x0610 */ public GcHUDEffectRewardData OSDEpicItemRewardEffect;
        /* 0x0670 */ public float OSDMessageQueueSpeedMultiplier;
        /* 0x0674 */ public int OSDMessageQueueMin;
        /* 0x0678 */ public int OSDMessageQueueMax;
        /* 0x067C */ public float PopupValueSectionBaseHeight;
        /* 0x0680 */ public float PopupValueSectionHeight;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x0684 */ public byte[] Padding684;
        /* 0x0690 */ public Colour ProcProductColourCommon;
        /* 0x06A0 */ public Colour ProcProductColourUncommon;
        /* 0x06B0 */ public Colour ProcProductColourRare;
        [NMS(Size = 0x4)]
        /* 0x06C0 */ public Vector2f[] InventoryIconPositions;
        /* 0x06E0 */ public Colour PickedItemBorderColour;
        /* 0x06F0 */ public Colour MultiplayerMissionParticipantsColour;
        [NMS(Size = 0x10)]
        /* 0x0700 */ public string MultiplayerMissionInteractStartTrigger;
        [NMS(Size = 0x10)]
        /* 0x0710 */ public string MultiplayerMissionInteractEndTrigger;
        /* 0x0720 */ public float NotificationHazardMinTimeAfterRecharge;
        /* 0x0724 */ public float LoadFadeInDefaultTime;
        /* 0x0728 */ public float DroneIndicatorRadius;
        /* 0x072C */ public float DroneIndicatorCentreRadiusMax;
        /* 0x0730 */ public float DroneIndicatorCentreRadiusMin;
        /* 0x0734 */ public float DroneIndicatorFadeRange;
        /* 0x0738 */ public float WantedDetectMessageTime;
        /* 0x073C */ public float WantedDetectMinTimeout;
        /* 0x0740 */ public float TakeoffFuelMessageTime;
        /* 0x0744 */ public float MarkerHorizonOffsetAngle;
        /* 0x0748 */ public float MarkerHorizonMinOffset;
        /* 0x074C */ public float MarkerHorizonApproachAngle;
        /* 0x0750 */ public float MarkerOffsetTypeAngle;
        /* 0x0754 */ public float MarkerOffsetTypeAngleBattle;
        /* 0x0758 */ public float MarkerOffsetTypeAngleBounty;
        /* 0x075C */ public float MarkerOffsetTypeAnglePlayerShip;
        /* 0x0760 */ public float MarkerHorizonOffPlanetLightBeamAngle;
        /* 0x0764 */ public float MarkerHorizonShipApproachOffset;
        /* 0x0768 */ public float TransferPopupCursorOffsetFactor;
        /* 0x076C */ public float ScannableIconMergeAngle;
        /* 0x0770 */ public float MissionObjectiveBaseHeight;
        /* 0x0774 */ public float MarkerTagAppearDelay;
        /* 0x0778 */ public Vector2f CompassCentre;
        /* 0x0780 */ public float CompassHeight;
        /* 0x0784 */ public float CompassWidth;
        /* 0x0788 */ public float CompassDistanceScaleMin;
        /* 0x078C */ public float CompassDistanceScaleRange;
        /* 0x0790 */ public float CompassDistanceSpaceScaleMin;
        /* 0x0794 */ public float CompassDistanceSpaceScaleRange;
        /* 0x0798 */ public float CompassDistanceScale;
        /* 0x079C */ public float CompassDistanceMaxAngle;
        /* 0x07A0 */ public float CompassDistanceYOffset;
        /* 0x07A4 */ public float CompassAngleClamp;
        /* 0x07A8 */ public float CompassAngleFade;
        /* 0x07AC */ public TkCurveType CompassCurve;
        /* 0x07B0 */ public float CompassAngleClampSpace;
        /* 0x07B4 */ public float BaseComplexityDangerFactor;
        /* 0x07B8 */ public float BaseComplexityWarningFactor;
        /* 0x07C0 */ public Colour BaseComplexityDefaultColour;
        /* 0x07D0 */ public Colour BaseComplexityWarningColour;
        /* 0x07E0 */ public Colour BaseComplexityDangerColour;
        /* 0x07F0 */ public float MarkerRingInnerRadius;
        /* 0x07F4 */ public float MarkerRingOuterRadius;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x07F8 */ public byte[] Padding7C8;
        /* 0x0800 */ public Colour MarkerRingBGColour;
        /* 0x0810 */ public float RepairTechRepairedWaitTime1;
        /* 0x0814 */ public float RepairTechRepairedWaitTime2;
        /* 0x0818 */ public float RepairTechRepairedMessageTime;
        /* 0x081C */ public float TechPopupRepairLayerHeight;
        /* 0x0820 */ public float TechPopupBuildLayerHeight;
        /* 0x0824 */ public float TechPopupRequirementHeight;
        /* 0x0828 */ public float DamageTrackArrowTime;
        /* 0x082C */ public bool EnableBlackouts;
        /* 0x0830 */ public float HUDMarkerObjectMinScreenDistance;
        /* 0x0834 */ public float HUDMarkerDistanceOrTimeDistance;
        /* 0x0838 */ public float MarkerComponentOffset;
        /* 0x083C */ public float RepairTechLabelOffset;
        /* 0x0840 */ public float MaintenanceIconFadeStart;
        /* 0x0844 */ public float MaintenanceIconFadeTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0848 */ public byte[] Padding848;
        /* 0x0850 */ public TkModelRendererData RepairCamera;
        /* 0x0900 */ public TkModelRendererData RepairWeaponCamera;
        /* 0x09B0 */ public TkModelRendererData RepairBackpackCamera;
        /* 0x0A60 */ public TkModelRendererData RepairShipCamera;
        /* 0x0B10 */ public TkModelRendererData RepairShipCameraVR;
        [NMS(Size = 0x7, EnumType = typeof(GcVehicleType.VehicleTypeEnum))]
        /* 0x0BC0 */ public TkModelRendererData[] VehicleTypeRepairCamera;
        /* 0x01090 */ public Vector2f BinocularsDiscoveryPos;
        /* 0x010A0 */ public Colour InteractionLabelCostColour;
        /* 0x010B0 */ public Colour InteractionLabelPickupColour;
        /* 0x010C0 */ public Colour InteractionLabelPickupFillColour;
        /* 0x010D0 */ public Vector2f PersonalRefinerInputPos;
        /* 0x010D8 */ public Vector2f PersonalRefinerOutputPos;
        /* 0x010E0 */ public TkMaterialResource RefinerPopupEmptyOutputIcon;
        /* 0x01164 */ public float RefinerPadStartTime;
        /* 0x01168 */ public float RefinerPadStartDecayTime;
        /* 0x0116C */ public float RefinerBeginDialInnerRadius;
        /* 0x01170 */ public float RefinerProgressDialInnerRadius;
        /* 0x01180 */ public Vector4f DefaultRefinerOffsetIn;
        /* 0x01190 */ public Vector4f DefaultRefinerOffsetOut;
        /* 0x011A0 */ public Vector2f RefinerParallax;
        /* 0x011A8 */ public Vector2f ModelViewWorldParallax;
        /* 0x011B0 */ public Vector2f HUDPlayerSentinelPulseFreq;
        /* 0x011B8 */ public Vector2f HUDPlayerSentinelPulseSize;
        /* 0x011C0 */ public float HUDPlayerSentinelPulseWidth;
        /* 0x011C4 */ public float HUDPlayerSentinelRangeFactor;
        /* 0x011C8 */ public float HUDPlayerSentinelPulseScanFreq;
        /* 0x011CC */ public float HUDPlayerPhonePulseScanFreq;
        /* 0x011D0 */ public float RefinerAutoCloseTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x011D4 */ public byte[] Padding11D4;
        /* 0x011E0 */ public Colour RefinerBackgroundColour;
        /* 0x011F0 */ public Colour RefinerErrorBackgroundColour;
        /* 0x01200 */ public Colour GridDisconnectedColour;
        /* 0x01210 */ public Colour GridOnlineColour;
        /* 0x01220 */ public Colour GridOfflineColour;
        /* 0x01230 */ public Colour GridBackgroundNeutralColour;
        /* 0x01240 */ public Colour GridBackgroundPositiveColour;
        /* 0x01250 */ public Colour GridBackgroundNegativeColour;
        /* 0x01260 */ public Colour TransferSendPopupColour;
        /* 0x01270 */ public float BountyMarkerOffset;
        /* 0x01274 */ public float TransitionOffset;
        /* 0x01278 */ public float PageTurnTime;
        /* 0x0127C */ public TkCurveType PageTurnCurve;
        /* 0x01280 */ public TkCurveType PageTurnFadeCurve;
        /* 0x01284 */ public float LowHealthShieldMin;
        /* 0x01288 */ public float LowHealthShieldFactor;
        /* 0x0128C */ public int MaxDialogCharSizeRoman;
        [NMS(Size = 0x20)]
        /* 0x01290 */ public string MaxDialogCharSizeRomanString;
        /* 0x012B0 */ public int MaxDialogCharSizeIdeographic;
        [NMS(Size = 0x20)]
        /* 0x012B4 */ public string MaxDialogCharSizeIdeographicString;
        /* 0x012D4 */ public float ShipOverheatSwitchMessageWait;
        /* 0x012D8 */ public float ShipOverheatSwitchMessageTime;
        /* 0x012DC */ public bool LeadTargetEnabled;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x012DD */ public byte[] Padding12DD;
        /* 0x012E0 */ public Vector2f SaveIconPosition;
        /* 0x012E8 */ public float MissionStartEndTime;
        /* 0x012EC */ public float MissionStartEndOSDTime;
        /* 0x012F0 */ public float MissionStartEndOSDTimeProcedural;
        /* 0x012F4 */ public float StandingRewardOSDTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x012F8 */ public byte[] Padding12F8;
        /* 0x01300 */ public Colour MissionOSDMessageBarColour;
        /* 0x01310 */ public Colour NotificationDefaultColour;
        /* 0x01320 */ public Colour NotificationDangerColour;
        /* 0x01330 */ public Colour NotificationInfoColour;
        /* 0x01340 */ public Colour NotificationUrgentColour;
        /* 0x01350 */ public float ShipDamageDirectionIndicatorRadius;
        /* 0x01354 */ public float ShipDamageDirectionIndicatorFadeRange;
        /* 0x01358 */ public float OnFootDamageDirectionIndicatorRadius;
        /* 0x0135C */ public float OnFootDamageDirectionIndicatorFadeRange;
        /* 0x01360 */ public float DamageDirectionIndicatorOnScreenRadiusMultiplier;
        /* 0x01364 */ public Vector2f DialogPageCursorOffset;
        /* 0x0136C */ public int MissionSpecificMissionPercent;
        /* 0x01370 */ public int MissionLoopCount;
        /* 0x01374 */ public int MissionSeedOffset;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x01378 */ public byte[] Padding1378;
        /* 0x01380 */ public Vector4f SpaceMapCockpitOffset;
		/* 0x1390 */ public float SpaceMapCockpitScale;
		/* 0x1394 */ public float SpaceMapCockpitScaleAdjustDropShip;
		/* 0x1398 */ public float SpaceMapCockpitScaleAdjustFighter;
		/* 0x139C */ public float SpaceMapCockpitScaleAdjustScientific;
		/* 0x13A0 */ public float SpaceMapCockpitScaleAdjustShuttle;
		/* 0x13A4 */ public float SpaceMapCockpitScaleAdjustRoyal;
		/* 0x13A8 */ public float SpaceMapCockpitScaleAdjustAlien;
		/* 0x13AC */ public float SpaceMapCockpitAngle;
        /* 0x013B0 */ public float TargetDisplayScale;
        /* 0x013B4 */ public float TargetDisplayShipScale;
        /* 0x013C0 */ public Vector4f TargetDisplayShipOffset;
        /* 0x013D0 */ public float TargetDisplayDamageFlashTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x013D4 */ public byte[] Padding13D4;
        /* 0x013E0 */ public GcScanEffectData TargetDisplayScanEffect;
        /* 0x01430 */ public bool ProgressiveDialogStyle;
        /* 0x01434 */ public float CommunicatorMessageTime;
        /* 0x01440 */ public Colour CommunicatorMessageColour;
        /* 0x01450 */ public float GridFlickerBaseAlpha;
        /* 0x01454 */ public float GridFlickerFreq;
        /* 0x01458 */ public float GridFlickerAmp;
        /* 0x0145C */ public float HUDMarkerLabelWidthMultiplier;
        /* 0x01460 */ public float HUDMarkerLabelBaseWidth;
        /* 0x01464 */ public float HUDMarkerLabelArriveDistance;
        /* 0x01468 */ public float HUDMarkerLabelDisplayDistance;
        /* 0x0146C */ public float HUDMarkerNonActiveMissionAlpha;
        /* 0x01470 */ public bool DebugMarkerLabels;
        [NMS(Size = 0xF, Ignore = true)]
        /* 0x01471 */ public byte[] Padding1471;
        /* 0x01480 */ public GcScanEffectData DebugEditorPreviewEffect;
        /* 0x014D0 */ public bool ShowDamageNumbers;
        /* 0x014D4 */ public float QuickMenuCloseTime;
        /* 0x014D8 */ public float QuickMenuErrorTime;
        /* 0x014DC */ public float FrontendWaitResponse;
        /* 0x014E0 */ public float FrontendWaitInitial;
        /* 0x014E4 */ public float FrontendWaitInitialTerminal;
        /* 0x014E8 */ public float FrontendWaitFadeTextOut;
        /* 0x014EC */ public float FrontendWaitFadeTextFrameOut;
        /* 0x014F0 */ public float FrontendWaitFadeProgressiveDialogOut;
        /* 0x014F4 */ public float FrontendWaitResponseOffset;
        /* 0x014F8 */ public float TalkBoxAlienTextSpeed;
        /* 0x014FC */ public float TalkBoxAlienTextTimeMin;
        /* 0x01500 */ public float TalkBoxAlienTextTimeMax;
        /* 0x01504 */ public float DescriptionTextDelay;
        /* 0x01508 */ public float DescriptionTextSpeed;
        /* 0x0150C */ public float DescriptionTextSpeedProgressive;
        /* 0x01510 */ public float DescriptionTextTimeMin;
        /* 0x01514 */ public float DescriptionTextTimeMax;
        /* 0x01518 */ public float ConsoleTextSpeed;
        /* 0x0151C */ public float ConsoleTextTimeMin;
        /* 0x01520 */ public float ConsoleTextTimeMax;
        /* 0x01524 */ public float HoverOffscreenBorder;
		/* 0x1528 */ public float HoverOffscreenBorderVR;
		/* 0x152C */ public float TransferSendOffscreenBorder;
		/* 0x1530 */ public float TimedEventLookTime;
		/* 0x1534 */ public float CreatureDistanceSize;
		/* 0x1538 */ public float CreatureDistanceOffsetY;
		/* 0x153C */ public float CreatureDistanceShadowOffset;
		/* 0x1540 */ public float CreatureDistanceDisplayAngle;
		/* 0x1544 */ public float CreatureDistanceFadeTime;
		/* 0x1548 */ public float CreatureDistanceAlpha;
		/* 0x154C */ public bool ShowOnscreenPredatorMarkers;
		/* 0x1550 */ public float DamageImpactMergeTime;
		/* 0x1554 */ public float DamageImpactTimeBetweenNumbers;
		/* 0x1558 */ public float DamageImpactMinDistance;
		/* 0x155C */ public float DamagePerSecondSampleTime;
		/* 0x1560 */ public float DamageNumberTime;
		/* 0x1564 */ public float DamageNumberSizeInShip;
		/* 0x1568 */ public float DamageNumberSize;
		/* 0x156C */ public float DamageNumberSizeCritMultiplier;
		/* 0x1570 */ public float DamageNumberSizeLaserMultiplier;
		/* 0x1574 */ public float DamageNumberLaserMinDamage;
		/* 0x1578 */ public float DamageNumberLaserMaxDamage;
        /* 0x0157C */ public float DamageNumberBlackAlpha;
        /* 0x01580 */ public float DamageNumberOutline;
        /* 0x01584 */ public float DamageNumberOutline2;
        /* 0x01588 */ public float DamageNumberOffsetX;
        /* 0x0158C */ public float DamageNumberOffsetY;
        /* 0x01590 */ public Vector2f DamageNumberSideSpeed;
        /* 0x01598 */ public float DamageNumberFadeIn;
        /* 0x0159C */ public float DamageNumberFadeOut;
        /* 0x015A0 */ public float DamageNumberUpOffset;
        /* 0x015A4 */ public TkCurveType DamageNumberUpCurve;
        /* 0x015B0 */ public Colour DamageNumberCriticalColour;
        /* 0x015C0 */ public Colour DamageNumberIneffectiveColour;
        /* 0x015D0 */ public Colour DamageNumberIneffectiveWarningColour;
        /* 0x015E0 */ public Colour PhotoModeSelectedColour;
        /* 0x015F0 */ public Colour PhotoModeUnselectedColour;
        /* 0x01600 */ public Colour FuelBgColour;
        /* 0x01610 */ public float PhotoModeValueAlpha;
        /* 0x01614 */ public float PhotoModeTimeofDayChange;
        /* 0x01618 */ public float FrigateIconOffset;
        /* 0x0161C */ public float CreatureIconOffset;
        /* 0x01620 */ public float DelayBeforeHidingHangarAfterGalaxyMap;
        /* 0x01624 */ public float DelayBeforeShowingHangarIntoGalaxyMap;
        /* 0x01628 */ public float FreighterSummonTurn;
        /* 0x0162C */ public float FreighterSummonPitch;
        /* 0x01630 */ public float FreighterSummonOffset;
        /* 0x01634 */ public float FreighterSummonDelay;
        /* 0x01638 */ public int FreighterSummonTurnNumTries;
        /* 0x0163C */ public float FreighterSummonTurnAngleIncrement;
        /* 0x01640 */ public float FreighterSummonGridSize;
        /* 0x01644 */ public float FreighterCommanderMarkerMinDistance;
        /* 0x01648 */ public float FreighterBaseIconOffset;
        /* 0x0164C */ public float FreighterSurfaceMinAngle;
        /* 0x01650 */ public float FreighterSummonPulseRate;
        /* 0x01654 */ public float FreighterSummonPulseFadeAmount;
        /* 0x01658 */ public float FreighterSummonPlanetOffset;
        /* 0x0165C */ public float FreighterSummonLookTime;
        /* 0x01660 */ public float FreighterHighlightRange;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x01664 */ public byte[] Padding1664;
        /* 0x01670 */ public GcScanEffectData FreighterSummonScanEffect;
        /* 0x016C0 */ public Colour FreighterSummonScanEffectColourBlocked;
        /* 0x016D0 */ public Colour FreighterSummonScanEffectColourHighlight;
        /* 0x016E0 */ public float PirateCountdownTime;
        /* 0x016E4 */ public float PirateAttackIndicatorWidth;
        /* 0x016E8 */ public float PirateAttackIndicatorRadius;
        /* 0x016EC */ public float PirateAttackProbeDisplayFinishFactor;
        /* 0x016F0 */ public float HazardArrowsLevel2Threshold;
        /* 0x016F4 */ public float HazardArrowsLevel3Threshold;
        /* 0x016F8 */ public float ArrowBounceLength;
        /* 0x016FC */ public float ArrowBounceRate;
        /* 0x01700 */ public float ArrowBounceRightRate1;
        /* 0x01704 */ public float ArrowBounceRightRate2;
        /* 0x01708 */ public TkCurveType ArrowBounceRightCurve;
        /* 0x0170C */ public float ArrowBounceLeftRate1;
        /* 0x01710 */ public float ArrowBounceLeftRate2;
        /* 0x01714 */ public float ArrowBounceLeftRate3;
        /* 0x01718 */ public TkCurveType ArrowBounceLeftCurve;
        /* 0x0171C */ public float PlanetScanDelayTime;
        /* 0x01720 */ public float AlwaysShowIconFadeDistance;
        /* 0x01724 */ public float AlwaysShowIconFadeRange;
        /* 0x01728 */ public float FrigatePurchaseNotificationResetDistanceMultiplier;
        /* 0x0172C */ public float FrigateDamageIconVisibilityDistance;
        /* 0x01730 */ public float FreighterLeaderIconDistance;
        /* 0x01734 */ public float FreighterEntranceOffset;
        /* 0x01738 */ public float ShipHeadsUpDisplayDistance;
        /* 0x0173C */ public float ShipHeadsUpLineFadeTime;
        /* 0x01740 */ public float CrosshairAimTime;
        /* 0x01744 */ public float CrosshairAimOffTime;
        /* 0x01748 */ public float CrosshairInnerMinFade;
        /* 0x0174C */ public float CrosshairInnerMinFadeRange;
        /* 0x01750 */ public float CrosshairLeadScaleIn;
        /* 0x01754 */ public float CrosshairLeadInDelay;
        /* 0x01758 */ public float CrosshairLeadInTime;
        /* 0x0175C */ public float CrosshairLeadCornerOffset;
        /* 0x01760 */ public float CrosshairLeadTopOffset;
        /* 0x01764 */ public float CrosshairLeadTopLock;
        /* 0x01768 */ public float CrosshairLeadPulseSize;
        /* 0x0176C */ public TkCurveType CrosshairLeadScaleCurve;
        /* 0x01770 */ public float CrosshairSpringTime;
        /* 0x01774 */ public float CrosshairSpringAimTime;
        /* 0x01778 */ public float CrosshairLeadSpring;
        /* 0x0177C */ public float CrosshairLeadSpringOff;
        /* 0x01780 */ public float CrosshairLeadFadeRange;
        /* 0x01784 */ public float CrosshairLeadFadeSize;
        /* 0x01790 */ public Colour CrosshairLeadThreatColour;
        /* 0x017A0 */ public Colour CrosshairLeadPassiveColour;
        /* 0x017B0 */ public float CrosshairInterceptSize;
        /* 0x017B4 */ public float CrosshairInterceptBaseSize;
        /* 0x017B8 */ public float CrosshairInterceptCentreBaseSize;
        /* 0x017BC */ public float CrosshairInterceptSpringTime;
        /* 0x017C0 */ public float CrosshairInterceptAlpha;
        /* 0x017C4 */ public float CrosshairInterceptLockRange;
        /* 0x017C8 */ public float CrosshairTargetLockSize;
        /* 0x017CC */ public TkCurveType CrosshairTargetLockCurve;
        /* 0x017D0 */ public TkCurveType CrosshairTargetLockAlphaCurve;
        /* 0x017E0 */ public Colour CrosshairColour;
        /* 0x17F0 */ public TkHitCurveData CrosshairLeadHitCurve;
        /* 0x1800 */ public TkHitCurveData ShootableHitCurve;
        /* 0x1810 */ public int ControlScrollSteps;
        /* 0x1814 */ public float ControlScrollDistance;
        /* 0x1820 */ public Colour SelectedControlColour;
        /* 0x1830 */ public Colour RemappedControlColour;
        /* 0x1840 */ public float CreatureRoutineMarkerTime;
        /* 0x1844 */ public int CreatureRoutineRegionsPerFrame;
        /* 0x1848 */ public float SpaceMarkersOffset;
        /* 0x184C */ public float SpaceMarkersBattleOffset;
        /* 0x1850 */ public float LargeSpaceIconSize;
        /* 0x1854 */ public float SmallSpaceIconSize;
        /* 0x1858 */ public Vector2f TrackTypeIconOffset;
        /* 0x1860 */ public float TrackTypeIconSize;
        /* 0x1864 */ public float TrackPrimaryCentreOffset;
        /* 0x1868 */ public float TrackTimerAlpha;
        /* 0x186C */ public float TrackTimerRadarPulseSize;
        /* 0x1870 */ public float TrackTimerIconOuterRadius;
        /* 0x1874 */ public float TrackTimerIconInnerRadius;
        /* 0x1878 */ public float TrackTimerIconExclaimRadius;
        /* 0x187C */ public float TrackGlowBase;
        /* 0x1880 */ public float TrackHitPulseTime;
        /* 0x1884 */ public float TrackGlowCritical;
        /* 0x1888 */ public float TrackGlowHit;
        /* 0x188C */ public float MissileCentreOffset;
        /* 0x1890 */ public float TrackMissileTargetPulseRate;
        /* 0x1894 */ public float TrackScaleCritical;
        /* 0x1898 */ public float TrackScaleHit;
        /* 0x189C */ public float TrackLeadTargetInScale;
        /* 0x18A0 */ public float TrackReticuleScale;
        /* 0x18A4 */ public float TrackReticuleAngle;
        /* 0x18A8 */ public float TrackReticuleInTime;
        /* 0x18AC */ public float TrackReticuleInactiveTime;
        /* 0x18B0 */ public float TrackReticuleRandomTime;
        /* 0x18B4 */ public float TrackReticuleRandomDelay;
        /* 0x18B8 */ public TkCurveType TrackReticuleInCurve;
        /* 0x18BC */ public TkCurveType TrackReticuleInAngleCurve;
        /* 0x18C0 */ public float CreatureReticuleScale;
        /* 0x18C4 */ public TkCurveType CreatureReticuleScaleCurve;
        /* 0x18C8 */ public TkCurveType CreatureReticuleAlphaCurve;
        /* 0x18CC */ public bool CreatureInteractLabelUseBB;
        /* 0x18D0 */ public float CreatureInteractLabelOffsetY;
        /* 0x18D4 */ public float HUDPlayerTrackNoSightPulse;
        /* 0x18D8 */ public float HUDPlayerTrackTimerStart;
        /* 0x18DC */ public float HUDPlayerTrackTimerStartFade;
        /* 0x18E0 */ public float HUDPlayerTrackTimerEnd;
        /* 0x18E4 */ public float HUDPlayerTrackTimerPulseRate;
        /* 0x18E8 */ public TkCurveType TrackCritCurve;
        /* 0x18EC */ public Vector2f TrackCriticalHitOffset;
        /* 0x18F4 */ public float TrackCriticalHitSize;
        /* 0x18F8 */ public float TrackCriticalPulseTime;
        /* 0x18FC */ public float ThirdPersonCrosshairDistance;
        /* 0x1900 */ public float ThirdPersonCrosshairCircle1Distance;
        /* 0x1904 */ public float ThirdPersonCrosshairCircle2Distance;
        /* 0x1908 */ public float HUDPlayerTrackArrowShipLabelOffset;
        /* 0x190C */ public float HUDPlayerTrackArrowIconPulseTime;
        /* 0x1910 */ public float HUDPlayerTrackArrowIconShowTime;
        /* 0x1914 */ public float HUDPlayerTrackArrowIconFadeTime;
        /* 0x1918 */ public Vector2f HUDPlayerTrackArrowIconPulseSize;
        /* 0x1920 */ public float HUDPlayerTrackArrowIconPulseWidth1;
        /* 0x1924 */ public float HUDPlayerTrackArrowIconPulseWidth2;
        /* 0x1928 */ public float HUDPlayerTrackArrowIconPulse2Alpha;
        /* 0x192C */ public float HUDPlayerTrackArrowIconFadeDist;
        /* 0x1930 */ public float HUDPlayerTrackArrowIconFadeRange;
        /* 0x1934 */ public float HUDPlayerTrackArrowPulseOffset;
        /* 0x1938 */ public float HUDPlayerTrackArrowPulseRate;
        /* 0x193C */ public Vector2f HUDPlayerTrackIconOffset;
        /* 0x1944 */ public float ShipFullscreenDamper;
        /* 0x1948 */ public float ShipDesatDamper;
        /* 0x194C */ public float ScanEventArrowShipFadeRange;
        /* 0x1950 */ public float ScanEventArrowShipFadeDistance;
        /* 0x1954 */ public float ScanEventArrowPlayerFadeRange;
        /* 0x1958 */ public float ScanEventArrowPlayerFadeDistance;
        /* 0x195C */ public float ScanEventArrowOffsetMultiplier;
        /* 0x1960 */ public float ScanEventArrowOffsetMultiplierOneEvent;
        /* 0x1964 */ public float ScanEventArrowSecondaryAlpha;
        /* 0x1968 */ public GcAudioWwiseEvents ScanEventIconAudio;
        /* 0x196C */ public TkNGuiRectanglePulseEffect PulseBarData;
        /* 0x1980 */ public TkNGuiRectanglePulseEffect PulseIconData;
        /* 0x019A0 */ public Colour PulseDamageColour;
        /* 0x019B0 */ public Colour PulseAlertColour;
        /* 0x019C0 */ public float TechDisplayDelayTime;
        /* 0x019C4 */ public float CriticalMessageTime;
        /* 0x019C8 */ public int NumDeathQuotes;
        /* 0x019CC */ public bool EnableKanaConversion;
        /* 0x019D0 */ public float HUDDisplayTime;
        /* 0x019D4 */ public float HUDPlayerTrackDangerPulse;
        /* 0x019D8 */ public float HUDPlayerTrackArrowTextOffset;
        /* 0x019DC */ public float HUDPlayerTrackArrowTextHeight;
        /* 0x019E0 */ public Colour HUDPlayerTrackArrowTextColour;
        /* 0x019F0 */ public float HUDPlayerTrackArrowHealthOffset;
        /* 0x019F4 */ public Vector2f HUDPlayerTrackArrowHealthSize;
        /* 0x019FC */ public float HUDPlayerTrackArrowHealthGlowOffset;
        /* 0x01A00 */ public Vector2f HUDPlayerTrackArrowHealthGlowSize;
        /* 0x01A08 */ public float HUDPlayerTrackArrowTargetDist;
        /* 0x01A0C */ public float HUDPlayerTrackArrowOffset;
        /* 0x01A10 */ public float HUDPlayerTrackArrowScreenBorder;
        /* 0x01A14 */ public float HUDPlayerTrackArrowSize;
        /* 0x01A18 */ public float HUDPlayerTrackArrowSizeMin;
        /* 0x01A1C */ public float HUDPlayerTrackArrowSizeMax;
        /* 0x01A20 */ public float HUDPlayerTrackArrowIconSize;
        /* 0x01A24 */ public float HUDPlayerTrackArrowSmallIconSize;
        /* 0x01A28 */ public float HUDPlayerTrackArrowArrowSize;
        /* 0x01A2C */ public float HUDPlayerTrackArrowDotSize;
        /* 0x01A30 */ public Colour HUDPlayerTrackArrowDotColour;
        /* 0x01A40 */ public Colour HUDPlayerTrackArrowDotColourPolice;
        /* 0x01A50 */ public Colour HUDPlayerTrackArrowDotColourPirate;
        /* 0x01A60 */ public Colour HUDWarningColour;
        /* 0x01A70 */ public Colour HUDNotifyColour;
        /* 0x01A80 */ public float HUDPlayerTrackArrowMinFadeDist;
        /* 0x01A84 */ public float HUDPlayerTrackArrowFadeRange;
        /* 0x01A88 */ public float GalaxyMapRadialBorder;
        /* 0x01A8C */ public float GalaxyMapRadialTargetDist;
        /* 0x01A90 */ public float IconBackgroundAlpha;
        /* 0x01A94 */ public float WantedLevelWitnessPulseRate;
        /* 0x01A98 */ public float WantedLevelWitnessOffset;
        /* 0x01A9C */ public float WantedLevelTimeoutPulseRate;
        /* 0x01AA0 */ public float WantedLevelWitnessAlpha;
        /* 0x01AA4 */ public float WantedLevelScanAlpha;
        /* 0x01AA8 */ public float WantedLevelScannedRate;
         [NMS(Size = 0x37)]
        /* 0x1AAC */ public NMSString0x80[] StatIcons;
        /* 0x362C */ public bool ShowJetpackNotificationForNonTerrain;
        /* 0x3630 */ public float StatsMessageDelayTime;
        /* 0x3634 */ public int NotificationsResourceExtractHintCount;
        /* 0x3638 */ public float NotificationStaminaHintDistanceWalked;
        /* 0x363C */ public float NotificationMinVisibleTime;
        /* 0x3640 */ public float NotificationHazardSafeThreshold;
        /* 0x3644 */ public float NotificationHazardTimer;
        /* 0x3648 */ public float NotificationInteractHintStartTime;
        /* 0x364C */ public float NotificationBuildHintStartTime;
        /* 0x3650 */ public float NotificationJetpackTime;
        /* 0x3654 */ public float NotificationShieldTime;
        /* 0x3658 */ public float NotificationShipBoostTime;
        /* 0x365C */ public float NotificationShipBoostTimeVR;
        /* 0x3660 */ public float NotificationCantFireTime;
        /* 0x3664 */ public float NotificationDangerTime;
        /* 0x3668 */ public float NotificationScanTime;
        /* 0x366C */ public float NotificationScanTimeCutoff;
        /* 0x3670 */ public float NotificationMessageCycleTime;
        /* 0x3674 */ public float NotificationMaxPageHintTime;
        /* 0x3678 */ public float NotificationShipJumpMinTime;
        /* 0x367C */ public float NotificationShipJumpReminderTime;
        /* 0x3680 */ public float NotificationShipJumpReminderTutorial;
        /* 0x3684 */ public float NotificationShipBoostMinTime;
        /* 0x3688 */ public float NotificationShipBoostReminderTime;
        /* 0x368C */ public float NotificationShipBoostReminderTimeTutorial;
        /* 0x3691 */ public float LandNotifySpeedThreshold;
        /* 0x3694 */ public float LandNotifyHeightThreshold;
        /* 0x3698 */ public float LandNotifyTimeThreshold;
        /* 0x369C */ public float NotificationTimeBeforeHeridiumMarker;
        /* 0x36A0 */ public float NotificationUrgentMessageTime;
        /* 0x36A4 */ public float NotificationGoToSpaceStationWait;
        /* 0x36A8 */ public float NotificationMonolithMissionWait;
        /* 0x36AC */ public float NotificationFinalMissionWait;
        /* 0x36B0 */ public float NotificationWaypointReachDistance;
        /* 0x36B4 */ public float NotificationBridgeReachDistance;
        /* 0x36B8 */ public float NotificationDiscoveryIdleTime;
        /* 0x36BC */ public float NotificationInfoIdleTime;
        /* 0x36C0 */ public float NotificationNewTechIdleTime;
        /* 0x36C4 */ public float NotificationScanEventMissionIdleTime;
        /* 0x36C8 */ public float NotificationDeviceIdleTime;
        /* 0x36CC */ public float NotificationMissionHintTime;
        /* 0x36D0 */ public float NotificationMissionHintTimeCritical;
        /* 0x36D4 */ public float NotificationMissionHintTimeSecondary;
        /* 0x36D8 */ public Vector2f NotificationMissionHintPauseTime;
        /* 0x36E0 */ public Vector2f NotificationMissionHintPauseTimeCritical;
        /* 0x36E8 */ public Vector2f NotificationMissionHintPauseTimeSecondary;
        /* 0x36F0 */ public float TooltipTime;
        /* 0x36F4 */ public float InventoryIconTime;
        /* 0x36F8 */ public float MessageNotificationTime;
        /* 0x36FC */ public float MessageTimeQuick;
        /* 0x3700 */ public float ItemReceivedMessageTimeToAdd;
        /* 0x3704 */ public float DeathMessageSwitchTime;
        /* 0x3708 */ public float DeathMessageTotalTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x370C */ public byte[] Padding370C;
        /* 0x3710 */ public Colour DeathMessageColour;
        /* 0x3720 */ public Colour PinnedRecipeBorder;
        [NMS(Size = 0x20)]
        /* 0x3730 */ public string DistanceUnitM;
        [NMS(Size = 0x20)]
        /* 0x3750 */ public string DistanceUnitKM;
        [NMS(Size = 0x20)]
        /* 0x3770 */ public string DistanceUnitMpS;
        /* 0x3790 */ public float ZoomHUDElementsOffsetX;
        /* 0x3794 */ public float ZoomHUDElementsOffsetY;
        /* 0x3798 */ public float ZoomHUDElementTime;
        /* 0x379C */ public float HUDElementsOffsetHMDSide;
        /* 0x37A0 */ public float HUDElementsOffsetHMDTop;
        /* 0x37A4 */ public float HUDElementsOffsetHMDBottom;
        /* 0x37A8 */ public float HUDElementsOffsetX_0;
        /* 0x37AC */ public float HUDElementsOffsetY_0;
        /* 0x37B0 */ public float HUDElementsOffsetX_1;
        /* 0x37B4 */ public float HUDElementsOffsetY_1;
        /* 0x37B8 */ public float HUDElementsOffsetX_2;
        /* 0x37BC */ public float HUDElementsOffsetY_2;
        /* 0x37C0 */ public float HUDElementsOffsetX_3;
        /* 0x37C4 */ public float HUDElementsOffsetY_3;
        /* 0x37C8 */ public float HUDElementsOffsetX_4;
        /* 0x37CC */ public float HUDElementsOffsetY_4;
        /* 0x37D0 */ public float HUDElementsOffsetX_5;
        /* 0x37D4 */ public float HUDElementsOffsetY_5;
        /* 0x37D8 */ public GcWorldUISettings WorldUISettings;
        /* 0x3808 */ public float PauseMenuHoldTime;
        /* 0x380C */ public Vector2f PlanetLabelOffset;
        /* 0x3814 */ public Vector2f PlanetMeasureOffset;
        /* 0x381C */ public Vector2f PlanetLineOffset;
        /* 0x3824 */ public float PlanetLabelTime;
        /* 0x3828 */ public float PlanetLabelAngle;
        /* 0x3830 */ public Colour ItemSlotColourSubstance;
        /* 0x3840 */ public Colour ItemSlotColourTech;
        /* 0x3850 */ public Colour ItemSlotColourTechCharge;
        /* 0x3860 */ public Colour ItemSlotColourTechDamage;
        /* 0x3870 */ public Colour ItemSlotColourPartiallyInstalled;
        /* 0x3880 */ public float ItemSlotColourTechChargeRate;
        /* 0x3890 */ public Colour ItemSlotColourProduct;
        /* 0x38A0 */ public Colour ItemSlotTextColourSubstance;
        /* 0x38B0 */ public Colour ItemSlotTextColourTech;
        /* 0x38C0 */ public Colour ItemSlotTextColourProduct;
        /* 0x38D0 */ public float InteractionScanScanTime;
        /* 0x38D4 */ public float InteractionScanMinTime;
        /* 0x38D8 */ public float InteractionScanDisplayTime;
        /* 0x38DC */ public float InteractionScanSlapTime;
        /* 0x38E0 */ public float InteractionScanSlapScale;
        /* 0x38E4 */ public float InteractionScanSlapOverallTime;
        /* 0x38E8 */ public TkCurveType InteractionScanSlapCurve;
        /* 0x38EC */ public float ShipHUDMissileLockSizeMin;
        /* 0x38F0 */ public float ShipHUDMissileLockSizeMax;
        /* 0x38F4 */ public float ShipHUDMissileLockSpringSlow;
        /* 0x38F8 */ public float ShipHUDMissileLockSpringFast;
        /* 0x38FC */ public float ShipHUDMaxOffscreenTargetDist;
        /* 0x3900 */ public float ShipHUDTargetRadius;
        /* 0x3904 */ public float ShipHUDTargetTriangleRadius;
        /* 0x3908 */ public float ShipHUDTargetAlpha;
        /* 0x390C */ public float ShipHUDTargetArrowLength;
        /* 0x3910 */ public float ShipHUDTargetMinDist;
        /* 0x3914 */ public float ShipHUDTargetRange;
        /* 0x3918 */ public float ShipHUDTargetScale;
        /* 0x391C */ public float ShipHUDTargetArrowsRotationRate;
        /* 0x3920 */ public Colour ShipHUDTargetArrowsColourOutOfRange;
        /* 0x3930 */ public Colour ShipHUDTargetArrowsColourThreat;
        /* 0x3940 */ public Colour ShipHUDTargetArrowsColourLocal;
        // Not sure why this is repeated 4 times with identical values in each... ?
        // In the exe it looks to be just a single array of size 0x10...
        [NMS(Size = 0x10)]
        /* 0x3950 */ public Colour[] ShipHUDTargetArrowsColour;
        /* 0x3A50 */ public Colour ShipHUDAimTargetColour;
        /* 0x3A60 */ public Colour ShipHUDAimTargetCritColour;
        /* 0x3A70 */ public float ShipHUDHitPointTime;
        /* 0x3A74 */ public float ShipHUDHitPointSize;
        /* 0x3A78 */ public float TargetScreenFoV;
        /* 0x3A7C */ public float TargetScreenDistance;
        /* 0x3A80 */ public Vector2f TargetScreenCamOffset;
        /* 0x3A88 */ public float InventoryFullMessageRepeatTime;
        /* 0x3A8C */ public float HoldTimerResetTime;
        /* 0x3A90 */ public bool ModelRendererBGPass;
        /* 0x3A91 */ public bool ModelRendererPass1;
        /* 0x3A92 */ public bool ModelRendererPass2;
        /* 0x3A94 */ public float HazardScreenEffectPulseRate;
        /* 0x3A98 */ public float KeepHazardBarActiveTime;
        /* 0x3A9C */ public float KeepSecondHazardBarActiveTime;
        /* 0x3AA0 */ public float HazardBarPulseTime;
        /* 0x3AA4 */ public float HazardScreenEffectPulseTime;
        /* 0x3AA8 */ public float HazardScreenEffectStrength;
        /* 0x3AAC */ public float HazardWarningPulseTime;
        /* 0x3AB0 */ public float HazardWarningPulseStrength;
        /* 0x3AB4 */ public float HazardPainPulseStrength;
        /* 0x3AB8 */ public float ShieldSpringTime;
        /* 0x3ABC */ public float ShieldPulseTime;
        /* 0x3AC0 */ public float ShieldHazardPulseRate;
        /* 0x3AC4 */ public float ShieldHazardPulseThreshold;
        /* 0x3AC8 */ public float AlwaysOnHazardThreshold;
        /* 0x3ACC */ public float AlwaysOnHazardStrengthTox;
        /* 0x3AD0 */ public float AlwaysOnHazardStrengthHeat;
        /* 0x3AD4 */ public float AlwaysOnHazardStrengthRad;
        /* 0x3AD8 */ public float AlwaysOnHazardStrengthCold;
        /* 0x3ADC */ public float AlwaysOnHazardMultiplierTox;
        /* 0x3AE0 */ public float AlwaysOnHazardMultiplierHeat;
        /* 0x3AE4 */ public float AlwaysOnHazardMultiplierRad;
        /* 0x3AE8 */ public float AlwaysOnHazardMultiplierCold;
        /* 0x3AEC */ public float HazardPulseRate;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3AF0 */ public NMSString0x80[] HazardTextures;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3DF0 */ public NMSString0x80[] HazardNormalMaps;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x40F0 */ public NMSString0x80[] HazardHeightmaps;
        /* 0x43F0 */ public float IconPulseRate;
        /* 0x4400 */ public Colour EnergyBgColour;
        /* 0x4410 */ public Colour EnergyBgPulseColour;
        /* 0x4420 */ public Colour HazardBgPulseColour;
        /* 0x4430 */ public Colour HazardDamagePulseColour;
        /* 0x4440 */ public Colour ShieldColour;
        /* 0x4450 */ public Colour ShieldDamageColour;
        /* 0x4460 */ public Colour ShieldBgColour;
        /* 0x4470 */ public Colour ShieldDamageBgColour;
        /* 0x4480 */ public Vector2f ScanLabelOffset;
        /* 0x4488 */ public Vector2f InteractionLabelOffset;
        /* 0x4490 */ public Vector2f InteractionLabelOffset_1;
        /* 0x4498 */ public Vector2f InteractionLabelSize;
        /* 0x44A0 */ public Vector2f InteractionLabelLineOffset;
        /* 0x44A8 */ public float InteractionLabelRadiusScaler;
        /* 0x44AC */ public float InteractionLabelHeight;
        /* 0x44B0 */ public float InteractionLabelLineAlpha;
        /* 0x44B4 */ public float InteractionIconInnerRadius;
        /* 0x44B8 */ public float InteractionIconOuterRadius;
        /* 0x44BC */ public float InteractionLabelPixelHeightMin;
        /* 0x44C0 */ public float InteractionLabelPixelHeightMax;
        /* 0x44C4 */ public float ScanTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x44C8 */ public byte[] Padding44C8;
        /* 0x44D0 */ public GcModelViewCollection ModelViews;
        /* 0x56B0 */ public Colour CursorColour;
        /* 0x56C0 */ public Colour CursorConfirmColour;
        /* 0x56D0 */ public Colour CursorTransferUploadColour;
        /* 0x56E0 */ public Colour CursorDeleteColour;
        /* 0x56F0 */ public float CursorHoverSlowFactor;
        /* 0x56F4 */ public float FrontendBGAlpha;
        /* 0x56F8 */ public float FrontendConfirmTimeMouseMultiplier;
        /* 0x56FC */ public float FrontendConfirmTimeFast;
        /* 0x5700 */ public float FrontendConfirmTime;
        /* 0x5704 */ public float FrontendConfirmTimeSlow;       // middle button time to scrap an item
        /* 0x5708 */ public TkCurveType FrontendConfirmCurve;
        /* 0x570C */ public float FrontendCursorSize;
        /* 0x5710 */ public float FrontendCursorOffset;
        /* 0x5714 */ public float PopupXClampOffset;
        /* 0x5718 */ public float PopupXClampOffsetRightAligne;
        /* 0x571C */ public float PopupSlotWidthOffset;
        /* 0x5720 */ public float FrontendCursorWidth;
        /* 0x5724 */ public float FrontendDeactivateTime;
        /* 0x5728 */ public float FrontendDeactivateSplit;
        /* 0x572C */ public float FrontendActivateTime;
        /* 0x5730 */ public float FrontendActivateSplit;
        /* 0x5734 */ public float FrontendStatCircleWidth;
        /* 0x5738 */ public float FrontendStatCircleWidthExtra;
        /* 0x573C */ public float FrontendBootTime;
        /* 0x5740 */ public float FrontendBootBarTime;
        /* 0x5744 */ public TkCurveType FrontendBootBarCurve;
        /* 0x5748 */ public float PopupDebounceTime;
        /* 0x574C */ public float PopupActivateTime;
        /* 0x5750 */ public float PopupDeactivateTime;
        /* 0x5754 */ public TkCurveType PopupActivateCurve1;
        /* 0x5758 */ public TkCurveType PopupActivateCurve2;
		/* 0x575C */ public float ByteBeatTreeLineWidth;
		/* 0x5760 */ public Colour ByteBeatTreeLineColour;
		/* 0x5770 */ public float ByteBeatVisLineWidth;
		/* 0x5780 */ public Colour ByteBeatVisLineColour;
		/* 0x5790 */ public Colour ByteBeatVisGridColour;
		/* 0x57A0 */ public float ByteBeatIconLineWidth;
		/* 0x57A4 */ public float ByteBeatIconPad;
		/* 0x57A8 */ public float ByteBeatArpLineWidth;
		/* 0x57AC */ public float ByteBeatArpRadius;
		/* 0x57B0 */ public float ByteBeatArpPad;
		/* 0x57C0 */ public Colour ByteBeatArpGridInactiveColour;
		/* 0x57D0 */ public Colour ByteBeatArpGridActiveColour;
		/* 0x57E0 */ public Colour ByteBeatArpPipInactiveColour;
		/* 0x57F0 */ public Colour ByteBeatArpPipActiveColour;
		/* 0x5800 */ public float ByteBeatSequencerLineWidth;
		/* 0x5804 */ public float ByteBeatSequencerPad;
		/* 0x5808 */ public float ByteBeatPartSequencerPad;
		/* 0x580C */ public float ByteBeatSequencerCornerRadius;
		/* 0x5810 */ public float ByteBeatRhythmBeatPad;
		/* 0x5814 */ public float ByteBeatSequencerInactiveSaturation;
		/* 0x5818 */ public float ByteBeatSequencerActiveSaturation;
		/* 0x581C */ public float ByteBeatRhythmSequencerInactiveSaturation;
		/* 0x5820 */ public float ByteBeatRhythmSequencerActiveSaturation;
		/* 0x5824 */ public float ByteBeatSequencerUnpoweredTintStrength;
		/* 0x5830 */ public Colour ByteBeatSequencerUnpoweredTint;
		/* 0x5840 */ public Colour ByteBeatSequencerBGColourActive;
		/* 0x5850 */ public Colour ByteBeatSequencerBGColourInactive;
		/* 0x5860 */ public Colour ByteBeatSequencerRimColourActive;
		/* 0x5870 */ public Colour ByteBeatSequencerRimColourInactive;
		/* 0x5880 */ public Colour ByteBeatRhythmColour0Active;
		/* 0x5890 */ public Colour ByteBeatRhythmColour0Inactive;
		/* 0x58A0 */ public Colour ByteBeatRhythmColour1Active;
		/* 0x58B0 */ public Colour ByteBeatRhythmColour1Inactive;
		/* 0x58C0 */ public Colour ByteBeatRhythmColour2Active;
		/* 0x58D0 */ public Colour ByteBeatRhythmColour2Inactive;
		/* 0x58E0 */ public Colour ByteBeatSequencerHighlightColour;
		/* 0x58F0 */ public float ByteBeatSequencerHighlightLineWidth;
		/* 0x58F4 */ public float ByteBeatSliderLineWidth;
		/* 0x58F8 */ public float ByteBeatSliderPad;
		/* 0x58FC */ public float ByteBeatSliderCornerRadius;
		/* 0x5900 */ public Colour ByteBeatSliderFGColour;
		/* 0x5910 */ public Colour ByteBeatSliderTextActiveColour;
		/* 0x5920 */ public Colour ByteBeatSliderTextInactiveColour;
		/* 0x5930 */ public float ByteBeatSwitchPanelAlpha;
		/* 0x5934 */ public float ByteBeatSwitchPanelSplit;
        /* 0x5938 */ public float HatchPulseSpeed;
        /* 0x593C */ public float HatchPulseWidth;
        /* 0x5940 */ public float HatchPulsePauseTime;
        /* 0x5944 */ public int HatchCount;
        /* 0x5948 */ public float HatchCursorRadius;
        /* 0x594C */ public float HatchAlphaMain;
        /* 0x5950 */ public float HatchAlphaBase;
        /* 0x5954 */ public float HatchAlphaCursor;
        /* 0x5958 */ public float FrontendDoFNearPlaneMin;
        /* 0x595C */ public float FrontendDoFNearPlaneMax;
        /* 0x5960 */ public float FrontendDoFFarPlaneMin;
        /* 0x5964 */ public float FrontendDoFFarPlaneMax;
        /* 0x5968 */ public float FrontendDoFFarPlaneFadeMin;
        /* 0x596C */ public float FrontendDoFFarPlaneFadeMax;
        /* 0x5970 */ public float FrontendDoFBlurMultiplier;
        /* 0x5974 */ public bool FrontendDoFEnableBokeh;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x5975 */ public byte[] Padding5975;
        /* 0x5978 */ public TkCurveType FrontendDoFCurve;
        /* 0x597C */ public float FrontendShineSpeed;
        /* 0x5980 */ public float FrontendToolbarTextHeight;
        /* 0x5984 */ public float FrontendToolbarTextHeightSelected;
        /* 0x5988 */ public float FrontendTitleFontSpacing;
        /* 0x598C */ public float NGuiPadSensitivity;
        /* 0x5990 */ public float NGuiMouseSensitivity;
        /* 0x5994 */ public Vector2f NGuiTouchPadSensitivity;
        /* 0x59A0 */ public Colour TargetMarkerColour;
        /* 0x59B0 */ public Colour TargetMarkerHighlightColour;
        /* 0x59C0 */ public float TargetMarkerScaleStart;
        /* 0x59C4 */ public float TargetMarkerScaleEnd;
        /* 0x59C8 */ public float TargetMarkerFadeAngleMin;
        /* 0x59CC */ public float TargetMarkerFadeAngleRange;
        /* 0x59D0 */ public float HitMarkerPulseSize;
        /* 0x59D4 */ public float HitMarkerPulseTime;
        /* 0x59E0 */ public Colour WantedColour;
        /* 0x59F0 */ public float PlanetPoleMaxDotProduct;
		/* 0x59F4 */ public float SpaceMapLineWidth;
		/* 0x59F8 */ public float SpaceMapLineBaseScale;
		/* 0x59FC */ public float SpaceMapLineBaseFade;
		/* 0x5A00 */ public float SpaceMapShipCombineDistance;
		/* 0x5A04 */ public bool SpaceMapShowPlanets;
		/* 0x5A05 */ public bool SpaceMapShowPlanetLines;
		/* 0x5A06 */ public bool SpaceMapShowStation;
		/* 0x5A07 */ public bool SpaceMapShowStationLines;
		/* 0x5A08 */ public bool SpaceMapShowNexus;
		/* 0x5A09 */ public bool SpaceMapShowNexusLines;
		/* 0x5A0A */ public bool SpaceMapShowShips;
		/* 0x5A0B */ public bool SpaceMapShowShipLines;
		/* 0x5A0C */ public bool SpaceMapShowFrieghters;
		/* 0x5A0D */ public bool SpaceMapShowFrieghterLines;
		/* 0x5A0E */ public bool SpaceMapShowPulseEncounters;
		/* 0x5A0F */ public bool SpaceMapShowPulseEncounterLines;
		/* 0x5A10 */ public float SpaceMapFoV;
		/* 0x5A14 */ public float SpaceMapAspectRatio;
		/* 0x5A18 */ public float SpaceMapDistanceScale;
		/* 0x5A1C */ public float SpaceMapDistanceLogScaler;
		/* 0x5A20 */ public TkCurveType SpaceMapDistanceCurve;
		/* 0x5A24 */ public float SpaceMapScaleMin;
		/* 0x5A28 */ public float SpaceMapScaleRangeMin;
		/* 0x5A2C */ public float SpaceMapScaleRangeMax;
		/* 0x5A30 */ public float SpaceMapObjectScale;
		/* 0x5A34 */ public float SpaceMapFreighterScale;
		/* 0x5A38 */ public float SpaceMapStationScale;
		/* 0x5A3C */ public float SpaceMapPlanetScale;
		/* 0x5A40 */ public float SpaceMapPlanetLineOffset;
		/* 0x5A44 */ public float SpaceMapMoonScale;
		/* 0x5A48 */ public float SpaceMapActionScale;
		/* 0x5A4C */ public float SpaceMapShipScale;
		/* 0x5A50 */ public float SpaceMapMarkerScale;
		/* 0x5A54 */ public float SpaceMapDistance;
		/* 0x5A58 */ public float SpaceMapMaxTraderDistance;
		/* 0x5A5C */ public float SpaceMapDistanceMultiplier;
		/* 0x5A60 */ public float SpaceMapHorizonThickness;
		/* 0x5A64 */ public float SpaceMapFadeAngleMin;
		/* 0x5A68 */ public float SpaceMapFadeAngleMax;
		/* 0x5A6C */ public float SpaceMapCamHeight;
		/* 0x5A70 */ public float SpaceMapCamAngle;
		/* 0x5A74 */ public float SpaceMapCamDistance;
		/* 0x5A78 */ public float SpaceMapShipScaleMin;
		/* 0x5A7C */ public float SpaceMapLightPitch;
		/* 0x5A80 */ public float SpaceMapLightYaw;
		/* 0x5A90 */ public Colour SpaceFriendlyShipLineColour;
		/* 0x5AA0 */ public Colour SpaceEnemyShipLineColour;
		/* 0x5AB0 */ public Vector3f SpaceMapPosScaler;
		/* 0x5AC0 */ public Colour SpaceMapAttackColour;
		/* 0x5AD0 */ public Colour SpaceMapOtherPlayerColour;
		/* 0x5AE0 */ public Colour SpaceMapThreatColour;
		/* 0x5AF0 */ public Colour SpaceMapNeutralColour;
		/* 0x5B00 */ public Colour SpaceMapDeathPointColour;
        /* 0x5B10 */ public GcSpaceMapObjectData SpaceMapMarkerData;
        /* 0x5B40 */ public GcSpaceMapObjectData SpaceMapPlanetData;
        /* 0x5B70 */ public GcSpaceMapObjectData SpaceMapStationData;
        /* 0x5BA0 */ public GcSpaceMapObjectData SpaceMapNexusData;
        /* 0x5BD0 */ public GcSpaceMapObjectData SpaceMapShipData;
        /* 0x5C00 */ public GcSpaceMapObjectData SpaceMapFreighterData;
        /* 0x5C30 */ public GcSpaceMapObjectData SpaceMapPulseEncounterData;
        /* 0x5C60 */ public Vector2f HUDTargetHealthOffset;
        /* 0x5C68 */ public Vector2f HUDTargetHealthSize;
        /* 0x5C70 */ public Vector2f HUDTargetHealthIconOffset;
        /* 0x5C78 */ public float HUDTargetHealthIconSize;
        /* 0x5C7C */ public float HUDTargetHealthDangerTime;
        /* 0x5C80 */ public float HUDTargetMarkerOffset;
        /* 0x5C84 */ public float HUDTargetMarkerSize;
        /* 0x5C88 */ public float HUDTargetIconOffset;
        /* 0x5C8C */ public float HUDTargetIconSize;
        /* 0x5C90 */ public float HUDMarkerOffset;
        /* 0x5CA0 */ public Colour HUDMarkerColour;
        /* 0x5CB0 */ public Colour HUDSpaceshipColour;
        /* 0x5CC0 */ public Colour HUDRelicMarkerColourDiscovered;
        /* 0x5CD0 */ public Colour HUDRelicMarkerColourUnknown;
        /* 0x5CE0 */ public Colour HUDOutpostColour;
        /* 0x5CF0 */ public Vector2f HUDMarkerPrimaryIndicatorOffset;
        /* 0x5CF8 */ public Vector2f HUDMarkerCompassPrimaryIndicatorOffset;
        /* 0x5D00 */ public NMSString0x100 HUDMarkerIcon;
        /* 0x5E00 */ public NMSString0x100 HUDMarkerPrimaryIndicatorIcon;
        /* 0x5F00 */ public NMSString0x100 HUDMarkerColourIcon;
        /* 0x6000 */ public NMSString0x100 HUDPointIcon;
        /* 0x6100 */ public NMSString0x100 HUDSpaceshipIcon;
        /* 0x6200 */ public NMSString0x100 HUDSaveIcon;
        /* 0x6300 */ public NMSString0x100 HUDDeathPointIcon;
        /* 0x6400 */ public NMSString0x100 HUDHexAnimIcon;
        /* 0x6500 */ public NMSString0x100 HUDCircleAnimIcon;
        /* 0x6600 */ public float HUDMarkerAnimSpeed;
        /* 0x6604 */ public float HUDMarkerAnimScale;
        /* 0x6608 */ public float HUDMarkerAnimOffset;
        /* 0x660C */ public float HUDMarkerAnimLoopTime;
        /* 0x6610 */ public TkCurveType HUDMarkerAnimAlphaCurve;
        /* 0x6614 */ public TkCurveType HUDMarkerAnimCurve;
        /* 0x6618 */ public float HUDMarkerPrimaryIndicatorSize;
        /* 0x661C */ public float HUDMarkerHoverAngleTestGround;
        /* 0x6620 */ public float HUDNetworkMarkerHoverAngleTestGround;
        /* 0x6624 */ public float HUDMarkerWideHoverAngleTest;
        /* 0x6628 */ public float HUDMarkerHoverAngleTestShip;
        /* 0x662C */ public float HUDMarkerHoverShowLargeAngleTest;
        /* 0x6630 */ public float HUDNetworkMarkerHoverShowLargeAngleTest;
        /* 0x6634 */ public float HUDMarkerShipOffsetMaxDist;
        /* 0x6638 */ public float HUDMarkerShipOffsetMinDist;
        /* 0x663C */ public float HUDMarkerNearFadeDistance;
        /* 0x6640 */ public float HUDMarkerNearFadeRange;
        /* 0x6644 */ public float HUDMarkerFarDistance;
        /* 0x6648 */ public float HUDMarkerFarFadeRange;
        /* 0x664C */ public float HUDMarkerScalerMin;
        /* 0x6650 */ public float HUDMarkerScalerRange;
        /* 0x6654 */ public float HUDMarkerScalerSizeMin;
        /* 0x6658 */ public float HUDMarkerScalerSizeMax;
        /* 0x665C */ public float HUDMarkerHorizonBlendRange;
        /* 0x6660 */ public float HUDMarkerAlpha;
        /* 0x6664 */ public float HUDMarkerModelFadeRange;
        /* 0x6668 */ public float HUDMarkerModelFadeMinHeight;
        /* 0x666C */ public float HUDMarkerShowActualIconDistance;
        /* 0x6670 */ public float HUDMarkerShowActualSpaceIconDistance;
        /* 0x6674 */ public float HUDMarkerActiveTime;
        /* 0x6678 */ public TkCurveType HUDMarkerActiveCurve;
        /* 0x667C */ public float HUDMarkerIconHoverMinScale;
        /* 0x6680 */ public float AltimeterResolution;
        /* 0x6684 */ public float AltimeterLineSpacing;
        /* 0x6688 */ public float AltimeterWidth;
        /* 0x668C */ public float AltimeterMin;
        /* 0x6690 */ public float AltimeterMax;
        /* 0x6694 */ public float AltimeterTextSize;
        /* 0x6698 */ public float AltimeterMinValue;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x669C */ public byte[] Padding669C;
        /* 0x66A0 */ public Colour AltimeterBandColour1;
        /* 0x66B0 */ public Colour AltimeterBandColour2;
        /* 0x66C0 */ public Colour AltimeterColour1;
        /* 0x66D0 */ public Colour AltimeterColour2;
        /* 0x66E0 */ public float LockOnMarkerSize;
        /* 0x66E4 */ public float LockOnMarkerSizeLock;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x66E8 */ public byte[] Padding66E8;
        /* 0x66F0 */ public Colour LockOnMarkerActiveColour;
        /* 0x6700 */ public float MissileIconAttackPulseTime;
        /* 0x6704 */ public float MissileIconAttackPulseAmount;
        /* 0x6708 */ public float NGuiModelRotationDegreesX;
        /* 0x670C */ public float NGuiModelRotationDegreesY;
        /* 0x6710 */ public float NGuiModelRotationDegreesZ;
        /* 0x6714 */ public float NGuiModelViewDistanceGlobal;
        /* 0x6718 */ public float NGuiModelViewDistanceSuitPage;
        /* 0x671C */ public float NGuiModelViewDistanceWeaponPage;
        /* 0x6720 */ public float NGuiModelViewDistanceShipPage;
        /* 0x6724 */ public float NGuiModelViewDistanceDiscoveryPage;
        /* 0x6728 */ public float NGuiModelViewFov;
        /* 0x672C */ public float NGuiModelViewCdSmoothTime;
        /* 0x6730 */ public float NGuiAltPlacementDistanceScrollSpeed;
        /* 0x6734 */ public float NGuiPlacementAngleScrollSpeed;
        /* 0x6738 */ public float NGuiModelViewFractionOfBBHeightAboveReflectivePlane;
        [NMS(Size = 0x04, Ignore = true)]
        /* 0x673C */ public byte[] Padding673C;
        /* 0x6740 */ public Vector4f NGuiModelTranslationFactors;
        /* 0x6750 */ public Vector4f NGuiModelTranslationFactorsInteraction;
        /* 0x6760 */ public Vector4f NGuiThumbnailModelTranslationFactors;
        /* 0x6770 */ public float NGuiThumbnailModelRotationDegreesY;
        /* 0x6774 */ public float NGuiThumbnailModelViewDistance;
        /* 0x6778 */ public float NGuiCursorOffsetMultiplier;
        /* 0x677C */ public float NGuiActiveAreaOffsetTime;
        /* 0x6780 */ public Vector2f NGuiMin2DParallax;
        /* 0x6788 */ public Vector2f NGuiMax2DParallax;
        /* 0x6790 */ public Vector2f NGuiModelParallax;
        /* 0x6798 */ public Vector2f NGuiShipInteractParallax;
        /* 0x67A0 */ public Vector2f InteractionWorldParallax;
        /* 0x67A8 */ public float TargetParallaxMouseMultiplier;
        /* 0x67AC */ public float TargetParallaxMaintenancePageMultiplier;
        /* 0x67B0 */ public float NGuiModelViewFadeInAfterRenderTime;
        /* 0x67B4 */ public TkCurveType NGuiModelViewFadeInAfterRenderCurve;
        /* 0x67B8 */ public bool NGuiUseSeparateLayersForModelAndReflection;
        [NMS(Size = 0x03, Ignore = true)]
        /* 0x67B9 */ public byte[] Padding67B9;
        /* 0x67BC */ public GcDiscoveryHelperTimings DiscoveryHelperTimings;
        /* 0x67C8 */ public GcHUDStartupTable IntroTiming;
        /* 0x6848 */ public GcInventorySlotActionData InstallTechSlotAction;
        /* 0x6864 */ public GcInventorySlotActionData BuildProductSlotAction;
        /* 0x6880 */ public GcInventorySlotActionData ChargeSlotAction;
        /* 0x689C */ public GcInventorySlotActionData RepairSlotAction;
        /* 0x68B8 */ public GcInventorySlotActionData NewSlotRevealAction;
        /* 0x68D4 */ public GcInventorySlotActionData NewSlotPulseAction;
        /* 0x68F0 */ public GcInventorySlotActionData InventoryHintAction;
        /* 0x690C */ public float ReportBaseFlashTime;
        /* 0x6910 */ public float ReportBaseFlashIntensity;
        /* 0x6914 */ public float ReportBaseFlashDelay;
        /* 0x6918 */ public int ReportBaseTexWidth;
        /* 0x691C */ public int ReportBaseTexHeight;
        /* 0x6920 */ public float ReportCameraSpeed;
        /* 0x6924 */ public float AmbientModeFadeTime;
        /* 0x6928 */ public bool HideQuickMenuControls;
        /* 0x6929 */ public bool QuickMenuAllowCycle;
        /* 0x692C */ public float TextChatMaxDisplayTime;
        /* 0x6930 */ public float TextChatStayBigAfterTextInput;
        /* 0x6934 */ public int BuildingShopMaxItems;
        /* 0x6938 */ public float ShipScreenTexScale;
        /* 0x693C */ public float MultiplayerTeleportEffectDisappearTime;
        /* 0x6940 */ public float MultiplayerTeleportEffectAppearTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x6944 */ public byte[] EndPadding;
    }
}