using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0x6A30, GUID = 0x5F55C0B9CE779283)]
    public class GcUIGlobals : NMSTemplate
    {
        /* 0x0 */ public int ForceOpenHazardProtInventoryThreshold;
		/* 0x4 */ public float PlanetDataExtraRadius;
		/* 0x8 */ public float StackSizeRateChangeRate;
		/* 0xC */ public float StackSizeChangeMinRate;
		/* 0x10 */ public float StackSizeChangeMaxRate;
		/* 0x14 */ public float ClosestDoorMarkerBuffer;
		/* 0x18 */ public bool SkipShopIntro;
		/* 0x1C */ public float ZoomFactorOverride;
		/* 0x20 */ public float PlacedMarkerFadeTime;
		/* 0x24 */ public float LoadingTravelDistance;
		/* 0x28 */ public float LoadingScreenTravelSpeed;
		/* 0x2C */ public float LoadingScreenTime;
		/* 0x30 */ public float OSDMessagePauseOffscreenAngle;
		/* 0x34 */ public float QuickMenuCentrePos;
		/* 0x38 */ public float QuickMenuSideOffset;
		/* 0x3C */ public float QuickMenuCentreSideOffset;
		/* 0x40 */ public float InWorldInteractLabelScale;
		/* 0x44 */ public float InWorldScreenScaleDistance;
		/* 0x48 */ public Vector2f InWorldInteractLabelAlignment;
		/* 0x50 */ public Vector3f InWorldInteractLabelCentreOffset;
		/* 0x60 */ public Vector3f InWorldInteractLabelTopOffset;
		/* 0x70 */ public Vector3f InWorldInteractLabelLineOffset;
		/* 0x80 */ public float InWorldInteractLabelMinHeadOffset;
		/* 0x84 */ public float InWorldInteractLabelNearDistance;
		/* 0x88 */ public float InWorldInteractLabelNearRange;
		/* 0x8C */ public float InWorldInteractLabelFarDistance;
		/* 0x90 */ public float InWorldInteractLabelFarRange;
		/* 0x94 */ public float BinocularScreenOffset;
		/* 0x98 */ public float BinocularScreenScale;
		/* 0x9C */ public float BinocularMarkerSideAngle;
		/* 0xA0 */ public float BinocularMarkerUpAngle;
		/* 0xA4 */ public bool BinocularScanScreen;
		/* 0xA8 */ public float AlignmentRequiredToDisableFrostedGlass;
		/* 0xB0 */ public Vector3f BinocularPanelLinePointOffset;
		/* 0xC0 */ public float FrontendOffsetVR;
		/* 0xC4 */ public float ProjectorScale;
		/* 0xC8 */ public float CockpitGlassFrostTime;
		/* 0xCC */ public float CockpitGlassDefrostTime;
		/* 0xD0 */ public float TextPrintoutMultiplier;
		/* 0xD4 */ public float TextPrintoutMultiplierAlien;
		/* 0xD8 */ public bool EnableHandMenuButtons;
		/* 0xD9 */ public bool AllowInWorldDebugBorders;
		/* 0xDC */ public Vector2f MarkerDistanceVRAlignment;
		/* 0xE4 */ public float CompassIconOffsetVR;
		/* 0xE8 */ public float LowerHelmetScreenScale;
		/* 0xEC */ public float LowerHelmetScreenPitch;
		/* 0xF0 */ public Vector3f LowerHelmetScreenOffset;
		/* 0x100 */ public float InWorldScreenMinScreenDistance;
		/* 0x104 */ public float InWorldScreenForwardOffset;
		/* 0x108 */ public float InWorldNGuiScreenScale;
		/* 0x110 */ public Vector3f InWorldNGuiScreenRotation;
		/* 0x120 */ public Vector2f InWorldNGuiParallax;
		/* 0x128 */ public Vector2f InWorldGameGuiAlignment;
		/* 0x130 */ public int InWorldInteractLabelWidth;
		/* 0x134 */ public int InWorldInteractLabelHeight;
        [NMS(Size = 0x20)]
		/* 0x138 */ public string VRDistanceWarningUIFile;
		/* 0x158 */ public bool ShowVRDistanceWarning;
		/* 0x160 */ public Vector3f FaceLockedScreenOffset;
		/* 0x170 */ public int VRFaceLockedScreenWidth;
		/* 0x174 */ public int VRFaceLockedScreenHeight;
		/* 0x178 */ public bool OnlyShowEjectHandlesInVR;
		/* 0x17C */ public int CompassScreenWidth;
		/* 0x180 */ public int CompassScreenHeight;
		/* 0x184 */ public float CompassLineContractionStartAngle;
		/* 0x188 */ public float CompassLineContractionEndAngle;
		/* 0x18C */ public float CompassLineContractionTargetAngle;
		/* 0x190 */ public int CompassLineNumNotches;
		/* 0x194 */ public float CompassLineThickness;
		/* 0x198 */ public float CompassLineOffset;
		/* 0x19C */ public float CompassLineNotchAngleRange;
		/* 0x1A0 */ public float CompassLineNotchThickness;
		/* 0x1A4 */ public float CompassLineNotchLength;
		/* 0x1A8 */ public bool EnableHandMenuDebug;
		/* 0x1AC */ public float HandControlMenuCursorScale;
		/* 0x1B0 */ public float QuickMenuCursorScale;
		/* 0x1B4 */ public float QuickMenuAlpha;
		/* 0x1B8 */ public float HandScreenGraphicsWidth;
		/* 0x1BC */ public float HandScreenGraphicsHeight;
		/* 0x1C0 */ public float HandScreenNearActivateDistance;
		/* 0x1C4 */ public float HandButtonRadius;
		/* 0x1C8 */ public float HandButtonRadiusTouch;
		/* 0x1CC */ public float HandButtonRadiusTouchNear;
		/* 0x1D0 */ public float HandButtonRadiusTouchNearActive;
		/* 0x1D4 */ public float HandButtonPostClickTime;
		/* 0x1D8 */ public float HandButtonReleaseThreshold;
		/* 0x1DC */ public float HandButtonReleaseThresholdInit;
		/* 0x1E0 */ public float HandButtonCursorScale;
		/* 0x1E4 */ public float HandButtonPushDistance;
		/* 0x1E8 */ public float HandButtonNearDistance;
		/* 0x1EC */ public float HandButtonRadiusClick;
		/* 0x1F0 */ public float HandButtonClickTime;
		/* 0x1F4 */ public float HandButtonTouchReturnTime;
		/* 0x1F8 */ public float HandButtonFrontendCursorScale;
		/* 0x1FC */ public float HandButtonThickness;
		/* 0x200 */ public float HandButtonDotRadius;
		/* 0x204 */ public float HandButtonPulseRadius;
		/* 0x208 */ public float HandButtonPulseThickness;
		/* 0x20C */ public float ShipSideScreenHeight;
		/* 0x210 */ public float SolidPointerScale;
		/* 0x214 */ public float SolidPointerLengthScale;
		/* 0x218 */ public float SolidPointerMaxLength;
		/* 0x21C */ public float InWorldInteractionScreenScale;
		/* 0x220 */ public float InWorldNPCInteractionScreenScale;
		/* 0x224 */ public bool EnableCraftingTree;
		/* 0x225 */ public bool QuickMenuEnableSwipe;
		/* 0x228 */ public float QuickMenuSwipeHeightMin;
		/* 0x22C */ public float QuickMenuSwipeHeightMax;
		/* 0x230 */ public float BuildMenuItemNavAnimTime;
		/* 0x234 */ public float BuildMenuItemNextNavAnimTime;
		/* 0x238 */ public float BuildMenuItemNextNavAnimWait;
		/* 0x23C */ public float QuickMenuInteractAdjustX;
		/* 0x240 */ public float QuickMenuInteractAdjustY;
		/* 0x244 */ public int QuickMenuScreenWidth;
		/* 0x248 */ public int QuickMenuScreenHeight;
		/* 0x24C */ public float QuickMenuHighlightRate;
		/* 0x250 */ public float HandControlButtonSize;
		/* 0x254 */ public float HandControlPointMargin;
		/* 0x258 */ public float HandControlPointActiveMargin;
		/* 0x25C */ public float HandControlMenuMoveDistance;
		/* 0x260 */ public float HandControlMenuMoveDistanceScroll;
		/* 0x264 */ public float HandControlMenuMoveDistanceVertical;
		/* 0x268 */ public float HandControlMenuMoveActionDistance;
		/* 0x26C */ public float HandControlMenuAngle;
		/* 0x270 */ public float HandControlMenuSurfaceOffset;
		/* 0x274 */ public float HandControlMenuSelectRadius;
		/* 0x278 */ public float HandControlMenuSelectRadius1;
		/* 0x27C */ public float HandControlMenuSelectRadius2;
		/* 0x280 */ public float HandControlTopMenuSelectRadius;
		/* 0x284 */ public int HandScreenWeaponWidth;
		/* 0x288 */ public int HandScreenWeaponHeight;
		/* 0x28C */ public int HandScreenWidth;
		/* 0x290 */ public int HandScreenHeight;
		/* 0x2A0 */ public Colour QuickMenuSelectedItemColour1;
		/* 0x2B0 */ public Colour QuickMenuSelectedItemColour2;
		/* 0x2C0 */ public TkModelRendererData ShipThumbnailModelView;
		/* 0x370 */ public TkModelRendererData PetThumbnailModelView;
		/* 0x420 */ public TkModelRendererData MultitoolThumbnailModelView;
		/* 0x4D0 */ public TkModelRendererData LargeMultitoolThumbnailModelView;
		/* 0x580 */ public Colour FrontendCursorBackgroundColour;
		/* 0x590 */ public float NGuiHmdOffset;
		/* 0x594 */ public float HmdFramerateScreenPitch;
		/* 0x5A0 */ public Vector3f HmdFramerateScreenOffset;
		/* 0x5B0 */ public float CrosshairScaleHmd;
		/* 0x5B4 */ public float CrosshairOffsetHmd;
		/* 0x5B8 */ public float CrosshairOffsetHmdUp;
		/* 0x5BC */ public int CrosshairScreenWidth;
		/* 0x5C0 */ public int CrosshairScreenHeight;
		/* 0x5C4 */ public float HUDMarkerHoverAngleTestGroundHmd;
		/* 0x5C8 */ public float HUDMarkerWideHoverAngleTestHmd;
		/* 0x5CC */ public bool InteractionInWorldPlayerCamAlways;
		/* 0x5D0 */ public float InteractionInWorldPitchDistance;
		/* 0x5D4 */ public float InteractionInWorldMinScreenDistance;
		/* 0x5D8 */ public float InteractionInWorldSeatedNPCHeightAdjust;
		/* 0x5DC */ public float TravelTargetRadius;
		/* 0x5E0 */ public float TravelLineThickness;
		/* 0x5F0 */ public Colour TravelLineColour;
		/* 0x600 */ public Colour TravelLineTooFarColour;
		/* 0x610 */ public Colour TravelLineTooSteepColour;
		/* 0x620 */ public Colour TravelLineInvalidColour;
		/* 0x630 */ public Colour TravelLineNotAllowedColour;
		/* 0x640 */ public Colour TravelTargetColour;
		/* 0x650 */ public bool AlwaysCloseQuickMenu;
		/* 0x651 */ public bool UseWorldNodesForRepair;
		/* 0x652 */ public bool RepairTechUseTechIcon;
		/* 0x653 */ public bool DebugMissionLogText;
		/* 0x654 */ public bool DebugShowMaintenanceScreenCentre;
		/* 0x655 */ public bool DebugPopupSizes;
		/* 0x656 */ public bool DebugInventoryIndices;
        /* 0x657 */ public bool FixedInventoryIconPositions;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0658 */ public byte[] Padding658;
        /* 0x0660 */ public GcHUDEffectRewardData OSDRareItemRewardEffect;
        /* 0x06C0 */ public GcHUDEffectRewardData OSDEpicItemRewardEffect;
        /* 0x0720 */ public float OSDMessageQueueSpeedMultiplier;
        /* 0x0724 */ public int OSDMessageQueueMin;
        /* 0x0728 */ public int OSDMessageQueueMax;
        /* 0x072C */ public float PopupValueSectionBaseHeight;
        /* 0x0730 */ public float PopupValueSectionHeight;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x0734 */ public byte[] Padding734;
        /* 0x0740 */ public Colour ProcProductColourCommon;
        /* 0x0750 */ public Colour ProcProductColourUncommon;
        /* 0x0760 */ public Colour ProcProductColourRare;
        [NMS(Size = 0x3)]
        /* 0x0770 */ public Vector2f[] InventoryIconPositions;
        /* 0x0790 */ public Colour PickedItemBorderColour;
        /* 0x07A0 */ public Colour MultiplayerMissionParticipantsColour;
        [NMS(Size = 0x10)]
        /* 0x07B0 */ public string MultiplayerMissionInteractStartTrigger;
        [NMS(Size = 0x10)]
        /* 0x07C0 */ public string MultiplayerMissionInteractEndTrigger;
        /* 0x07D0 */ public float NotificationHazardMinTimeAfterRecharge;
        /* 0x07D4 */ public float LoadFadeInDefaultTime;
        /* 0x07D8 */ public float DroneIndicatorRadius;
        /* 0x07DC */ public float DroneIndicatorCentreRadiusMax;
        /* 0x07E0 */ public float DroneIndicatorCentreRadiusMin;
        /* 0x07E4 */ public float DroneIndicatorFadeRange;
        /* 0x07E8 */ public float WantedDetectMessageTime;
        /* 0x07EC */ public float WantedDetectMinTimeout;
        /* 0x07F0 */ public float TakeoffFuelMessageTime;
        /* 0x07F4 */ public float MarkerHorizonOffsetAngle;
        /* 0x07F8 */ public float MarkerHorizonMinOffset;
        /* 0x07FC */ public float MarkerHorizonApproachAngle;
        /* 0x0800 */ public float MarkerOffsetTypeAngle;
        /* 0x0804 */ public float MarkerOffsetTypeAngleBattle;
        /* 0x0808 */ public float MarkerOffsetTypeAngleBounty;
        /* 0x080C */ public float MarkerOffsetTypeAnglePlayerShip;
        /* 0x0810 */ public float MarkerHorizonOffPlanetLightBeamAngle;
        /* 0x0814 */ public float MarkerHorizonShipApproachOffset;
        /* 0x0818 */ public float TransferPopupCursorOffsetFactor;
        /* 0x081C */ public float ScannableIconMergeAngle;
        /* 0x0820 */ public float MissionObjectiveBaseHeight;
        /* 0x0824 */ public float MarkerTagAppearDelay;
        /* 0x0828 */ public Vector2f CompassCentre;
        /* 0x0830 */ public float CompassHeight;
        /* 0x0834 */ public float CompassWidth;
        /* 0x0838 */ public float CompassDistanceScaleMin;
        /* 0x083C */ public float CompassDistanceScaleRange;
        /* 0x0840 */ public float CompassDistanceSpaceScaleMin;
        /* 0x0844 */ public float CompassDistanceSpaceScaleRange;
        /* 0x0848 */ public float CompassDistanceScale;
        /* 0x084C */ public float CompassDistanceMaxAngle;
        /* 0x0850 */ public float CompassDistanceYOffset;
        /* 0x0854 */ public float CompassAngleClamp;
        /* 0x0858 */ public float CompassAngleFade;
        /* 0x085C */ public TkCurveType CompassCurve;
        /* 0x0860 */ public float CompassAngleClampSpace;
        /* 0x0864 */ public float BaseComplexityDangerFactor;
        /* 0x0868 */ public float BaseComplexityWarningFactor;
        /* 0x0870 */ public Colour BaseComplexityDefaultColour;
        /* 0x0880 */ public Colour BaseComplexityWarningColour;
        /* 0x0890 */ public Colour BaseComplexityDangerColour;
        /* 0x08A0 */ public float MarkerRingInnerRadius;
        /* 0x08A4 */ public float MarkerRingOuterRadius;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x08A8 */ public byte[] Padding8A8;
        /* 0x08B0 */ public Colour MarkerRingBGColour;
        /* 0x08C0 */ public float RepairTechRepairedWaitTime1;
        /* 0x08C4 */ public float RepairTechRepairedWaitTime2;
        /* 0x08C8 */ public float RepairTechRepairedMessageTime;
        /* 0x08CC */ public float TechPopupRepairLayerHeight;
        /* 0x08D0 */ public float TechPopupBuildLayerHeight;
        /* 0x08D4 */ public float TechPopupRequirementHeight;
        /* 0x08D8 */ public float DamageTrackArrowTime;
        /* 0x08DC */ public bool EnableBlackouts;
        /* 0x08E0 */ public float HUDMarkerObjectMinScreenDistance;
        /* 0x08E4 */ public float HUDMarkerDistanceOrTimeDistance;
        /* 0x08E8 */ public float MarkerComponentOffset;
        /* 0x08EC */ public float RepairTechLabelOffset;
        /* 0x08F0 */ public float MaintenanceIconFadeStart;
        /* 0x08F4 */ public float MaintenanceIconFadeTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x08F8 */ public byte[] Padding8F8;
        /* 0x0900 */ public TkModelRendererData RepairCamera;
        /* 0x09B0 */ public TkModelRendererData RepairWeaponCamera;
        /* 0x0A60 */ public TkModelRendererData RepairBackpackCamera;
        /* 0x0B10 */ public TkModelRendererData RepairShipCamera;
        /* 0x0BC0 */ public TkModelRendererData RepairShipCameraVR;
        [NMS(Size = 0x7, EnumType = typeof(GcVehicleType.VehicleTypeEnum))]
        /* 0x0C70 */ public TkModelRendererData[] VehicleTypeRepairCamera;
        /* 0x01140 */ public Vector2f BinocularsDiscoveryPos;
        /* 0x01150 */ public Colour InteractionLabelCostColour;
        /* 0x01160 */ public Colour InteractionLabelPickupColour;
        /* 0x01170 */ public Colour InteractionLabelPickupFillColour;
        /* 0x01180 */ public Vector2f PersonalRefinerInputPos;
        /* 0x01188 */ public Vector2f PersonalRefinerOutputPos;
        /* 0x01190 */ public TkMaterialResource RefinerPopupEmptyOutputIcon;
        /* 0x01214 */ public float RefinerPadStartTime;
        /* 0x01218 */ public float RefinerPadStartDecayTime;
        /* 0x0121C */ public float RefinerBeginDialInnerRadius;
        /* 0x01220 */ public float RefinerProgressDialInnerRadius;
        /* 0x01230 */ public Vector3f DefaultRefinerOffsetIn;
        /* 0x01240 */ public Vector3f DefaultRefinerOffsetOut;
        /* 0x01250 */ public Vector2f RefinerParallax;
        /* 0x01258 */ public Vector2f ModelViewWorldParallax;
        /* 0x01260 */ public Vector2f HUDPlayerSentinelPulseFreq;
        /* 0x01268 */ public Vector2f HUDPlayerSentinelPulseSize;
        /* 0x01270 */ public float HUDPlayerSentinelPulseWidth;
        /* 0x01274 */ public float HUDPlayerSentinelRangeFactor;
        /* 0x01278 */ public float HUDPlayerSentinelPulseScanFreq;
        /* 0x0127C */ public float HUDPlayerPhonePulseScanFreq;
        /* 0x01280 */ public float RefinerAutoCloseTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x01284 */ public byte[] Padding1284;
        /* 0x01290 */ public Colour RefinerBackgroundColour;
        /* 0x012A0 */ public Colour RefinerErrorBackgroundColour;
        /* 0x012B0 */ public Colour GridDisconnectedColour;
        /* 0x012C0 */ public Colour GridOnlineColour;
        /* 0x012D0 */ public Colour GridOfflineColour;
        /* 0x012E0 */ public Colour GridBackgroundNeutralColour;
        /* 0x012F0 */ public Colour GridBackgroundPositiveColour;
        /* 0x01300 */ public Colour GridBackgroundNegativeColour;
        /* 0x01310 */ public Colour TransferSendPopupColour;
        /* 0x01320 */ public float BountyMarkerOffset;
        /* 0x01324 */ public float TransitionOffset;
        /* 0x01328 */ public float PageTurnTime;
        /* 0x0132C */ public TkCurveType PageTurnCurve;
        /* 0x01330 */ public TkCurveType PageTurnFadeCurve;
        /* 0x01334 */ public float LowHealthShieldMin;
        /* 0x01338 */ public float LowHealthShieldFactor;
        /* 0x0133C */ public int MaxDialogCharSizeRoman;
        [NMS(Size = 0x20)]
        /* 0x01340 */ public string MaxDialogCharSizeRomanString;
        /* 0x01360 */ public int MaxDialogCharSizeIdeographic;
        [NMS(Size = 0x20)]
        /* 0x01364 */ public string MaxDialogCharSizeIdeographicString;
        /* 0x01384 */ public float ShipOverheatSwitchMessageWait;
        /* 0x01388 */ public float ShipOverheatSwitchMessageTime;
        /* 0x0138C */ public bool LeadTargetEnabled;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x0138D */ public byte[] Padding138D;
        /* 0x01390 */ public Vector2f SaveIconPosition;
        /* 0x01398 */ public float MissionStartEndTime;
        /* 0x0139C */ public float MissionStartEndOSDTime;
        /* 0x013A0 */ public float MissionStartEndOSDTimeProcedural;
        /* 0x013A4 */ public float StandingRewardOSDTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x013A8 */ public byte[] Padding13A8;
        /* 0x013B0 */ public Colour MissionOSDMessageBarColour;
        /* 0x013C0 */ public Colour NotificationDefaultColour;
        /* 0x013D0 */ public Colour NotificationDangerColour;
        /* 0x013E0 */ public Colour NotificationInfoColour;
        /* 0x013F0 */ public Colour NotificationUrgentColour;
        /* 0x01400 */ public float ShipDamageDirectionIndicatorRadius;
        /* 0x01404 */ public float ShipDamageDirectionIndicatorFadeRange;
        /* 0x01408 */ public float OnFootDamageDirectionIndicatorRadius;
        /* 0x0140C */ public float OnFootDamageDirectionIndicatorFadeRange;
        /* 0x01410 */ public float DamageDirectionIndicatorOnScreenRadiusMultiplier;
        /* 0x01414 */ public Vector2f DialogPageCursorOffset;
        /* 0x0141C */ public int MissionSpecificMissionPercent;
        /* 0x01420 */ public int MissionLoopCount;
        /* 0x01424 */ public int MissionSeedOffset;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x01428 */ public byte[] Padding1428;
        /* 0x01430 */ public Vector3f SpaceMapCockpitOffset;
		/* 0x01440 */ public float SpaceMapCockpitScale;
		/* 0x01444 */ public float SpaceMapCockpitScaleAdjustDropShip;
		/* 0x01448 */ public float SpaceMapCockpitScaleAdjustFighter;
		/* 0x0144C */ public float SpaceMapCockpitScaleAdjustScientific;
		/* 0x01450 */ public float SpaceMapCockpitScaleAdjustShuttle;
		/* 0x01454 */ public float SpaceMapCockpitScaleAdjustRoyal;
		/* 0x01458 */ public float SpaceMapCockpitScaleAdjustAlien;
		/* 0x0145C */ public float SpaceMapCockpitAngle;
        /* 0x01460 */ public float TargetDisplayScale;
        /* 0x01464 */ public float TargetDisplayShipScale;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x01468 */ public byte[] Padding1468;
        /* 0x01470 */ public Vector3f TargetDisplayShipOffset;
        /* 0x01480 */ public float TargetDisplayDamageFlashTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x01484 */ public byte[] Padding1484;
        /* 0x01490 */ public GcScanEffectData TargetDisplayScanEffect;
        /* 0x014E0 */ public bool ProgressiveDialogStyle;
        /* 0x014E4 */ public float CommunicatorMessageTime;
        /* 0x014F0 */ public Colour CommunicatorMessageColour;
        /* 0x01500 */ public float GridFlickerBaseAlpha;
        /* 0x01504 */ public float GridFlickerFreq;
        /* 0x01508 */ public float GridFlickerAmp;
        /* 0x0150C */ public float HUDMarkerLabelWidthMultiplier;
        /* 0x01510 */ public float HUDMarkerLabelBaseWidth;
        /* 0x01514 */ public float HUDMarkerLabelArriveDistance;
        /* 0x01518 */ public float HUDMarkerLabelDisplayDistance;
        /* 0x0151C */ public float HUDMarkerNonActiveMissionAlpha;
        /* 0x01520 */ public bool DebugMarkerLabels;
        [NMS(Size = 0xF, Ignore = true)]
        /* 0x01521 */ public byte[] Padding1521;
        /* 0x01530 */ public GcScanEffectData DebugEditorPreviewEffect;
        /* 0x01580 */ public bool ShowDamageNumbers;
        /* 0x01584 */ public float QuickMenuCloseTime;
        /* 0x01588 */ public float QuickMenuErrorTime;
        /* 0x0158C */ public float FrontendWaitResponse;
        /* 0x01590 */ public float FrontendWaitInitial;
        /* 0x01594 */ public float FrontendWaitInitialTerminal;
        /* 0x01598 */ public float FrontendWaitFadeTextOut;
        /* 0x0159C */ public float FrontendWaitFadeTextFrameOut;
        /* 0x015A0 */ public float FrontendWaitFadeProgressiveDialogOut;
        /* 0x015A4 */ public float FrontendWaitResponseOffset;
        /* 0x015A8 */ public float TalkBoxAlienTextSpeed;
        /* 0x015AC */ public float TalkBoxAlienTextTimeMin;
        /* 0x015B0 */ public float TalkBoxAlienTextTimeMax;
        /* 0x015B4 */ public float DescriptionTextDelay;
        /* 0x015B8 */ public float DescriptionTextSpeed;
        /* 0x015BC */ public float DescriptionTextSpeedProgressive;
        /* 0x015C0 */ public float DescriptionTextTimeMin;
        /* 0x015C4 */ public float DescriptionTextTimeMax;
        /* 0x015C8 */ public float ConsoleTextSpeed;
        /* 0x015CC */ public float ConsoleTextTimeMin;
        /* 0x015D0 */ public float ConsoleTextTimeMax;
        /* 0x015D4 */ public float HoverOffscreenBorder;
		/* 0x015D8 */ public float HoverOffscreenBorderVR;
		/* 0x015DC */ public float TransferSendOffscreenBorder;
		/* 0x015E0 */ public float TimedEventLookTime;
		/* 0x015E4 */ public float CreatureDistanceSize;
		/* 0x015E8 */ public float CreatureDistanceOffsetY;
		/* 0x015EC */ public float CreatureDistanceShadowOffset;
		/* 0x015F0 */ public float CreatureDistanceDisplayAngle;
		/* 0x015F4 */ public float CreatureDistanceFadeTime;
		/* 0x015F8 */ public float CreatureDistanceAlpha;
		/* 0x015FC */ public bool ShowOnscreenPredatorMarkers;
		/* 0x01600 */ public float DamageImpactMergeTime;
		/* 0x01604 */ public float DamageImpactTimeBetweenNumbers;
		/* 0x01608 */ public float DamageImpactMinDistance;
		/* 0x0160C */ public float DamagePerSecondSampleTime;
		/* 0x01610 */ public float DamageNumberTime;
		/* 0x01614 */ public float DamageNumberSizeInShip;
		/* 0x01618 */ public float DamageNumberSize;
		/* 0x0161C */ public float DamageNumberSizeCritMultiplier;
		/* 0x01620 */ public float DamageNumberSizeLaserMultiplier;
		/* 0x01624 */ public float DamageNumberLaserMinDamage;
		/* 0x01628 */ public float DamageNumberLaserMaxDamage;
        /* 0x0162C */ public float DamageNumberBlackAlpha;
        /* 0x01630 */ public float DamageNumberOutline;
        /* 0x01634 */ public float DamageNumberOutline2;
        /* 0x01638 */ public float DamageNumberOffsetX;
        /* 0x0163C */ public float DamageNumberOffsetY;
        /* 0x01640 */ public Vector2f DamageNumberSideSpeed;
        /* 0x01648 */ public float DamageNumberFadeIn;
        /* 0x0164C */ public float DamageNumberFadeOut;
        /* 0x01650 */ public float DamageNumberUpOffset;
        /* 0x01654 */ public TkCurveType DamageNumberUpCurve;
        /* 0x01660 */ public Colour DamageNumberCriticalColour;
        /* 0x01670 */ public Colour DamageNumberIneffectiveColour;
        /* 0x01680 */ public Colour DamageNumberIneffectiveWarningColour;
        /* 0x01690 */ public Colour PhotoModeSelectedColour;
        /* 0x016A0 */ public Colour PhotoModeUnselectedColour;
        /* 0x016B0 */ public Colour FuelBgColour;
        /* 0x016C0 */ public float PhotoModeValueAlpha;
        /* 0x016C4 */ public float PhotoModeTimeofDayChange;
        /* 0x016C8 */ public float FrigateIconOffset;
        /* 0x016CC */ public float CreatureIconOffset;
        /* 0x016D0 */ public float DelayBeforeHidingHangarAfterGalaxyMap;
        /* 0x016D4 */ public float DelayBeforeShowingHangarIntoGalaxyMap;
        /* 0x016D8 */ public float FreighterSummonTurn;
        /* 0x016DC */ public float FreighterSummonPitch;
        /* 0x016E0 */ public float FreighterSummonOffset;
        /* 0x016E4 */ public float FreighterSummonDelay;
        /* 0x016E8 */ public int FreighterSummonTurnNumTries;
        /* 0x016EC */ public float FreighterSummonTurnAngleIncrement;
        /* 0x016F0 */ public float FreighterSummonGridSize;
        /* 0x016F4 */ public float FreighterCommanderMarkerMinDistance;
        /* 0x016F8 */ public float FreighterBaseIconOffset;
        /* 0x016FC */ public float FreighterSurfaceMinAngle;
        /* 0x01700 */ public float FreighterSummonPulseRate;
        /* 0x01704 */ public float FreighterSummonPulseFadeAmount;
        /* 0x01708 */ public float FreighterSummonPlanetOffset;
        /* 0x0170C */ public float FreighterSummonLookTime;
        /* 0x01710 */ public float FreighterHighlightRange;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x01714 */ public byte[] Padding1714;
        /* 0x01720 */ public GcScanEffectData FreighterSummonScanEffect;
        /* 0x01770 */ public Colour FreighterSummonScanEffectColourBlocked;
        /* 0x01780 */ public Colour FreighterSummonScanEffectColourHighlight;
        /* 0x01790 */ public float PirateCountdownTime;
        /* 0x01794 */ public float PirateAttackIndicatorWidth;
        /* 0x01798 */ public float PirateAttackIndicatorRadius;
        /* 0x0179C */ public float PirateAttackProbeDisplayFinishFactor;
        /* 0x017A0 */ public float HazardArrowsLevel2Threshold;
        /* 0x017A4 */ public float HazardArrowsLevel3Threshold;
        /* 0x017A8 */ public float ArrowBounceLength;
        /* 0x017AC */ public float ArrowBounceRate;
        /* 0x017B0 */ public float ArrowBounceRightRate1;
        /* 0x017B4 */ public float ArrowBounceRightRate2;
        /* 0x017B8 */ public TkCurveType ArrowBounceRightCurve;
        /* 0x017BC */ public float ArrowBounceLeftRate1;
        /* 0x017C0 */ public float ArrowBounceLeftRate2;
        /* 0x017C4 */ public float ArrowBounceLeftRate3;
        /* 0x017C8 */ public TkCurveType ArrowBounceLeftCurve;
        /* 0x017CC */ public float PlanetScanDelayTime;
        /* 0x017D0 */ public float AlwaysShowIconFadeDistance;
        /* 0x017D4 */ public float AlwaysShowIconFadeRange;
        /* 0x017D8 */ public float FrigatePurchaseNotificationResetDistanceMultiplier;
        /* 0x017DC */ public float FrigateDamageIconVisibilityDistance;
        /* 0x017E0 */ public float FreighterLeaderIconDistance;
        /* 0x017E4 */ public float FreighterEntranceOffset;
        /* 0x017E8 */ public float ShipHeadsUpDisplayDistance;
        /* 0x017EC */ public float ShipHeadsUpLineFadeTime;
        /* 0x017F0 */ public float CrosshairAimTime;
        /* 0x017F4 */ public float CrosshairAimOffTime;
        /* 0x017F8 */ public float CrosshairInnerMinFade;
        /* 0x017FC */ public float CrosshairInnerMinFadeRange;
        /* 0x01800 */ public float CrosshairLeadScaleIn;
        /* 0x01804 */ public float CrosshairLeadInDelay;
        /* 0x01808 */ public float CrosshairLeadInTime;
        /* 0x0180C */ public float CrosshairLeadCornerOffset;
        /* 0x01810 */ public float CrosshairLeadTopOffset;
        /* 0x01814 */ public float CrosshairLeadTopLock;
        /* 0x01818 */ public float CrosshairLeadPulseSize;
        /* 0x0181C */ public TkCurveType CrosshairLeadScaleCurve;
        /* 0x01820 */ public float CrosshairSpringTime;
        /* 0x01824 */ public float CrosshairSpringAimTime;
        /* 0x01828 */ public float CrosshairLeadSpring;
        /* 0x0182C */ public float CrosshairLeadSpringOff;
        /* 0x01830 */ public float CrosshairLeadFadeRange;
        /* 0x01834 */ public float CrosshairLeadFadeSize;
        /* 0x01840 */ public Colour CrosshairLeadThreatColour;
        /* 0x01850 */ public Colour CrosshairLeadPassiveColour;
        /* 0x01860 */ public float CrosshairInterceptSize;
        /* 0x01864 */ public float CrosshairInterceptBaseSize;
        /* 0x01868 */ public float CrosshairInterceptCentreBaseSize;
        /* 0x0186C */ public float CrosshairInterceptSpringTime;
        /* 0x01870 */ public float CrosshairInterceptAlpha;
        /* 0x01874 */ public float CrosshairInterceptLockRange;
        /* 0x01878 */ public float CrosshairTargetLockSize;
        [NMS(Size = 0xd)]
        /* 0x0187C */ public float[] CrosshairTargetLockSizeSpecific;
		/* 0x018B0 */ public TkCurveType CrosshairTargetLockCurve;
        /* 0x018B4 */ public TkCurveType CrosshairTargetLockAlphaCurve;
        /* 0x018C0 */ public Colour CrosshairColour;
        /* 0x018D0 */ public TkHitCurveData CrosshairLeadHitCurve;
        /* 0x018E0 */ public TkHitCurveData ShootableHitCurve;
        /* 0x018F0 */ public int ControlScrollSteps;
        /* 0x018F4 */ public float ControlScrollDistance;
        /* 0x01900 */ public Colour SelectedControlColour;
        /* 0x01910 */ public Colour RemappedControlColour;
        /* 0x01920 */ public float CreatureRoutineMarkerTime;
        /* 0x01924 */ public int CreatureRoutineRegionsPerFrame;
        /* 0x01928 */ public float SpaceMarkersOffset;
        /* 0x0192C */ public float SpaceMarkersBattleOffset;
        /* 0x01930 */ public float LargeSpaceIconSize;
        /* 0x01934 */ public float SmallSpaceIconSize;
        /* 0x01938 */ public Vector2f TrackTypeIconOffset;
        /* 0x01940 */ public float TrackTypeIconSize;
        /* 0x01944 */ public float TrackPrimaryCentreOffset;
        /* 0x01948 */ public float TrackTimerAlpha;
        /* 0x0194C */ public float TrackTimerRadarPulseSize;
        /* 0x01950 */ public float TrackTimerIconOuterRadius;
        /* 0x01954 */ public float TrackTimerIconInnerRadius;
        /* 0x01958 */ public float TrackTimerIconExclaimRadius;
        /* 0x0195C */ public float TrackGlowBase;
        /* 0x01960 */ public float TrackHitPulseTime;
        /* 0x01964 */ public float TrackGlowCritical;
        /* 0x01968 */ public float TrackGlowHit;
        /* 0x0196C */ public float MissileCentreOffset;
        /* 0x01970 */ public float TrackMissileTargetPulseRate;
        /* 0x01974 */ public float TrackScaleCritical;
        /* 0x01978 */ public float TrackScaleHit;
        /* 0x0197C */ public float TrackLeadTargetInScale;
        /* 0x01980 */ public float TrackReticuleScale;
        /* 0x01984 */ public float TrackReticuleAngle;
        /* 0x01988 */ public float TrackReticuleInTime;
        /* 0x0198C */ public float TrackReticuleInactiveTime;
        /* 0x01990 */ public float TrackReticuleRandomTime;
        /* 0x01994 */ public float TrackReticuleRandomDelay;
        /* 0x01998 */ public TkCurveType TrackReticuleInCurve;
        /* 0x0199C */ public TkCurveType TrackReticuleInAngleCurve;
        /* 0x019A0 */ public float CreatureReticuleScale;
        /* 0x019A4 */ public TkCurveType CreatureReticuleScaleCurve;
        /* 0x019A8 */ public TkCurveType CreatureReticuleAlphaCurve;
        /* 0x019AC */ public bool CreatureInteractLabelUseBB;
        /* 0x019B0 */ public float CreatureInteractLabelOffsetY;
        /* 0x019B4 */ public float HUDPlayerTrackNoSightPulse;
        /* 0x019B8 */ public float HUDPlayerTrackTimerStart;
        /* 0x019BC */ public float HUDPlayerTrackTimerStartFade;
        /* 0x019C0 */ public float HUDPlayerTrackTimerEnd;
        /* 0x019C4 */ public float HUDPlayerTrackTimerPulseRate;
        /* 0x019C8 */ public TkCurveType TrackCritCurve;
        /* 0x019CC */ public Vector2f TrackCriticalHitOffset;
        /* 0x019D4 */ public float TrackCriticalHitSize;
        /* 0x019D8 */ public float TrackCriticalPulseTime;
        /* 0x019DC */ public float ThirdPersonCrosshairDistance;
        /* 0x019E0 */ public float ThirdPersonCrosshairCircle1Distance;
        /* 0x019E4 */ public float ThirdPersonCrosshairCircle2Distance;
        /* 0x019E8 */ public float HUDPlayerTrackArrowShipLabelOffset;
        /* 0x019EC */ public float HUDPlayerTrackArrowIconPulseTime;
        /* 0x019F0 */ public float HUDPlayerTrackArrowIconShowTime;
        /* 0x019F4 */ public float HUDPlayerTrackArrowIconFadeTime;
        /* 0x019F8 */ public Vector2f HUDPlayerTrackArrowIconPulseSize;
        /* 0x01A00 */ public float HUDPlayerTrackArrowIconPulseWidth1;
        /* 0x01A04 */ public float HUDPlayerTrackArrowIconPulseWidth2;
        /* 0x01A08 */ public float HUDPlayerTrackArrowIconPulse2Alpha;
        /* 0x01A0C */ public float HUDPlayerTrackArrowIconFadeDist;
        /* 0x01A10 */ public float HUDPlayerTrackArrowIconFadeRange;
        /* 0x01A14 */ public float HUDPlayerTrackArrowPulseOffset;
        /* 0x01A18 */ public float HUDPlayerTrackArrowPulseRate;
        /* 0x01A1C */ public Vector2f HUDPlayerTrackIconOffset;
        /* 0x01A24 */ public float ShipFullscreenDamper;
        /* 0x01A28 */ public float ShipDesatDamper;
        /* 0x01A2C */ public float ScanEventArrowShipFadeRange;
        /* 0x01A30 */ public float ScanEventArrowShipFadeDistance;
        /* 0x01A34 */ public float ScanEventArrowPlayerFadeRange;
        /* 0x01A38 */ public float ScanEventArrowPlayerFadeDistance;
        /* 0x01A3C */ public float ScanEventArrowOffsetMultiplier;
        /* 0x01A40 */ public float ScanEventArrowOffsetMultiplierOneEvent;
        /* 0x01A44 */ public float ScanEventArrowSecondaryAlpha;
        /* 0x01A48 */ public GcAudioWwiseEvents ScanEventIconAudio;
        /* 0x01A4C */ public TkNGuiRectanglePulseEffect PulseBarData;
        /* 0x01A60 */ public TkNGuiRectanglePulseEffect PulseIconData;
        /* 0x01A80 */ public Colour PulseDamageColour;
        /* 0x01A90 */ public Colour PulseAlertColour;
        /* 0x01AA0 */ public float TechDisplayDelayTime;
        /* 0x01AA4 */ public float CriticalMessageTime;
        /* 0x01AA8 */ public int NumDeathQuotes;
        /* 0x01AAC */ public bool EnableKanaConversion;
        /* 0x01AB0 */ public float HUDDisplayTime;
        /* 0x01AB4 */ public float HUDPlayerTrackDangerPulse;
        /* 0x01AB8 */ public float HUDPlayerTrackArrowTextOffset;
        /* 0x01ABC */ public float HUDPlayerTrackArrowTextHeight;
        /* 0x01AC0 */ public Colour HUDPlayerTrackArrowTextColour;
        /* 0x01AD0 */ public float HUDPlayerTrackArrowHealthOffset;
        /* 0x01AD4 */ public Vector2f HUDPlayerTrackArrowHealthSize;
        /* 0x01ADC */ public float HUDPlayerTrackArrowHealthGlowOffset;
        /* 0x01AE0 */ public Vector2f HUDPlayerTrackArrowHealthGlowSize;
        /* 0x01AE8 */ public float HUDPlayerTrackArrowTargetDist;
        /* 0x01AEC */ public float HUDPlayerTrackArrowOffset;
        /* 0x01AF0 */ public float HUDPlayerTrackArrowScreenBorder;
        /* 0x01AF4 */ public float HUDPlayerTrackArrowSize;
        /* 0x01AF8 */ public float HUDPlayerTrackArrowSizeMin;
        /* 0x01AFC */ public float HUDPlayerTrackArrowSizeMax;
        /* 0x01B00 */ public float HUDPlayerTrackArrowIconSize;
        /* 0x01B04 */ public float HUDPlayerTrackArrowSmallIconSize;
        /* 0x01B08 */ public float HUDPlayerTrackArrowArrowSize;
        /* 0x01B0C */ public float HUDPlayerTrackArrowDotSize;
        /* 0x01B10 */ public Colour HUDPlayerTrackArrowDotColour;
        /* 0x01B20 */ public Colour HUDPlayerTrackArrowDotColourPolice;
        /* 0x01B30 */ public Colour HUDPlayerTrackArrowDotColourPirate;
        /* 0x01B40 */ public Colour HUDWarningColour;
        /* 0x01B50 */ public Colour HUDNotifyColour;
        /* 0x01B60 */ public float HUDPlayerTrackArrowMinFadeDist;
        /* 0x01B64 */ public float HUDPlayerTrackArrowFadeRange;
        /* 0x01B68 */ public float GalaxyMapRadialBorder;
        /* 0x01B6C */ public float GalaxyMapRadialTargetDist;
        /* 0x01B70 */ public float IconBackgroundAlpha;
        /* 0x01B74 */ public float WantedLevelWitnessPulseRate;
        /* 0x01B78 */ public float WantedLevelWitnessOffset;
        /* 0x01B7C */ public float WantedLevelTimeoutPulseRate;
        /* 0x01B80 */ public float WantedLevelWitnessAlpha;
        /* 0x01B84 */ public float WantedLevelScanAlpha;
        /* 0x01B88 */ public float WantedLevelScannedRate;
         [NMS(Size = 0x37)]
        /* 0x1B8C */ public NMSString0x80[] StatIcons;
        /* 0x370C */ public bool ShowJetpackNotificationForNonTerrain;
        /* 0x3710 */ public float StatsMessageDelayTime;
        /* 0x3714 */ public int NotificationsResourceExtractHintCount;
        /* 0x3718 */ public float NotificationStaminaHintDistanceWalked;
        /* 0x371C */ public float NotificationMinVisibleTime;
        /* 0x3720 */ public float NotificationHazardSafeThreshold;
        /* 0x3724 */ public float NotificationHazardTimer;
        /* 0x3728 */ public float NotificationInteractHintStartTime;
        /* 0x372C */ public float NotificationBuildHintStartTime;
        /* 0x3730 */ public float NotificationJetpackTime;
        /* 0x3734 */ public float NotificationShieldTime;
        /* 0x3738 */ public float NotificationShipBoostTime;
        /* 0x373C */ public float NotificationShipBoostTimeVR;
        /* 0x3740 */ public float NotificationCantFireTime;
        /* 0x3744 */ public float NotificationDangerTime;
        /* 0x3748 */ public float NotificationScanTime;
        /* 0x374C */ public float NotificationScanTimeCutoff;
        /* 0x3750 */ public float NotificationMessageCycleTime;
        /* 0x3754 */ public float NotificationMaxPageHintTime;
        /* 0x3758 */ public float NotificationShipJumpMinTime;
        /* 0x375C */ public float NotificationShipJumpReminderTime;
        /* 0x3760 */ public float NotificationShipJumpReminderTutorial;
        /* 0x3764 */ public float NotificationShipBoostMinTime;
        /* 0x3768 */ public float NotificationShipBoostReminderTime;
        /* 0x376C */ public float NotificationShipBoostReminderTimeTutorial;
        /* 0x3770 */ public float LandNotifySpeedThreshold;
        /* 0x3774 */ public float LandNotifyHeightThreshold;
        /* 0x3778 */ public float LandNotifyTimeThreshold;
        /* 0x377C */ public float NotificationTimeBeforeHeridiumMarker;
        /* 0x3780 */ public float NotificationUrgentMessageTime;
        /* 0x3784 */ public float NotificationGoToSpaceStationWait;
        /* 0x3788 */ public float NotificationMonolithMissionWait;
        /* 0x378C */ public float NotificationFinalMissionWait;
        /* 0x3790 */ public float NotificationWaypointReachDistance;
        /* 0x3794 */ public float NotificationBridgeReachDistance;
        /* 0x3798 */ public float NotificationDiscoveryIdleTime;
        /* 0x379C */ public float NotificationInfoIdleTime;
        /* 0x37A0 */ public float NotificationNewTechIdleTime;
        /* 0x37A4 */ public float NotificationScanEventMissionIdleTime;
        /* 0x37A8 */ public float NotificationDeviceIdleTime;
        /* 0x37AC */ public float NotificationMissionHintTime;
        /* 0x37B0 */ public float NotificationMissionHintTimeCritical;
        /* 0x37B4 */ public float NotificationMissionHintTimeSecondary;
        /* 0x37B8 */ public Vector2f NotificationMissionHintPauseTime;
        /* 0x37C0 */ public Vector2f NotificationMissionHintPauseTimeCritical;
        /* 0x37C8 */ public Vector2f NotificationMissionHintPauseTimeSecondary;
        /* 0x37D0 */ public float TooltipTime;
        /* 0x37D4 */ public float InventoryIconTime;
        /* 0x37D8 */ public float MessageNotificationTime;
        /* 0x37DC */ public float MessageTimeQuick;
        /* 0x37E0 */ public float ItemReceivedMessageTimeToAdd;
        /* 0x37E4 */ public float DeathMessageSwitchTime;
        /* 0x37E8 */ public float DeathMessageTotalTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x37EC */ public byte[] Padding37EC;
        /* 0x37F0 */ public Colour DeathMessageColour;
        /* 0x3800 */ public Colour PinnedRecipeBorder;
        [NMS(Size = 0x20)]
        /* 0x3810 */ public string DistanceUnitM;
        [NMS(Size = 0x20)]
        /* 0x3830 */ public string DistanceUnitKM;
        [NMS(Size = 0x20)]
        /* 0x3850 */ public string DistanceUnitMpS;
        /* 0x3870 */ public float ZoomHUDElementsOffsetX;
        /* 0x3874 */ public float ZoomHUDElementsOffsetY;
        /* 0x3878 */ public float ZoomHUDElementTime;
        /* 0x387C */ public float HUDElementsOffsetHMDSide;
        /* 0x3880 */ public float HUDElementsOffsetHMDTop;
        /* 0x3884 */ public float HUDElementsOffsetHMDBottom;
        /* 0x3888 */ public float HUDElementsOffsetX_0;
        /* 0x388C */ public float HUDElementsOffsetY_0;
        /* 0x3890 */ public float HUDElementsOffsetX_1;
        /* 0x3894 */ public float HUDElementsOffsetY_1;
        /* 0x3898 */ public float HUDElementsOffsetX_2;
        /* 0x389C */ public float HUDElementsOffsetY_2;
        /* 0x38A0 */ public float HUDElementsOffsetX_3;
        /* 0x38A4 */ public float HUDElementsOffsetY_3;
        /* 0x38A8 */ public float HUDElementsOffsetX_4;
        /* 0x38AC */ public float HUDElementsOffsetY_4;
        /* 0x38B0 */ public float HUDElementsOffsetX_5;
        /* 0x38B4 */ public float HUDElementsOffsetY_5;
        /* 0x38B8 */ public GcWorldUISettings WorldUISettings;
        /* 0x38E8 */ public float PauseMenuHoldTime;
        /* 0x38EC */ public Vector2f PlanetLabelOffset;
        /* 0x38F4 */ public Vector2f PlanetMeasureOffset;
        /* 0x38FC */ public Vector2f PlanetLineOffset;
        /* 0x3904 */ public float PlanetLabelTime;
        /* 0x3908 */ public float PlanetLabelAngle;
        /* 0x3910 */ public Colour ItemSlotColourSubstance;
        /* 0x3920 */ public Colour ItemSlotColourTech;
        /* 0x3930 */ public Colour ItemSlotColourTechCharge;
        /* 0x3940 */ public Colour ItemSlotColourTechDamage;
        /* 0x3950 */ public Colour ItemSlotColourPartiallyInstalled;
        /* 0x3960 */ public float ItemSlotColourTechChargeRate;
        /* 0x3970 */ public Colour ItemSlotColourProduct;
        /* 0x3980 */ public Colour ItemSlotTextColourSubstance;
        /* 0x3990 */ public Colour ItemSlotTextColourTech;
        /* 0x39A0 */ public Colour ItemSlotTextColourProduct;
        /* 0x39B0 */ public float InteractionScanScanTime;
        /* 0x39B4 */ public float InteractionScanMinTime;
        /* 0x39B8 */ public float InteractionScanDisplayTime;
        /* 0x39BC */ public float InteractionScanSlapTime;
        /* 0x39C0 */ public float InteractionScanSlapScale;
        /* 0x39C4 */ public float InteractionScanSlapOverallTime;
        /* 0x39C8 */ public TkCurveType InteractionScanSlapCurve;
        /* 0x39CC */ public float ShipHUDMissileLockSizeMin;
        /* 0x39D0 */ public float ShipHUDMissileLockSizeMax;
        /* 0x39D4 */ public float ShipHUDMissileLockSpringSlow;
        /* 0x39D8 */ public float ShipHUDMissileLockSpringFast;
        /* 0x39DC */ public float ShipHUDMaxOffscreenTargetDist;
        /* 0x39E0 */ public float ShipHUDTargetRadius;
        /* 0x39E4 */ public float ShipHUDTargetTriangleRadius;
        /* 0x39E8 */ public float ShipHUDTargetAlpha;
        /* 0x39EC */ public float ShipHUDTargetArrowLength;
        /* 0x39F0 */ public float ShipHUDTargetMinDist;
        /* 0x39F4 */ public float ShipHUDTargetRange;
        /* 0x39F8 */ public float ShipHUDTargetScale;
        /* 0x39FC */ public float ShipHUDTargetArrowsRotationRate;
        /* 0x3A00 */ public Colour ShipHUDTargetArrowsColourOutOfRange;
        /* 0x3A10 */ public Colour ShipHUDTargetArrowsColourThreat;
        /* 0x3A20 */ public Colour ShipHUDTargetArrowsColourLocal;
        // Not sure why this is repeated 4 times with identical values in each... ?
        // In the exe it looks to be just a single array of size 0x10...
        [NMS(Size = 0x10)]
        /* 0x3A30 */ public Colour[] ShipHUDTargetArrowsColour;
        /* 0x3B30 */ public Colour ShipHUDAimTargetColour;
        /* 0x3B40 */ public Colour ShipHUDAimTargetCritColour;
        /* 0x3B50 */ public float ShipHUDHitPointTime;
        /* 0x3B54 */ public float ShipHUDHitPointSize;
        /* 0x3B58 */ public float TargetScreenFoV;
        /* 0x3B5C */ public float TargetScreenDistance;
        /* 0x3B60 */ public Vector2f TargetScreenCamOffset;
        /* 0x3B68 */ public float InventoryFullMessageRepeatTime;
        /* 0x3B6C */ public float HoldTimerResetTime;
        /* 0x3B70 */ public bool ModelRendererBGPass;
        /* 0x3B71 */ public bool ModelRendererPass1;
        /* 0x3B72 */ public bool ModelRendererPass2;
        /* 0x3B74 */ public float HazardScreenEffectPulseRate;
        /* 0x3B78 */ public float KeepHazardBarActiveTime;
        /* 0x3B7C */ public float KeepSecondHazardBarActiveTime;
        /* 0x3B80 */ public float HazardBarPulseTime;
        /* 0x3B84 */ public float HazardScreenEffectPulseTime;
        /* 0x3B88 */ public float HazardScreenEffectStrength;
        /* 0x3B8C */ public float HazardWarningPulseTime;
        /* 0x3B90 */ public float HazardWarningPulseStrength;
        /* 0x3B94 */ public float HazardPainPulseStrength;
        /* 0x3B98 */ public float ShieldSpringTime;
        /* 0x3B9C */ public float ShieldPulseTime;
        /* 0x3BA0 */ public float ShieldHazardPulseRate;
        /* 0x3BA4 */ public float ShieldHazardPulseThreshold;
        /* 0x3BA8 */ public float AlwaysOnHazardThreshold;
        /* 0x3BAC */ public float AlwaysOnHazardStrengthTox;
        /* 0x3BB0 */ public float AlwaysOnHazardStrengthHeat;
        /* 0x3BB4 */ public float AlwaysOnHazardStrengthRad;
        /* 0x3BB8 */ public float AlwaysOnHazardStrengthCold;
        /* 0x3BBC */ public float AlwaysOnHazardMultiplierTox;
        /* 0x3BC0 */ public float AlwaysOnHazardMultiplierHeat;
        /* 0x3BC4 */ public float AlwaysOnHazardMultiplierRad;
        /* 0x3BC8 */ public float AlwaysOnHazardMultiplierCold;
        /* 0x3BCC */ public float HazardPulseRate;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3BD0 */ public NMSString0x80[] HazardTextures;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3ED0 */ public NMSString0x80[] HazardNormalMaps;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x41D0 */ public NMSString0x80[] HazardHeightmaps;
        /* 0x44D0 */ public float IconPulseRate;
        /* 0x44E0 */ public Colour EnergyBgColour;
        /* 0x44F0 */ public Colour EnergyBgPulseColour;
        /* 0x4500 */ public Colour HazardBgPulseColour;
        /* 0x4510 */ public Colour HazardDamagePulseColour;
        /* 0x4520 */ public Colour ShieldColour;
        /* 0x4530 */ public Colour ShieldDamageColour;
        /* 0x4540 */ public Colour ShieldBgColour;
        /* 0x4550 */ public Colour ShieldDamageBgColour;
        /* 0x4560 */ public Vector2f ScanLabelOffset;
        /* 0x4568 */ public Vector2f InteractionLabelOffset;
        /* 0x4570 */ public Vector2f InteractionLabelOffset_1;
        /* 0x4578 */ public Vector2f InteractionLabelSize;
        /* 0x4580 */ public Vector2f InteractionLabelLineOffset;
        /* 0x4588 */ public float InteractionLabelRadiusScaler;
        /* 0x458C */ public float InteractionLabelHeight;
        /* 0x4590 */ public float InteractionLabelLineAlpha;
        /* 0x4594 */ public float InteractionIconInnerRadius;
        /* 0x4598 */ public float InteractionIconOuterRadius;
        /* 0x459C */ public float InteractionLabelPixelHeightMin;
        /* 0x45A0 */ public float InteractionLabelPixelHeightMax;
        /* 0x45A4 */ public float ScanTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x45A8 */ public byte[] Padding45A8;
        /* 0x45B0 */ public GcModelViewCollection ModelViews;
        /* 0x5790 */ public Colour CursorColour;
        /* 0x57A0 */ public Colour CursorConfirmColour;
        /* 0x57B0 */ public Colour CursorTransferUploadColour;
        /* 0x57C0 */ public Colour CursorDeleteColour;
        /* 0x57D0 */ public float CursorHoverSlowFactor;
        /* 0x57D4 */ public float FrontendBGAlpha;
        /* 0x57D8 */ public float FrontendConfirmTimeMouseMultiplier;
        /* 0x57DC */ public float FrontendConfirmTimeFast;
        /* 0x57E0 */ public float FrontendConfirmTime;
        /* 0x57E4 */ public float FrontendConfirmTimeSlow;       // middle button time to scrap an item
        /* 0x57E8 */ public TkCurveType FrontendConfirmCurve;
        /* 0x57EC */ public float FrontendCursorSize;
        /* 0x57F0 */ public float FrontendCursorOffset;
        /* 0x57F4 */ public float PopupXClampOffset;
        /* 0x57F8 */ public float PopupXClampOffsetRightAligne;
        /* 0x57FC */ public float PopupSlotWidthOffset;
        /* 0x5800 */ public float FrontendCursorWidth;
        /* 0x5804 */ public float FrontendDeactivateTime;
        /* 0x5808 */ public float FrontendDeactivateSplit;
        /* 0x580C */ public float FrontendActivateTime;
        /* 0x5810 */ public float FrontendActivateSplit;
        /* 0x5814 */ public float FrontendStatCircleWidth;
        /* 0x5818 */ public float FrontendStatCircleWidthExtra;
        /* 0x581C */ public float FrontendBootTime;
        /* 0x5820 */ public float FrontendBootBarTime;
        /* 0x5824 */ public TkCurveType FrontendBootBarCurve;
        /* 0x5828 */ public float PopupDebounceTime;
        /* 0x582C */ public float PopupActivateTime;
        /* 0x5830 */ public float PopupDeactivateTime;
        /* 0x5834 */ public TkCurveType PopupActivateCurve1;
        /* 0x5838 */ public TkCurveType PopupActivateCurve2;
		/* 0x583C */ public float ByteBeatTreeLineWidth;
		/* 0x5840 */ public Colour ByteBeatTreeLineColour;
		/* 0x5850 */ public float ByteBeatVisLineWidth;
		/* 0x5860 */ public Colour ByteBeatVisLineColour;
		/* 0x5870 */ public Colour ByteBeatVisGridColour;
		/* 0x5880 */ public float ByteBeatIconLineWidth;
		/* 0x5884 */ public float ByteBeatIconPad;
		/* 0x5888 */ public float ByteBeatArpLineWidth;
		/* 0x588C */ public float ByteBeatArpRadius;
		/* 0x5890 */ public float ByteBeatArpPad;
		/* 0x58A0 */ public Colour ByteBeatArpGridInactiveColour;
		/* 0x58B0 */ public Colour ByteBeatArpGridActiveColour;
		/* 0x58C0 */ public Colour ByteBeatArpPipInactiveColour;
		/* 0x58D0 */ public Colour ByteBeatArpPipActiveColour;
		/* 0x58E0 */ public float ByteBeatSequencerLineWidth;
		/* 0x58E4 */ public float ByteBeatSequencerPad;
		/* 0x58E8 */ public float ByteBeatPartSequencerPad;
		/* 0x58EC */ public float ByteBeatSequencerCornerRadius;
		/* 0x58F0 */ public float ByteBeatRhythmBeatPad;
		/* 0x58F4 */ public float ByteBeatSequencerInactiveSaturation;
		/* 0x58F8 */ public float ByteBeatSequencerActiveSaturation;
		/* 0x58FC */ public float ByteBeatRhythmSequencerInactiveSaturation;
		/* 0x5900 */ public float ByteBeatRhythmSequencerActiveSaturation;
		/* 0x5904 */ public float ByteBeatSequencerUnpoweredTintStrength;
		/* 0x5910 */ public Colour ByteBeatSequencerUnpoweredTint;
		/* 0x5920 */ public Colour ByteBeatSequencerBGColourActive;
		/* 0x5930 */ public Colour ByteBeatSequencerBGColourInactive;
		/* 0x5940 */ public Colour ByteBeatSequencerRimColourActive;
		/* 0x5950 */ public Colour ByteBeatSequencerRimColourInactive;
		/* 0x5960 */ public Colour ByteBeatRhythmColour0Active;
		/* 0x5970 */ public Colour ByteBeatRhythmColour0Inactive;
		/* 0x5980 */ public Colour ByteBeatRhythmColour1Active;
		/* 0x5990 */ public Colour ByteBeatRhythmColour1Inactive;
		/* 0x59A0 */ public Colour ByteBeatRhythmColour2Active;
		/* 0x59B0 */ public Colour ByteBeatRhythmColour2Inactive;
		/* 0x59C0 */ public Colour ByteBeatSequencerHighlightColour;
		/* 0x59D0 */ public float ByteBeatSequencerHighlightLineWidth;
		/* 0x59D4 */ public float ByteBeatSliderLineWidth;
		/* 0x59D8 */ public float ByteBeatSliderPad;
		/* 0x59DC */ public float ByteBeatSliderCornerRadius;
		/* 0x59E0 */ public Colour ByteBeatSliderFGColour;
		/* 0x59F0 */ public Colour ByteBeatSliderTextActiveColour;
		/* 0x5A00 */ public Colour ByteBeatSliderTextInactiveColour;
		/* 0x5A10 */ public float ByteBeatSwitchPanelAlpha;
		/* 0x5A14 */ public float ByteBeatSwitchPanelSplit;
        /* 0x5A18 */ public float HatchPulseSpeed;
        /* 0x5A1C */ public float HatchPulseWidth;
        /* 0x5A20 */ public float HatchPulsePauseTime;
        /* 0x5A24 */ public int HatchCount;
        /* 0x5A28 */ public float HatchCursorRadius;
        /* 0x5A2C */ public float HatchAlphaMain;
        /* 0x5A30 */ public float HatchAlphaBase;
        /* 0x5A34 */ public float HatchAlphaCursor;
        /* 0x5A38 */ public float FrontendDoFNearPlaneMin;
        /* 0x5A3C */ public float FrontendDoFNearPlaneMax;
        /* 0x5A40 */ public float FrontendDoFFarPlaneMin;
        /* 0x5A44 */ public float FrontendDoFFarPlaneMax;
        /* 0x5A48 */ public float FrontendDoFFarPlaneFadeMin;
        /* 0x5A4C */ public float FrontendDoFFarPlaneFadeMax;
        /* 0x5A50 */ public float FrontendDoFBlurMultiplier;
        /* 0x5A54 */ public bool FrontendDoFEnableBokeh;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x5A55 */ public byte[] Padding5A55;
        /* 0x5A58 */ public TkCurveType FrontendDoFCurve;
        /* 0x5A5C */ public float FrontendShineSpeed;
        /* 0x5A60 */ public float FrontendToolbarTextHeight;
        /* 0x5A64 */ public float FrontendToolbarTextHeightSelected;
        /* 0x5A68 */ public float FrontendTitleFontSpacing;
        /* 0x5A6C */ public float NGuiPadSensitivity;
        /* 0x5A70 */ public float NGuiMouseSensitivity;
        /* 0x5A74 */ public Vector2f NGuiTouchPadSensitivity;
        /* 0x5A80 */ public Colour TargetMarkerColour;
        /* 0x5A90 */ public Colour TargetMarkerHighlightColour;
        /* 0x5AA0 */ public float TargetMarkerScaleStart;
        /* 0x5AA4 */ public float TargetMarkerScaleEnd;
        /* 0x5AA8 */ public float TargetMarkerFadeAngleMin;
        /* 0x5AAC */ public float TargetMarkerFadeAngleRange;
        /* 0x5AB0 */ public float HitMarkerPulseSize;
        /* 0x5AB4 */ public float HitMarkerPulseSizeStatic;
        /* 0x5AB8 */ public float HitMarkerPulseTime;
        /* 0x5AC0 */ public Colour WantedColour;
        /* 0x5AD0 */ public float PlanetPoleMaxDotProduct;
		/* 0x5AD4 */ public float SpaceMapLineWidth;
		/* 0x5AD8 */ public float SpaceMapLineBaseScale;
		/* 0x5ADC */ public float SpaceMapLineBaseFade;
		/* 0x5AE0 */ public float SpaceMapShipCombineDistance;
		/* 0x5AE4 */ public bool SpaceMapShowPlanets;
		/* 0x5AE5 */ public bool SpaceMapShowPlanetLines;
		/* 0x5AE6 */ public bool SpaceMapShowStation;
		/* 0x5AE7 */ public bool SpaceMapShowStationLines;
		/* 0x5AE8 */ public bool SpaceMapShowNexus;
		/* 0x5AE9 */ public bool SpaceMapShowNexusLines;
		/* 0x5AEA */ public bool SpaceMapShowShips;
		/* 0x5AEB */ public bool SpaceMapShowShipLines;
		/* 0x5AEC */ public bool SpaceMapShowFrieghters;
		/* 0x5AED */ public bool SpaceMapShowFrieghterLines;
		/* 0x5AEE */ public bool SpaceMapShowPulseEncounters;
		/* 0x5AEF */ public bool SpaceMapShowPulseEncounterLines;
		/* 0x5AF0 */ public float SpaceMapFoV;
		/* 0x5AF4 */ public float SpaceMapAspectRatio;
		/* 0x5AF8 */ public float SpaceMapDistanceScale;
		/* 0x5AFC */ public float SpaceMapDistanceLogScaler;
		/* 0x5B00 */ public TkCurveType SpaceMapDistanceCurve;
		/* 0x5B04 */ public float SpaceMapScaleMin;
		/* 0x5B08 */ public float SpaceMapScaleRangeMin;
		/* 0x5B0C */ public float SpaceMapScaleRangeMax;
		/* 0x5B10 */ public float SpaceMapObjectScale;
		/* 0x5B14 */ public float SpaceMapFreighterScale;
		/* 0x5B18 */ public float SpaceMapStationScale;
		/* 0x5B1C */ public float SpaceMapPlanetScale;
		/* 0x5B20 */ public float SpaceMapPlanetLineOffset;
		/* 0x5B24 */ public float SpaceMapMoonScale;
		/* 0x5B28 */ public float SpaceMapActionScale;
		/* 0x5B2C */ public float SpaceMapShipScale;
		/* 0x5B30 */ public float SpaceMapMarkerScale;
		/* 0x5B34 */ public float SpaceMapDistance;
		/* 0x5B38 */ public float SpaceMapMaxTraderDistance;
		/* 0x5B3C */ public float SpaceMapDistanceMultiplier;
		/* 0x5B40 */ public float SpaceMapHorizonThickness;
		/* 0x5B44 */ public float SpaceMapFadeAngleMin;
		/* 0x5B48 */ public float SpaceMapFadeAngleMax;
		/* 0x5B4C */ public float SpaceMapCamHeight;
		/* 0x5B50 */ public float SpaceMapCamAngle;
		/* 0x5B54 */ public float SpaceMapCamDistance;
		/* 0x5B58 */ public float SpaceMapShipScaleMin;
		/* 0x5B5C */ public float SpaceMapLightPitch;
		/* 0x5B60 */ public float SpaceMapLightYaw;
		/* 0x5B70 */ public Colour SpaceFriendlyShipLineColour;
		/* 0x5B80 */ public Colour SpaceEnemyShipLineColour;
		/* 0x5B90 */ public Vector3f SpaceMapPosScaler;
		/* 0x5BA0 */ public Colour SpaceMapAttackColour;
		/* 0x5BB0 */ public Colour SpaceMapOtherPlayerColour;
		/* 0x5BC0 */ public Colour SpaceMapThreatColour;
		/* 0x5BD0 */ public Colour SpaceMapNeutralColour;
		/* 0x5BE0 */ public Colour SpaceMapDeathPointColour;
        /* 0x5BF0 */ public GcSpaceMapObjectData SpaceMapMarkerData;
        /* 0x5C20 */ public GcSpaceMapObjectData SpaceMapPlanetData;
        /* 0x5C50 */ public GcSpaceMapObjectData SpaceMapStationData;
        /* 0x5C80 */ public GcSpaceMapObjectData SpaceMapNexusData;
        /* 0x5CB0 */ public GcSpaceMapObjectData SpaceMapShipData;
        /* 0x5CE0 */ public GcSpaceMapObjectData SpaceMapFreighterData;
        /* 0x5D10 */ public GcSpaceMapObjectData SpaceMapPulseEncounterData;
        /* 0x5D40 */ public Vector2f HUDTargetHealthOffset;
        /* 0x5D48 */ public Vector2f HUDTargetHealthSize;
        /* 0x5D50 */ public Vector2f HUDTargetHealthIconOffset;
        /* 0x5D58 */ public float HUDTargetHealthIconSize;
        /* 0x5D5C */ public float HUDTargetHealthDangerTime;
        /* 0x5D60 */ public float HUDTargetMarkerOffset;
        /* 0x5D64 */ public float HUDTargetMarkerSize;
        /* 0x5D68 */ public float HUDTargetIconOffset;
        /* 0x5D6C */ public float HUDTargetIconSize;
        /* 0x5D70 */ public float HUDMarkerOffset;
        /* 0x5D80 */ public Colour HUDMarkerColour;
        /* 0x5D90 */ public Colour HUDSpaceshipColour;
        /* 0x5DA0 */ public Colour HUDRelicMarkerColourDiscovered;
        /* 0x5DB0 */ public Colour HUDRelicMarkerColourUnknown;
        /* 0x5DC0 */ public Colour HUDOutpostColour;
        /* 0x5DD0 */ public Vector2f HUDMarkerPrimaryIndicatorOffset;
        /* 0x5DD8 */ public Vector2f HUDMarkerCompassPrimaryIndicatorOffset;
        /* 0x5DE0 */ public NMSString0x100 HUDMarkerIcon;
        /* 0x5EE0 */ public NMSString0x100 HUDMarkerPrimaryIndicatorIcon;
        /* 0x5FE0 */ public NMSString0x100 HUDMarkerColourIcon;
        /* 0x60E0 */ public NMSString0x100 HUDPointIcon;
        /* 0x61E0 */ public NMSString0x100 HUDSpaceshipIcon;
        /* 0x62E0 */ public NMSString0x100 HUDSaveIcon;
        /* 0x63E0 */ public NMSString0x100 HUDDeathPointIcon;
        /* 0x64E0 */ public NMSString0x100 HUDHexAnimIcon;
        /* 0x65E0 */ public NMSString0x100 HUDCircleAnimIcon;
        /* 0x66E0 */ public float HUDMarkerAnimSpeed;
        /* 0x66E4 */ public float HUDMarkerAnimScale;
        /* 0x66E8 */ public float HUDMarkerAnimOffset;
        /* 0x66EC */ public float HUDMarkerAnimLoopTime;
        /* 0x66F0 */ public TkCurveType HUDMarkerAnimAlphaCurve;
        /* 0x66F4 */ public TkCurveType HUDMarkerAnimCurve;
        /* 0x66F8 */ public float HUDMarkerPrimaryIndicatorSize;
        /* 0x66FC */ public float HUDMarkerHoverAngleTestGround;
        /* 0x6700 */ public float HUDNetworkMarkerHoverAngleTestGround;
        /* 0x6704 */ public float HUDMarkerWideHoverAngleTest;
        /* 0x6708 */ public float HUDMarkerHoverAngleTestShip;
        /* 0x670C */ public float HUDMarkerHoverShowLargeAngleTest;
        /* 0x6710 */ public float HUDNetworkMarkerHoverShowLargeAngleTest;
        /* 0x6714 */ public float HUDMarkerShipOffsetMaxDist;
        /* 0x6718 */ public float HUDMarkerShipOffsetMinDist;
        /* 0x671C */ public float HUDMarkerNearFadeDistance;
        /* 0x6720 */ public float HUDMarkerNearFadeRange;
        /* 0x6724 */ public float HUDMarkerFarDistance;
        /* 0x6728 */ public float HUDMarkerFarFadeRange;
        /* 0x672C */ public float HUDMarkerScalerMin;
        /* 0x6730 */ public float HUDMarkerScalerRange;
        /* 0x6734 */ public float HUDMarkerScalerSizeMin;
        /* 0x6738 */ public float HUDMarkerScalerSizeMax;
        /* 0x673C */ public float HUDMarkerHorizonBlendRange;
        /* 0x6740 */ public float HUDMarkerAlpha;
        /* 0x6744 */ public float HUDMarkerModelFadeRange;
        /* 0x6748 */ public float HUDMarkerModelFadeMinHeight;
        /* 0x674C */ public float HUDMarkerShowActualIconDistance;
        /* 0x6750 */ public float HUDMarkerShowActualSpaceIconDistance;
        /* 0x6754 */ public float HUDMarkerActiveTime;
        /* 0x6758 */ public TkCurveType HUDMarkerActiveCurve;
        /* 0x675C */ public float HUDMarkerIconHoverMinScale;
        /* 0x6760 */ public float AltimeterResolution;
        /* 0x6764 */ public float AltimeterLineSpacing;
        /* 0x6768 */ public float AltimeterWidth;
        /* 0x676C */ public float AltimeterMin;
        /* 0x6770 */ public float AltimeterMax;
        /* 0x6774 */ public float AltimeterTextSize;
        /* 0x6778 */ public float AltimeterMinValue;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x677C */ public byte[] Padding677C;
        /* 0x6780 */ public Colour AltimeterBandColour1;
        /* 0x6790 */ public Colour AltimeterBandColour2;
        /* 0x67A0 */ public Colour AltimeterColour1;
        /* 0x67B0 */ public Colour AltimeterColour2;
        /* 0x67C0 */ public float LockOnMarkerSize;
        /* 0x67C4 */ public float LockOnMarkerSizeLock;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x67C8 */ public byte[] Padding67C8;
        /* 0x67D0 */ public Colour LockOnMarkerActiveColour;
        /* 0x67E0 */ public float MissileIconAttackPulseTime;
        /* 0x67E4 */ public float MissileIconAttackPulseAmount;
        /* 0x67E8 */ public float NGuiModelRotationDegreesX;
        /* 0x67EC */ public float NGuiModelRotationDegreesY;
        /* 0x67F0 */ public float NGuiModelRotationDegreesZ;
        /* 0x67F4 */ public float NGuiModelViewDistanceGlobal;
        /* 0x67F8 */ public float NGuiModelViewDistanceSuitPage;
        /* 0x67FC */ public float NGuiModelViewDistanceWeaponPage;
        /* 0x6800 */ public float NGuiModelViewDistanceShipPage;
        /* 0x6804 */ public float NGuiModelViewDistanceDiscoveryPage;
        /* 0x6808 */ public float NGuiModelViewFov;
        /* 0x680C */ public float NGuiModelViewCdSmoothTime;
        /* 0x6810 */ public float NGuiAltPlacementDistanceScrollSpeed;
        /* 0x6814 */ public float NGuiPlacementAngleScrollSpeed;
        /* 0x6818 */ public float NGuiModelViewFractionOfBBHeightAboveReflectivePlane;
        [NMS(Size = 0x04, Ignore = true)]
        /* 0x681C */ public byte[] Padding681C;
        /* 0x6820 */ public Vector3f NGuiModelTranslationFactors;
        /* 0x6830 */ public Vector3f NGuiModelTranslationFactorsInteraction;
        /* 0x6840 */ public Vector3f NGuiThumbnailModelTranslationFactors;
        /* 0x6850 */ public float NGuiThumbnailModelRotationDegreesY;
        /* 0x6854 */ public float NGuiThumbnailModelViewDistance;
        /* 0x6858 */ public float NGuiCursorOffsetMultiplier;
        /* 0x685C */ public float NGuiActiveAreaOffsetTime;
        /* 0x6860 */ public Vector2f NGuiMin2DParallax;
        /* 0x6868 */ public Vector2f NGuiMax2DParallax;
        /* 0x6870 */ public Vector2f NGuiModelParallax;
        /* 0x6878 */ public Vector2f NGuiShipInteractParallax;
        /* 0x6880 */ public Vector2f InteractionWorldParallax;
        /* 0x6888 */ public float TargetParallaxMouseMultiplier;
        /* 0x688C */ public float TargetParallaxMaintenancePageMultiplier;
        /* 0x6890 */ public float NGuiModelViewFadeInAfterRenderTime;
        /* 0x6894 */ public TkCurveType NGuiModelViewFadeInAfterRenderCurve;
        /* 0x6898 */ public bool NGuiUseSeparateLayersForModelAndReflection;
        [NMS(Size = 0x03, Ignore = true)]
        /* 0x6899 */ public byte[] Padding6899;
        /* 0x689C */ public GcDiscoveryHelperTimings DiscoveryHelperTimings;
        /* 0x68A8 */ public GcHUDStartupTable IntroTiming;
        /* 0x6928 */ public GcInventorySlotActionData InstallTechSlotAction;
        /* 0x6944 */ public GcInventorySlotActionData BuildProductSlotAction;
        /* 0x6960 */ public GcInventorySlotActionData ChargeSlotAction;
        /* 0x697C */ public GcInventorySlotActionData RepairSlotAction;
        /* 0x6998 */ public GcInventorySlotActionData NewSlotRevealAction;
        /* 0x69B4 */ public GcInventorySlotActionData NewSlotPulseAction;
        /* 0x69D0 */ public GcInventorySlotActionData InventoryHintAction;
        /* 0x69EC */ public float ReportBaseFlashTime;
        /* 0x69F0 */ public float ReportBaseFlashIntensity;
        /* 0x69F4 */ public float ReportBaseFlashDelay;
        /* 0x69F8 */ public int ReportBaseTexWidth;
        /* 0x69FC */ public int ReportBaseTexHeight;
        /* 0x6A00 */ public float ReportCameraSpeed;
        /* 0x6A04 */ public float AmbientModeFadeTime;
        /* 0x6A08 */ public bool HideQuickMenuControls;
        /* 0x6A09 */ public bool QuickMenuAllowCycle;
        /* 0x6A0C */ public float TextChatMaxDisplayTime;
        /* 0x6A10 */ public float TextChatStayBigAfterTextInput;
        /* 0x6A14 */ public int BuildingShopMaxItems;
        /* 0x6A18 */ public float ShipScreenTexScale;
        /* 0x6A1C */ public float MultiplayerTeleportEffectDisappearTime;
        /* 0x6A20 */ public float MultiplayerTeleportEffectAppearTime;
        /* 0x6A24 */ public int AbandonedFreighterAirlockRoomNumber;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x6A28 */ public byte[] EndPadding;
    }
}