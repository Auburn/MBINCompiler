using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0x80EBE092C256077C)]
    public class GcUIGlobals : NMSTemplate
    {
        /*
          <Property name="HeatSpringTime" value="1.5" />
          <Property name="HeatAlertTime" value="0.6" />
          <Property name="HeatAlertFixedTime" value="1" />
          <Property name="HeatAlertSpringTime" value="0.2" />*/
        
        /* 0x0 */ public float Unknown0x0;
        /* 0x4 */ public bool Unknown0x4;
        /* 0x8 */ public float Unknown0x8;
        /* 0xC */ public float Unknown0xC;
        /* 0x10 */ public float Unknown0x10;
        /* 0x14 */ public float Unknown0x14;
        /* 0x18 */ public float Unknown0x18;
        /* 0x1C */ public float Unknown0x1C;
        /* 0x20 */ public float Unknown0x20;
        /* 0x24 */ public float Unknown0x24;
        /* 0x28 */ public float Unknown0x28;
        /* 0x2C */ public float Unknown0x2C;
        /* 0x30 */ public float Unknown0x30;
        /* 0x34 */ public float Unknown0x34;
        /* 0x38 */ public float Unknown0x38;
        /* 0x40 */ public Colour Unknown0x40;
        /* 0x50 */ public Colour Unknown0x50;
        /* 0x60 */ public float Unknown0x60;
        /* 0x64 */ public float Unknown0x64;
        /* 0x68 */ public float Unknown0x68;
        /* 0x6C */ public float Unknown0x6C;
        /* 0x70 */ public float Unknown0x70;
        /* 0x74 */ public float Unknown0x74;
        /* 0x78 */ public float Unknown0x78;
        /* 0x7C */ public float Unknown0x7C;
        /* 0x80 */ public float Unknown0x80;
        /* 0x84 */ public float Unknown0x84;
        /* 0x88 */ public float Unknown0x88;
        /* 0x8C */ public float Unknown0x8C;
        /* 0x90 */ public float Unknown0x90;
        /* 0x94 */ public bool Unknown0x94;
        /* 0x98 */ public float Unknown0x98;
        /* 0x9C */ public float Unknown0x9C;
        /* 0xA0 */ public float Unknown0xA0;
        /* 0xA4 */ public float Unknown0xA4;
        /* 0xA8 */ public float Unknown0xA8;
        /* 0xAC */ public float Unknown0xAC;
        /* 0xB0 */ public float Unknown0xB0;
        /* 0xB4 */ public float Unknown0xB4;
        /* 0xB8 */ public float Unknown0xB8;
        /* 0xBC */ public float Unknown0xBC;
        /* 0xC0 */ public float Unknown0xC0;
        /* 0xC4 */ public float Unknown0xC4;
        /* 0xC8 */ public bool Unknown0xC8;
        /* 0xC9 */ public bool Unknown0xC9;
        /* 0xCC */ public float Unknown0xCC;
        /* 0xD0 */ public float Unknown0xD0;
        /* 0xD4 */ public float Unknown0xD4;
        /* 0xD8 */ public float Unknown0xD8;
        /* 0xDC */ public float Unknown0xDC;
        /* 0xE0 */ public float Unknown0xE0;
        /* 0xE4 */ public float Unknown0xE4;
        /* 0xE8 */ public float Unknown0xE8;
        /* 0xEC */ public float Unknown0xEC;
        /* 0xF0 */ public float Unknown0xF0;
        /* 0xF4 */ public float Unknown0xF4;
        /* 0xF8 */ public float Unknown0xF8;
        /* 0xFC */ public float Unknown0xFC;
        /* 0x100 */ public float Unknown0x100;
        /* 0x104 */ public float Unknown0x104;
        /* 0x108 */ public float Unknown0x108;
        /* 0x10C */ public float Unknown0x10C;
        /* 0x110 */ public float Unknown0x110;
        /* 0x114 */ public float Unknown0x114;
        /* 0x118 */ public float Unknown0x118;
        /* 0x11C */ public float Unknown0x11C;
        /* 0x120 */ public int UnknownInt0x120;
        /* 0x124 */ public int UnknownInt0x124;
        [NMS(Size = 0x20)]
        /* 0x128 */ public string HUDVRWarningScreen;
        /* 0x148 */ public bool Unknown0x148;
        [NMS(Size = 0x7, Ignore = true)]
        /* 0x149 */ public byte[] Padding149;
        /* 0x150 */ public float Unknown0x150;      // start of a struct??
        /* 0x154 */ public float Unknown0x154;
        /* 0x158 */ public float Unknown0x158;
        /* 0x15C */ public float Unknown0x15C;
        /* 0x160 */ public int UnknownInt0x160;
        /* 0x164 */ public int UnknownInt0x164;
        /* 0x168 */ public int UnknownInt0x168;
        /* 0x16C */ public int UnknownInt0x16C;
        /* 0x170 */ public float Unknown0x170;
        /* 0x174 */ public float Unknown0x174;
        /* 0x178 */ public float Unknown0x178;
        /* 0x17C */ public int UnknownInt0x17C;
        /* 0x180 */ public float Unknown0x180;
        /* 0x184 */ public float Unknown0x184;
        /* 0x188 */ public float Unknown0x188;
        /* 0x18C */ public float Unknown0x18C;
        /* 0x190 */ public float Unknown0x190;
        /* 0x194 */ public bool Unknown0x194;
        /* 0x198 */ public float Unknown0x198;
        /* 0x19C */ public float Unknown0x19C;
        /* 0x1A0 */ public float Unknown0x1A0;
        /* 0x1A4 */ public float Unknown0x1A4;
        /* 0x1A8 */ public float Unknown0x1A8;
        /* 0x1AC */ public float Unknown0x1AC;
        /* 0x1B0 */ public float Unknown0x1B0;
        /* 0x1B4 */ public float Unknown0x1B4;
        /* 0x1B8 */ public float Unknown0x1B8;
        /* 0x1BC */ public float Unknown0x1BC;
        /* 0x1C0 */ public float Unknown0x1C0;
        /* 0x1C4 */ public float Unknown0x1C4;
        /* 0x1C8 */ public float Unknown0x1C8;
        /* 0x1CC */ public float Unknown0x1CC;
        /* 0x1D0 */ public float Unknown0x1D0;
        /* 0x1D4 */ public float Unknown0x1D4;
        /* 0x1D8 */ public float Unknown0x1D8;
        /* 0x1DC */ public float Unknown0x1DC;
        /* 0x1E0 */ public float Unknown0x1E0;
        /* 0x1E4 */ public float Unknown0x1E4;
        /* 0x1E8 */ public float Unknown0x1E8;
        /* 0x1EC */ public float Unknown0x1EC;
        /* 0x1F0 */ public float Unknown0x1F0;
        /* 0x1F4 */ public float Unknown0x1F4;
        /* 0x1F8 */ public float Unknown0x1F8;
        /* 0x1FC */ public float Unknown0x1FC;
        /* 0x200 */ public float Unknown0x200;
        /* 0x204 */ public float Unknown0x204;
        /* 0x208 */ public float Unknown0x208;
        /* 0x20C */ public float Unknown0x20C;
        /* 0x210 */ public bool Unknown0x210;
        /* 0x211 */ public bool Unknown0x211;
        /* 0x214 */ public float Unknown0x214;
        /* 0x218 */ public float Unknown0x218;
        /* 0x21C */ public float Unknown0x21C;
        /* 0x220 */ public float Unknown0x220;
        /* 0x224 */ public float Unknown0x224;
        /* 0x228 */ public float Unknown0x228;
        /* 0x22C */ public float Unknown0x22C;
        /* 0x230 */ public int UnknownInt0x230;
        /* 0x234 */ public int UnknownInt0x234;
        /* 0x238 */ public float Unknown0x238;
        /* 0x23C */ public float Unknown0x23C;
        /* 0x240 */ public float Unknown0x240;
        /* 0x244 */ public float Unknown0x244;
        /* 0x248 */ public float Unknown0x248;
        /* 0x24C */ public float Unknown0x24C;
        /* 0x250 */ public float Unknown0x250;
        /* 0x254 */ public float Unknown0x254;
        /* 0x258 */ public float Unknown0x258;
        /* 0x25C */ public float Unknown0x25C;
        /* 0x260 */ public float Unknown0x260;
        /* 0x264 */ public float Unknown0x264;
        /* 0x268 */ public float Unknown0x268;
        /* 0x26C */ public float Unknown0x26C;
        /* 0x270 */ public int UnknownInt0x270;
        /* 0x274 */ public int UnknownInt0x274;
        /* 0x278 */ public int UnknownInt0x278;
        /* 0x27C */ public int UnknownInt0x27C;
        /* 0x280 */ public float Unknown0x280;
        /* 0x284 */ public float Unknown0x284;
        /* 0x288 */ public float Unknown0x288;
        /* 0x28C */ public float Unknown0x28C;
        /* 0x290 */ public float Unknown0x290;
        /* 0x294 */ public float Unknown0x294;
        /* 0x298 */ public float Unknown0x298;
        /* 0x29C */ public float Unknown0x29C;
        /* 0x2A0 */ public TkModelRendererData Unknown0x2A0;
        /* 0x350 */ public TkModelRendererData Unknown0x350;
        /* 0x400 */ public TkModelRendererData Unknown0x400;
        /* 0x4B0 */ public float Unknown0x4B0;
        /* 0x4B4 */ public float Unknown0x4B4;
        /* 0x4B8 */ public float Unknown0x4B8;
        /* 0x4BC */ public float Unknown0x4BC;
        /* 0x4C0 */ public float Unknown0x4C0;
        /* 0x4C4 */ public float Unknown0x4C4;
        /* 0x4C8 */ public float Unknown0x4C8;
        /* 0x4CC */ public float Unknown0x4CC;
        /* 0x4D0 */ public float Unknown0x4D0;
        /* 0x4D4 */ public float Unknown0x4D4;
        /* 0x4D8 */ public float Unknown0x4D8;
        /* 0x4DC */ public float Unknown0x4DC;
        /* 0x4E0 */ public float Unknown0x4E0;
        /* 0x4E4 */ public float Unknown0x4E4;
        /* 0x4E8 */ public float Unknown0x4E8;
        /* 0x4EC */ public int UnknownInt0x4EC;
        /* 0x4F0 */ public int UnknownInt0x4F0;
        /* 0x4F4 */ public float Unknown0x4F4;
        /* 0x4F8 */ public float Unknown0x4F8;
        /* 0x4FC */ public bool Unknown0x4FC;
        /* 0x500 */ public float Unknown0x500;
        /* 0x504 */ public float Unknown0x504;
        /* 0x508 */ public float Unknown0x508;
        /* 0x50C */ public float Unknown0x50C;
        /* 0x510 */ public float Unknown0x510;
        /* 0x514 */ public float Unknown0x514;
        /* 0x518 */ public float Unknown0x518;
        /* 0x51C */ public float Unknown0x51C;
        /* 0x520 */ public Colour Unknown0x520;
        /* 0x530 */ public Colour Unknown0x530;
        /* 0x540 */ public Colour Unknown0x540;
        /* 0x550 */ public Colour Unknown0x550;
        /* 0x560 */ public Colour Unknown0x560;
        /* 0x570 */ public Colour Unknown0x570;
        ///* 0x0580 */ public bool LoadPagesFromMetadataCache;          // I think this may be the one removed but not sure
        /* 0x0580 */ public bool AlwaysCloseQuickMenu;
        /* 0x0581 */ public bool UseWorldNodesForRepair;
        /* 0x0582 */ public bool RepairTechUseTechIcon;
        /* 0x0583 */ public bool DebugMissionLogText;
        /* 0x0584 */ public bool DebugShowMaintenanceScreenCentre;
        /* 0x0585 */ public bool DebugPopupSizes;
        /* 0x0586 */ public bool DebugInventoryIndices;
        /* 0x0587 */ public bool FixedInventoryIconPositions;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0588 */ public byte[] Padding588;
        /* 0x0590 */ public GcHUDEffectRewardData OSDRareItemRewardEffect;
        /* 0x05F0 */ public GcHUDEffectRewardData OSDEpicItemRewardEffect;
        /* 0x0650 */ public float OSDMessageQueueSpeedMultiplier;
        /* 0x0654 */ public int OSDMessageQueueMin;
        /* 0x0658 */ public int OSDMessageQueueMax;
        /* 0x065C */ public float PopupValueSectionBaseHeight;
        /* 0x0660 */ public float PopupValueSectionHeight;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x0664 */ public byte[] Padding664;
        /* 0x0670 */ public Colour ProcProductColourCommon;
        /* 0x0680 */ public Colour ProcProductColourUncommon;
        /* 0x0690 */ public Colour ProcProductColourRare;
        [NMS(Size = 0x4)]
        /* 0x06A0 */ public Vector2f[] InventoryIconPositions;
        /* 0x06C0 */ public Colour PickedItemBorderColour;
        /* 0x06D0 */ public Colour MultiplayerMissionParticipantsColour;
        [NMS(Size = 0x10)]
        /* 0x06E0 */ public string MultiplayerMissionInteractStartTrigger;
        [NMS(Size = 0x10)]
        /* 0x06F0 */ public string MultiplayerMissionInteractEndTrigger;
        /* 0x0700 */ public float NotificationHazardMinTimeAfterRecharge;
        /* 0x0704 */ public float LoadFadeInDefaultTime;
        /* 0x0708 */ public float DroneIndicatorRadius;
        /* 0x070C */ public float DroneIndicatorCentreRadiusMax;
        /* 0x0710 */ public float DroneIndicatorCentreRadiusMin;
        /* 0x0714 */ public float DroneIndicatorFadeRange;
        /* 0x0718 */ public float WantedDetectMessageTime;
        /* 0x071C */ public float WantedDetectMinTimeout;
        /* 0x0720 */ public float TakeoffFuelMessageTime;
        /* 0x0724 */ public float MarkerHorizonOffsetAngle;
        /* 0x0728 */ public float MarkerHorizonMinOffset;
        /* 0x072C */ public float MarkerHorizonApproachAngle;
        /* 0x0730 */ public float MarkerOffsetTypeAngle;
        /* 0x0734 */ public float MarkerOffsetTypeAngleBattle;
        /* 0x0738 */ public float MarkerOffsetTypeAngleBounty;
        /* 0x073C */ public float MarkerOffsetTypeAnglePlayerShip;
        /* 0x0740 */ public float MarkerHorizonOffPlanetLightBeamAngle;
        /* 0x0744 */ public float MarkerHorizonShipApproachOffset;
        /* 0x0748 */ public float TransferPopupCursorOffsetFactor;
        /* 0x074C */ public float ScannableIconMergeAngle;
        /* 0x0750 */ public float MissionObjectiveBaseHeight;
        /* 0x0754 */ public float MarkerTagAppearDelay;
        /* 0x0758 */ public Vector2f CompassCentre;
        /* 0x0760 */ public float CompassHeight;
        /* 0x0764 */ public float CompassWidth;
        /* 0x0768 */ public float CompassDistanceScaleMin;
        /* 0x076C */ public float CompassDistanceScaleRange;
        /* 0x0770 */ public float Unknown0x770;
        /* 0x0774 */ public float Unknown0x774;
        /* 0x0778 */ public float CompassDistanceScale;
        /* 0x077C */ public float CompassDistanceMaxAngle;
        /* 0x0780 */ public float CompassDistanceYOffset;
        /* 0x0784 */ public float CompassAngleClamp;
        /* 0x0788 */ public float CompassAngleFade;
        /* 0x078C */ public TkCurveType CompassCurve;
        /* 0x0790 */ public float Unknown0x798;
        /* 0x0794 */ public float BaseComplexityDangerFactor;
        /* 0x0798 */ public float BaseComplexityWarningFactor;
        /* 0x07A0 */ public Colour BaseComplexityDefaultColour;
        /* 0x07B0 */ public Colour BaseComplexityWarningColour;
        /* 0x07C0 */ public Colour BaseComplexityDangerColour;
        /* 0x07D0 */ public float MarkerRingInnerRadius;
        /* 0x07D4 */ public float MarkerRingOuterRadius;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x07D8 */ public byte[] Padding7C8;
        /* 0x07E0 */ public Colour MarkerRingBGColour;
        /* 0x07F0 */ public float RepairTechRepairedWaitTime1;
        /* 0x07F4 */ public float RepairTechRepairedWaitTime2;
        /* 0x07F8 */ public float RepairTechRepairedMessageTime;
        /* 0x07FC */ public float TechPopupRepairLayerHeight;
        /* 0x0800 */ public float TechPopupBuildLayerHeight;
        /* 0x0804 */ public float TechPopupRequirementHeight;
        /* 0x0808 */ public float DamageTrackArrowTime;
        /* 0x080C */ public bool Unknown0x80C;
        /* 0x0810 */ public float HUDMarkerObjectMinScreenDistance;
        /* 0x0814 */ public float HUDMarkerDistanceOrTimeDistance;
        /* 0x0818 */ public float MarkerComponentOffset;
        /* 0x081C */ public float RepairTechLabelOffset;
        /* 0x0820 */ public float MaintenanceIconFadeStart;
        /* 0x0824 */ public float MaintenanceIconFadeTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0828 */ public byte[] Padding828;
        /* 0x0830 */ public TkModelRendererData RepairCamera;
        /* 0x08E0 */ public TkModelRendererData RepairWeaponCamera;
        /* 0x0990 */ public TkModelRendererData RepairBackpackCamera;
        /* 0x0A40 */ public TkModelRendererData RepairShipCamera;
        /* 0x0AF0 */ public Vector2f BinocularsDiscoveryPos;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0AF8 */ public byte[] PaddingAF8;
        /* 0x0B00 */ public Colour InteractionLabelCostColour;
        /* 0x0B10 */ public Colour InteractionLabelPickupColour;
        /* 0x0B20 */ public Colour InteractionLabelPickupFillColour;
        /* 0x0B30 */ public float Unknown0xB30;
        /* 0x0B34 */ public float Unknown0xB34;
        /* 0x0B38 */ public float Unknown0xB38;
        /* 0x0B3C */ public float Unknown0xB3C;
        /* 0x0B40 */ public TkMaterialResource Unknown0xB40;
        /* 0x0BC4 */ public float RefinerPadStartTime;
        /* 0x0BC8 */ public float RefinerPadStartDecayTime;
        /* 0x0BCC */ public float RefinerBeginDialInnerRadius;
        /* 0x0BD0 */ public float RefinerProgressDialInnerRadius;
        /* 0x0BE0 */ public Vector4f DefaultRefinerOffsetIn;
        /* 0x0BF0 */ public Vector4f DefaultRefinerOffsetOut;
        /* 0x0C00 */ public Vector2f RefinerParallax;
        /* 0x0C08 */ public Vector2f ModelViewWorldParallax;
        /* 0x0C10 */ public Vector2f HUDPlayerSentinelPulseFreq;
        /* 0x0C18 */ public Vector2f HUDPlayerSentinelPulseSize;
        /* 0x0C20 */ public float HUDPlayerSentinelPulseWidth;
        /* 0x0C24 */ public float HUDPlayerSentinelRangeFactor;
        /* 0x0C28 */ public float HUDPlayerSentinelPulseScanFreq;
        /* 0x0C2C */ public float HUDPlayerPhonePulseScanFreq;
        /* 0x0C30 */ public float RefinerAutoCloseTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x0C34 */ public byte[] PaddingC34;
        /* 0x0C40 */ public Colour RefinerBackgroundColour;
        /* 0x0C50 */ public Colour RefinerErrorBackgroundColour;
        /* 0x0C60 */ public Colour Unknown0xC60;        // I am guessing these are colours because they look like them
        /* 0x0C70 */ public Colour Unknown0xC70;
        /* 0x0C80 */ public Colour Unknown0xC80;
        /* 0x0C90 */ public Colour Unknown0xC90;
        /* 0x0CA0 */ public Colour Unknown0xCA0;
        /* 0x0CB0 */ public Colour Unknown0xCB0;
        /* 0x0CC0 */ public Colour TransferSendPopupColour;
        /* 0x0CD0 */ public float BountyMarkerOffset;
        /* 0x0CD4 */ public float TransitionOffset;
        /* 0x0CD8 */ public float PageTurnTime;
        /* 0x0CDC */ public TkCurveType PageTurnCurve;
        /* 0x0CE0 */ public TkCurveType PageTurnFadeCurve;
        /* 0x0CE4 */ public float LowHealthShieldMin;
        /* 0x0CE8 */ public float LowHealthShieldFactor;
        /* 0x0CEC */ public int MaxDialogCharSizeRoman;
        [NMS(Size = 0x20)]
        /* 0x0CF0 */ public string MaxDialogCharSizeRomanString;
        /* 0x0D10 */ public int MaxDialogCharSizeIdeographic;
        [NMS(Size = 0x20)]
        /* 0x0D14 */ public string MaxDialogCharSizeIdeographicString;
        /* 0x0D34 */ public float ShipOverheatSwitchMessageWait;
        /* 0x0D38 */ public float ShipOverheatSwitchMessageTime;
        /* 0x0D3C */ public bool LeadTargetEnabled;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x0D3D */ public byte[] PaddingD3D;
        /* 0x0D40 */ public Vector2f SaveIconPosition;
        /* 0x0D48 */ public float MissionStartEndTime;
        /* 0x0D4C */ public float MissionStartEndOSDTime;
        /* 0x0D50 */ public float MissionStartEndOSDTimeProcedural;
        /* 0x0D54 */ public float StandingRewardOSDTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0D58 */ public byte[] PaddingD58;
        /* 0x0D60 */ public Colour MissionOSDMessageBarColour;
        /* 0x0D70 */ public Colour NotificationDefaultColour;
        /* 0x0D80 */ public Colour NotificationDangerColour;
        /* 0x0D90 */ public Colour NotificationInfoColour;
        /* 0x0DA0 */ public Colour NotificationUrgentColour;
        /* 0x0DB0 */ public float ShipDamageDirectionIndicatorRadius;
        /* 0x0DB4 */ public float ShipDamageDirectionIndicatorFadeRange;
        /* 0x0DB8 */ public float OnFootDamageDirectionIndicatorRadius;
        /* 0x0DBC */ public float OnFootDamageDirectionIndicatorFadeRange;
        /* 0x0DC0 */ public float DamageDirectionIndicatorOnScreenRadiusMultiplier;
        /* 0x0DC4 */ public Vector2f DialogPageCursorOffset;
        /* 0x0DCC */ public int MissionSpecificMissionPercent;
        /* 0x0DD0 */ public int MissionLoopCount;
        /* 0x0DD4 */ public int MissionSeedOffset;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0DD8 */ public byte[] PaddingDD8;
        /* 0x0DE0 */ public Vector4f SpaceMapCockpitOffset;
        ///* 0x0DF0 */ public float SpaceMapCockpitScale;       // these are probably no longer used but the new unknowns may be related to them...
        ///* 0x0DF4 */ public float SpaceMapCockpitAngle;
        /* 0x0DF0 */ public float Unknown0xDF0;
        /* 0x0DF4 */ public float Unknown0xDF4;
        /* 0x0DF8 */ public float Unknown0xDF8;
        /* 0x0DFC */ public float Unknown0xDFC;
        /* 0x0E00 */ public float Unknown0xE00;
        /* 0x0E04 */ public float Unknown0xE04;
        /* 0x0E08 */ public float Unknown0xE08;
        /* 0x0E0C */ public float TargetDisplayScale;
        /* 0x0E10 */ public float TargetDisplayShipScale;
        /* 0x0E20 */ public Vector4f TargetDisplayShipOffset;
        /* 0x0E30 */ public float TargetDisplayDamageFlashTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x0E34 */ public byte[] PaddingE34;
        /* 0x0E40 */ public GcScanEffectData TargetDisplayScanEffect;
        /* 0x0E90 */ public bool ProgressiveDialogStyle;
        /* 0x0E94 */ public float CommunicatorMessageTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0E98 */ public byte[] PaddingE98;
        /* 0x0EA0 */ public Colour CommunicatorMessageColour;
        /* 0x0EB0 */ public float GridFlickerBaseAlpha;
        /* 0x0EB4 */ public float GridFlickerFreq;
        /* 0x0EB8 */ public float GridFlickerAmp;
        /* 0x0EBC */ public float HUDMarkerLabelWidthMultiplier;
        /* 0x0EC0 */ public float HUDMarkerLabelBaseWidth;
        /* 0x0EC4 */ public float HUDMarkerLabelArriveDistance;
        /* 0x0EC8 */ public float HUDMarkerLabelDisplayDistance;
        /* 0x0ECC */ public float HUDMarkerNonActiveMissionAlpha;
        /* 0x0ED0 */ public bool DebugMarkerLabels;
        [NMS(Size = 0xF, Ignore = true)]
        /* 0x0ED1 */ public byte[] PaddingED1;
        /* 0x0EE0 */ public GcScanEffectData DebugEditorPreviewEffect;
        /* 0x0F30 */ public bool ShowDamageNumbers;
        /* 0x0F34 */ public float QuickMenuCloseTime;
        /* 0x0F38 */ public float QuickMenuErrorTime;
        /* 0x0F3C */ public float FrontendWaitResponse;
        /* 0x0F40 */ public float FrontendWaitInitial;
        /* 0x0F44 */ public float FrontendWaitInitialTerminal;
        /* 0x0F48 */ public float FrontendWaitFadeTextOut;
        /* 0x0F4C */ public float FrontendWaitFadeTextFrameOut;
        /* 0x0F50 */ public float FrontendWaitFadeProgressiveDialogOut;
        /* 0x0F54 */ public float FrontendWaitResponseOffset;
        /* 0x0F58 */ public float TalkBoxAlienTextSpeed;
        /* 0x0F5C */ public float TalkBoxAlienTextTimeMin;
        /* 0x0F60 */ public float TalkBoxAlienTextTimeMax;
        /* 0x0F64 */ public float DescriptionTextDelay;
        /* 0x0F68 */ public float DescriptionTextSpeed;
        /* 0x0F6C */ public float DescriptionTextSpeedProgressive;
        /* 0x0F70 */ public float DescriptionTextTimeMin;
        /* 0x0F74 */ public float DescriptionTextTimeMax;
        /* 0x0F78 */ public float ConsoleTextSpeed;
        /* 0x0F7C */ public float ConsoleTextTimeMin;
        /* 0x0F80 */ public float ConsoleTextTimeMax;
        /* 0x0F84 */ public float HoverOffscreenBorder;
        /* 0x0F88 */ public float Unknown0xF88;
        /* 0x0F8C */ public float TransferSendOffscreenBorder;
        /* 0x0F90 */ public float TimedEventLookTime;
        /* 0x0F94 */ public float Unknown0xF94;
        /* 0x0F98 */ public float Unknown0xF98;
        /* 0x0F9C */ public float Unknown0xF9C;
        /* 0x0FA0 */ public float Unknown0xFA0;
        /* 0x0FA4 */ public float Unknown0xFA4;
        /* 0x0FA8 */ public float Unknown0xFA8;
        /* 0x0FAC */ public bool Unknown0xFAC;
        /* 0x0FB0 */ public float DamageImpactMergeTime;
        /* 0x0FB4 */ public float DamageImpactTimeBetweenNumbers;
        /* 0x0FB8 */ public float DamageImpactMinDistance;
        /* 0x0FBC */ public float DamagePerSecondSampleTime;
        /* 0x0FC0 */ public float DamageNumberTime;
        /* 0x0FC4 */ public float DamageNumberSizeInShip;
        /* 0x0FC8 */ public float DamageNumberSize;
        /* 0x0FCC */ public float DamageNumberSizeCritMultiplier;
        /* 0x0FD0 */ public float Unknown0xFD0;
        /* 0x0FD4 */ public float Unknown0xFD4;
        /* 0x0FD8 */ public float Unknown0xFD8;
        /* 0x0FDC */ public float DamageNumberBlackAlpha;
        /* 0x0FE0 */ public float DamageNumberOutline;
        /* 0x0FE4 */ public float DamageNumberOutline2;
        /* 0x0FE8 */ public float DamageNumberOffsetX;
        /* 0x0FEC */ public float DamageNumberOffsetY;
        /* 0x0FF0 */ public Vector2f DamageNumberSideSpeed;
        /* 0x0FF8 */ public float DamageNumberFadeIn;
        /* 0x0FFC */ public float DamageNumberFadeOut;
        /* 0x01000 */ public float DamageNumberUpOffset;
        /* 0x01004 */ public TkCurveType DamageNumberUpCurve;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x01008 */ public byte[] Padding1008;
        /* 0x01010 */ public Colour DamageNumberCriticalColour;
        /* 0x01020 */ public Colour Unknown0x1020;
        /* 0x01030 */ public Colour DamageNumberIneffectiveColour;
        /* 0x01040 */ public Colour PhotoModeSelectedColour;
        /* 0x01050 */ public Colour PhotoModeUnselectedColour;
        /* 0x01060 */ public Colour FuelBgColour;
        /* 0x01070 */ public float PhotoModeValueAlpha;
        /* 0x01074 */ public float PhotoModeTimeofDayChange;
        /* 0x01078 */ public float FrigateIconOffset;
        /* 0x0107C */ public float Unknown0x107C;     // this value and next may be swapped...
        /* 0x01080 */ public float DelayBeforeHidingHangarAfterGalaxyMap;
        /* 0x01084 */ public float DelayBeforeShowingHangarIntoGalaxyMap;
        /* 0x01088 */ public float FreighterSummonTurn;
        /* 0x0108C */ public float FreighterSummonPitch;
        /* 0x01090 */ public float FreighterSummonOffset;
        /* 0x01094 */ public float FreighterSummonDelay;
        /* 0x01098 */ public int FreighterSummonTurnNumTries;
        /* 0x0109C */ public float FreighterSummonTurnAngleIncrement;
        /* 0x010A0 */ public float FreighterSummonGridSize;
        /* 0x010A4 */ public float FreighterCommanderMarkerMinDistance;
        /* 0x010A8 */ public float FreighterBaseIconOffset;
        /* 0x010AC */ public float FreighterSurfaceMinAngle;
        /* 0x010B0 */ public float FreighterSummonPulseRate;
        /* 0x010B4 */ public float FreighterSummonPulseFadeAmount;
        /* 0x010B8 */ public float FreighterSummonPlanetOffset;
        /* 0x010BC */ public float FreighterSummonLookTime;
        /* 0x010C0 */ public float FreighterHighlightRange;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x010C4 */ public byte[] Padding10C4;
        /* 0x010D0 */ public GcScanEffectData FreighterSummonScanEffect;
        /* 0x01120 */ public Colour FreighterSummonScanEffectColourBlocked;
        /* 0x01130 */ public Colour FreighterSummonScanEffectColourHighlight;
        /* 0x01140 */ public float PirateCountdownTime;
        /* 0x01144 */ public float PirateAttackIndicatorWidth;
        /* 0x01148 */ public float PirateAttackIndicatorRadius;
        /* 0x0114C */ public float PirateAttackProbeDisplayFinishFactor;
        /* 0x01150 */ public float HazardArrowsLevel2Threshold;
        /* 0x01154 */ public float HazardArrowsLevel3Threshold;
        /* 0x01158 */ public float ArrowBounceLength;
        /* 0x0115C */ public float ArrowBounceRate;
        /* 0x01160 */ public float ArrowBounceRightRate1;
        /* 0x01164 */ public float ArrowBounceRightRate2;
        /* 0x01168 */ public TkCurveType ArrowBounceRightCurve;
        /* 0x0116C */ public float ArrowBounceLeftRate1;
        /* 0x01170 */ public float ArrowBounceLeftRate2;
        /* 0x01174 */ public float ArrowBounceLeftRate3;
        /* 0x01178 */ public TkCurveType ArrowBounceLeftCurve;
        /* 0x0117C */ public float PlanetScanDelayTime;
        /* 0x01180 */ public float AlwaysShowIconFadeDistance;
        /* 0x01184 */ public float AlwaysShowIconFadeRange;
        /* 0x01188 */ public float FrigatePurchaseNotificationResetDistanceMultiplier;
        /* 0x0118C */ public float FrigateDamageIconVisibilityDistance;
        /* 0x01190 */ public float FreighterLeaderIconDistance;
        /* 0x01194 */ public float FreighterEntranceOffset;
        /* 0x01198 */ public float ShipHeadsUpDisplayDistance;
        /* 0x0119C */ public float ShipHeadsUpLineFadeTime;
        /* 0x011A0 */ public float CrosshairAimTime;
        /* 0x011A4 */ public float CrosshairAimOffTime;
        /* 0x011A8 */ public float CrosshairInnerMinFade;
        /* 0x011AC */ public float CrosshairInnerMinFadeRange;
        /* 0x011B0 */ public float CrosshairLeadScaleIn;
        /* 0x011B4 */ public float CrosshairLeadInDelay;
        /* 0x011B8 */ public float CrosshairLeadInTime;
        /* 0x011BC */ public float CrosshairLeadCornerOffset;
        /* 0x011C0 */ public float CrosshairLeadTopOffset;
        /* 0x011C4 */ public float CrosshairLeadTopLock;
        /* 0x011C8 */ public float CrosshairLeadPulseSize;
        /* 0x011CC */ public TkCurveType CrosshairLeadScaleCurve;
        /* 0x011D0 */ public float CrosshairSpringTime;
        /* 0x011D4 */ public float CrosshairSpringAimTime;
        /* 0x011D8 */ public float CrosshairLeadSpring;
        /* 0x011DC */ public float CrosshairLeadSpringOff;
        /* 0x011E0 */ public float CrosshairLeadFadeRange;
        /* 0x011E4 */ public float CrosshairLeadFadeSize;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x011E8 */ public byte[] Padding11E8;
        /* 0x011F0 */ public Colour CrosshairLeadThreatColour;
        /* 0x01200 */ public Colour CrosshairLeadPassiveColour;
        /* 0x01210 */ public float CrosshairInterceptSize;
        /* 0x01214 */ public float CrosshairInterceptBaseSize;
        /* 0x01218 */ public float CrosshairInterceptCentreBaseSize;
        /* 0x0121C */ public float CrosshairInterceptSpringTime;
        /* 0x01220 */ public float CrosshairInterceptAlpha;
        /* 0x01224 */ public float CrosshairInterceptLockRange;
        /* 0x01228 */ public float CrosshairTargetLockSize;
        /* 0x0122C */ public TkCurveType CrosshairTargetLockCurve;
        /* 0x01230 */ public TkCurveType CrosshairTargetLockAlphaCurve;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x01234 */ public byte[] Padding1234;
        /* 0x01240 */ public Colour CrosshairColour;
        /* 0x1250 */ public TkHitCurveData CrosshairLeadHitCurve;
        /* 0x1260 */ public TkHitCurveData ShootableHitCurve;
        /* 0x1270 */ public int ControlScrollSteps;
        /* 0x1274 */ public float ControlScrollDistance;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x1278 */ public byte[] Padding1278;
        /* 0x1280 */ public Colour SelectedControlColour;
        /* 0x1290 */ public Colour RemappedControlColour;
        /* 0x12A0 */ public float CreatureRoutineMarkerTime;
        /* 0x12A4 */ public int CreatureRoutineRegionsPerFrame;
        /* 0x12A8 */ public float SpaceMarkersOffset;
        /* 0x12AC */ public float SpaceMarkersBattleOffset;
        /* 0x12B0 */ public float LargeSpaceIconSize;
        /* 0x12B4 */ public float SmallSpaceIconSize;
        /* 0x12B8 */ public Vector2f TrackTypeIconOffset;
        /* 0x12C0 */ public float TrackTypeIconSize;
        /* 0x12C4 */ public float TrackPrimaryCentreOffset;
        /* 0x12C8 */ public float TrackTimerAlpha;
        /* 0x12CC */ public float TrackTimerRadarPulseSize;
        /* 0x12D0 */ public float TrackTimerIconOuterRadius;
        /* 0x12D4 */ public float TrackTimerIconInnerRadius;
        /* 0x12D8 */ public float TrackTimerIconExclaimRadius;
        /* 0x12DC */ public float TrackGlowBase;
        /* 0x12E0 */ public float TrackHitPulseTime;
        /* 0x12E4 */ public float TrackGlowCritical;
        /* 0x12E8 */ public float TrackGlowHit;
        /* 0x12EC */ public float MissileCentreOffset;
        /* 0x12F0 */ public float TrackMissileTargetPulseRate;
        /* 0x12F4 */ public float TrackScaleCritical;
        /* 0x12F8 */ public float TrackScaleHit;
        /* 0x12FC */ public float TrackLeadTargetInScale;
        /* 0x1300 */ public float TrackReticuleScale;
        /* 0x1304 */ public float TrackReticuleAngle;
        /* 0x1308 */ public float TrackReticuleInTime;
        /* 0x130C */ public float TrackReticuleInactiveTime;
        /* 0x1310 */ public float TrackReticuleRandomTime;
        /* 0x1314 */ public float TrackReticuleRandomDelay;
        /* 0x1318 */ public TkCurveType TrackReticuleInCurve;
        /* 0x131C */ public TkCurveType TrackReticuleInAngleCurve;
        /* 0x1320 */ public float CreatureReticuleScale;
        /* 0x1324 */ public TkCurveType CreatureReticuleScaleCurve;
        /* 0x1328 */ public TkCurveType CreatureReticuleAlphaCurve;
        /* 0x132C */ public bool Unknown0x132C;
        /* 0x1330 */ public float Unknown0x10C0;
        /* 0x1334 */ public float HUDPlayerTrackNoSightPulse;
        /* 0x1338 */ public float HUDPlayerTrackTimerStart;
        /* 0x133C */ public float HUDPlayerTrackTimerStartFade;
        /* 0x1340 */ public float HUDPlayerTrackTimerEnd;
        /* 0x1344 */ public float HUDPlayerTrackTimerPulseRate;
        /* 0x1348 */ public TkCurveType TrackCritCurve;
        /* 0x134C */ public Vector2f TrackCriticalHitOffset;
        /* 0x1354 */ public float TrackCriticalHitSize;
        /* 0x1358 */ public float TrackCriticalPulseTime;
        /* 0x135C */ public float ThirdPersonCrosshairDistance;
        /* 0x1360 */ public float ThirdPersonCrosshairCircle1Distance;
        /* 0x1364 */ public float ThirdPersonCrosshairCircle2Distance;
        /* 0x1368 */ public float HUDPlayerTrackArrowShipLabelOffset;
        /* 0x136C */ public float HUDPlayerTrackArrowIconPulseTime;
        /* 0x1370 */ public float HUDPlayerTrackArrowIconShowTime;
        /* 0x1374 */ public float HUDPlayerTrackArrowIconFadeTime;
        /* 0x1378 */ public Vector2f HUDPlayerTrackArrowIconPulseSize;
        /* 0x1380 */ public float HUDPlayerTrackArrowIconPulseWidth1;
        /* 0x1384 */ public float HUDPlayerTrackArrowIconPulseWidth2;
        /* 0x1388 */ public float HUDPlayerTrackArrowIconPulse2Alpha;
        /* 0x138C */ public float HUDPlayerTrackArrowIconFadeDist;
        /* 0x1390 */ public float HUDPlayerTrackArrowIconFadeRange;
        /* 0x1394 */ public float HUDPlayerTrackArrowPulseOffset;
        /* 0x1398 */ public float HUDPlayerTrackArrowPulseRate;
        /* 0x139C */ public Vector2f HUDPlayerTrackIconOffset;
        /* 0x13A4 */ public float ShipFullscreenDamper;
        /* 0x13A8 */ public float ShipDesatDamper;
        /* 0x13AC */ public float ScanEventArrowShipFadeRange;
        /* 0x13B0 */ public float ScanEventArrowShipFadeDistance;
        /* 0x13B4 */ public float ScanEventArrowPlayerFadeRange;
        /* 0x13B8 */ public float ScanEventArrowPlayerFadeDistance;
        /* 0x13BC */ public float ScanEventArrowOffsetMultiplier;
        /* 0x13C0 */ public float ScanEventArrowOffsetMultiplierOneEvent;
        /* 0x13C4 */ public float ScanEventArrowSecondaryAlpha;
        /* 0x13C8 */ public GcAudioWwiseEvents ScanEventIconAudio;
        /* 0x13CC */ public TkNGuiRectanglePulseEffect PulseBarData;
        /* 0x13E0 */ public TkNGuiRectanglePulseEffect PulseIconData;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x13F4 */ public byte[] Padding13F4;
        /* 0x01400 */ public Colour PulseDamageColour;
        /* 0x01410 */ public Colour PulseAlertColour;
        /* 0x01420 */ public float TechDisplayDelayTime;
        /* 0x01424 */ public float CriticalMessageTime;
        /* 0x01428 */ public int NumDeathQuotes;
        /* 0x0142C */ public bool EnableKanaConversion;
        /* 0x01430 */ public float HUDDisplayTime;
        /* 0x01434 */ public float HUDPlayerTrackDangerPulse;
        /* 0x01438 */ public float HUDPlayerTrackArrowTextOffset;
        /* 0x0143C */ public float HUDPlayerTrackArrowTextHeight;
        /* 0x01440 */ public Colour HUDPlayerTrackArrowTextColour;
        /* 0x01450 */ public float HUDPlayerTrackArrowHealthOffset;
        /* 0x01454 */ public Vector2f HUDPlayerTrackArrowHealthSize;
        /* 0x0145C */ public float HUDPlayerTrackArrowHealthGlowOffset;
        /* 0x01460 */ public Vector2f HUDPlayerTrackArrowHealthGlowSize;
        /* 0x01468 */ public float HUDPlayerTrackArrowTargetDist;
        /* 0x0146C */ public float HUDPlayerTrackArrowOffset;
        /* 0x01470 */ public float HUDPlayerTrackArrowScreenBorder;
        /* 0x01474 */ public float HUDPlayerTrackArrowSize;
        /* 0x01478 */ public float HUDPlayerTrackArrowSizeMin;
        /* 0x0147C */ public float HUDPlayerTrackArrowSizeMax;
        /* 0x01480 */ public float HUDPlayerTrackArrowIconSize;
        /* 0x01484 */ public float HUDPlayerTrackArrowArrowSize;
        /* 0x01488 */ public float HUDPlayerTrackArrowDotSize;
        /* 0x0148C */ public float Unknown0x148C;
        /* 0x01490 */ public Colour HUDPlayerTrackArrowDotColour;
        /* 0x014A0 */ public Colour HUDPlayerTrackArrowDotColourPolice;
        /* 0x014B0 */ public Colour HUDPlayerTrackArrowDotColourPirate;
        /* 0x014C0 */ public Colour HUDWarningColour;
        /* 0x014D0 */ public Colour HUDNotifyColour;
        /* 0x014E0 */ public float HUDPlayerTrackArrowMinFadeDist;
        /* 0x014E4 */ public float HUDPlayerTrackArrowFadeRange;
        /* 0x014E8 */ public float IconBackgroundAlpha;
        /* 0x014EC */ public float WantedLevelWitnessPulseRate;
        /* 0x014F0 */ public float WantedLevelWitnessOffset;
        /* 0x014F4 */ public float WantedLevelTimeoutPulseRate;
        /* 0x014F8 */ public float WantedLevelWitnessAlpha;
        /* 0x014FC */ public float WantedLevelScanAlpha;
        /* 0x01500 */ public float WantedLevelScannedRate;
         [NMS(Size = 0x37)]
        /* 0x1504 */ public NMSString0x80[] StatIcons;
        /* 0x3084 */ public bool ShowJetpackNotificationForNonTerrain;
        /* 0x3088 */ public float StatsMessageDelayTime;
        /* 0x308C */ public int NotificationsResourceExtractHintCount;
        /* 0x3090 */ public float NotificationStaminaHintDistanceWalked;
        /* 0x3094 */ public float NotificationMinVisibleTime;
        /* 0x3098 */ public float NotificationHazardSafeThreshold;
        /* 0x309C */ public float NotificationHazardTimer;
        /* 0x30A0 */ public float NotificationInteractHintStartTime;
        /* 0x30A4 */ public float NotificationBuildHintStartTime;
        /* 0x30A8 */ public float NotificationJetpackTime;
        /* 0x30AC */ public float NotificationShieldTime;
        /* 0x30B0 */ public float NotificationShipBoostTime;
        /* 0x30B4 */ public float Unknown0x30B4;
        /* 0x30B8 */ public float NotificationCantFireTime;
        /* 0x30BC */ public float NotificationDangerTime;
        /* 0x30C0 */ public float NotificationScanTime;
        /* 0x30C4 */ public float NotificationScanTimeCutoff;
        /* 0x30C8 */ public float NotificationMessageCycleTime;
        /* 0x30CC */ public float NotificationMaxPageHintTime;
        /* 0x30D0 */ public float NotificationShipJumpMinTime;
        /* 0x30D4 */ public float NotificationShipJumpReminderTime;
        /* 0x30D8 */ public float NotificationShipJumpReminderTutorial;
        /* 0x30DC */ public float NotificationShipBoostMinTime;
        /* 0x30E0 */ public float NotificationShipBoostReminderTime;
        /* 0x30E4 */ public float NotificationShipBoostReminderTimeTutorial;
        /* 0x30E9 */ public float LandNotifySpeedThreshold;
        /* 0x30EC */ public float LandNotifyHeightThreshold;
        /* 0x30F0 */ public float Unknown0x30F0;
        /* 0x30F4 */ public float NotificationTimeBeforeHeridiumMarker;
        /* 0x30F8 */ public float NotificationUrgentMessageTime;
        /* 0x30FC */ public float NotificationGoToSpaceStationWait;
        /* 0x3100 */ public float NotificationMonolithMissionWait;
        /* 0x3104 */ public float NotificationFinalMissionWait;
        /* 0x3108 */ public float NotificationWaypointReachDistance;
        /* 0x310C */ public float NotificationBridgeReachDistance;
        /* 0x3110 */ public float NotificationDiscoveryIdleTime;
        /* 0x3114 */ public float NotificationInfoIdleTime;
        /* 0x3118 */ public float NotificationNewTechIdleTime;
        /* 0x311C */ public float NotificationScanEventMissionIdleTime;
        /* 0x3120 */ public float NotificationDeviceIdleTime;
        /* 0x3124 */ public float NotificationMissionHintTime;
        /* 0x3128 */ public float NotificationMissionHintTimeCritical;
        /* 0x312C */ public float NotificationMissionHintTimeSecondary;
        /* 0x3130 */ public Vector2f NotificationMissionHintPauseTime;
        /* 0x3138 */ public Vector2f NotificationMissionHintPauseTimeCritical;
        /* 0x3140 */ public Vector2f NotificationMissionHintPauseTimeSecondary;
        /* 0x3148 */ public float TooltipTime;
        /* 0x314C */ public float InventoryIconTime;
        /* 0x3150 */ public float MessageNotificationTime;
        /* 0x3154 */ public float MessageTimeQuick;
        /* 0x3158 */ public float Unknown0x3158;
        /* 0x315C */ public float DeathMessageSwitchTime;
        /* 0x3160 */ public float DeathMessageTotalTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x3164 */ public byte[] Padding3164;
        /* 0x3170 */ public Colour DeathMessageColour;
        /* 0x3180 */ public Colour PinnedRecipeBorder;
        [NMS(Size = 0x20)]
        /* 0x3190 */ public string DistanceUnitM;
        [NMS(Size = 0x20)]
        /* 0x31B0 */ public string DistanceUnitKM;
        [NMS(Size = 0x20)]
        /* 0x31D0 */ public string DistanceUnitMpS;
        /* 0x31F0 */ public float ZoomHUDElementsOffsetX;
        /* 0x31F4 */ public float ZoomHUDElementsOffsetY;
        /* 0x31F8 */ public float ZoomHUDElementTime;
        /* 0x31FC */ public float Unknown0x31FC;
        /* 0x3200 */ public float Unknown0x3200;
        /* 0x3204 */ public float Unknown0x3204;
        /* 0x3208 */ public float HUDElementsOffsetX_0;
        /* 0x320C */ public float HUDElementsOffsetY_0;
        /* 0x3210 */ public float HUDElementsOffsetX_1;
        /* 0x3214 */ public float HUDElementsOffsetY_1;
        /* 0x3218 */ public float HUDElementsOffsetX_2;
        /* 0x321C */ public float HUDElementsOffsetY_2;
        /* 0x3220 */ public float HUDElementsOffsetX_3;
        /* 0x3224 */ public float HUDElementsOffsetY_3;
        /* 0x3228 */ public float HUDElementsOffsetX_4;
        /* 0x322C */ public float HUDElementsOffsetY_4;
        /* 0x3230 */ public float HUDElementsOffsetX_5;
        /* 0x3234 */ public float HUDElementsOffsetY_5;
        /* 0x3238 */ public GcWorldUISettings WorldUISettings;
        /* 0x3268 */ public float Unknown0x3268;
        /* 0x326C */ public Vector2f PlanetLabelOffset;
        /* 0x3274 */ public Vector2f PlanetMeasureOffset;
        /* 0x327C */ public Vector2f PlanetLineOffset;
        /* 0x3284 */ public float PlanetLabelTime;
        /* 0x3288 */ public float PlanetLabelAngle;
        [NMS(Size = 0x04, Ignore = true)]
        /* 0x328C */ public byte[] Padding328C;
        /* 0x3290 */ public Colour ItemSlotColourSubstance;
        /* 0x32A0 */ public Colour ItemSlotColourTech;
        /* 0x32B0 */ public Colour ItemSlotColourTechCharge;
        /* 0x32C0 */ public Colour ItemSlotColourTechDamage;
        /* 0x32D0 */ public Colour Unknown0x32D0;
        /* 0x32E0 */ public float ItemSlotColourTechChargeRate;
        [NMS(Size = 0x0C, Ignore = true)]
        /* 0x32E4 */ public byte[] Padding32E4;
        /* 0x32F0 */ public Colour ItemSlotColourProduct;
        /* 0x3300 */ public Colour ItemSlotTextColourSubstance;
        /* 0x3310 */ public Colour ItemSlotTextColourTech;
        /* 0x3320 */ public Colour ItemSlotTextColourProduct;
        /* 0x3330 */ public float InteractionScanScanTime;
        /* 0x3334 */ public float InteractionScanMinTime;
        /* 0x3338 */ public float InteractionScanDisplayTime;
        /* 0x333C */ public float InteractionScanSlapTime;
        /* 0x3340 */ public float InteractionScanSlapScale;
        /* 0x3344 */ public float InteractionScanSlapOverallTime;
        /* 0x3348 */ public TkCurveType InteractionScanSlapCurve;
        /* 0x334C */ public float ShipHUDMissileLockSizeMin;
        /* 0x3350 */ public float ShipHUDMissileLockSizeMax;
        /* 0x3354 */ public float ShipHUDMissileLockSpringSlow;
        /* 0x3358 */ public float ShipHUDMissileLockSpringFast;
        /* 0x335C */ public float ShipHUDMaxOffscreenTargetDist;
        /* 0x3360 */ public float ShipHUDTargetRadius;
        /* 0x3364 */ public float ShipHUDTargetTriangleRadius;
        /* 0x3368 */ public float ShipHUDTargetAlpha;
        /* 0x336C */ public float ShipHUDTargetArrowLength;
        /* 0x3370 */ public float ShipHUDTargetMinDist;
        /* 0x3374 */ public float ShipHUDTargetRange;
        /* 0x3378 */ public float ShipHUDTargetScale;
        /* 0x337C */ public float ShipHUDTargetArrowsRotationRate;
        /* 0x3380 */ public Colour ShipHUDTargetArrowsColourOutOfRange;
        /* 0x3390 */ public Colour ShipHUDTargetArrowsColourThreat;
        /* 0x33A0 */ public Colour ShipHUDTargetArrowsColourLocal;
        // Not sure why this is repeated 4 times with identical values in each... ?
        [NMS(Size = 0x4)]
        /* 0x33B0 */ public Colour[] ShipHUDTargetArrowsColour1;
        [NMS(Size = 0x4)]
        /* 0x33F0 */ public Colour[] ShipHUDTargetArrowsColour2;
        [NMS(Size = 0x4)]
        /* 0x33F0 */ public Colour[] ShipHUDTargetArrowsColour3;
        [NMS(Size = 0x4)]
        /* 0x3470 */ public Colour[] ShipHUDTargetArrowsColour4;
        /* 0x34B0 */ public Colour ShipHUDAimTargetColour;
        /* 0x34C0 */ public Colour ShipHUDAimTargetCritColour;
        /* 0x34D0 */ public float ShipHUDHitPointTime;
        /* 0x34D4 */ public float ShipHUDHitPointSize;
        /* 0x34D8 */ public float TargetScreenFoV;
        /* 0x34DC */ public float TargetScreenDistance;
        /* 0x34E0 */ public Vector2f TargetScreenCamOffset;
        /* 0x34E8 */ public float InventoryFullMessageRepeatTime;
        /* 0x34EC */ public float HoldTimerResetTime;
        /* 0x34F0 */ public bool ModelRendererBGPass;
        /* 0x34F1 */ public bool ModelRendererPass1;
        /* 0x34F2 */ public bool ModelRendererPass2;
        /* 0x34F4 */ public float HazardScreenEffectPulseRate;
        /* 0x34F8 */ public float KeepHazardBarActiveTime;
        /* 0x34FC */ public float KeepSecondHazardBarActiveTime;
        /* 0x3500 */ public float HazardBarPulseTime;
        /* 0x3504 */ public float HazardScreenEffectPulseTime;
        /* 0x3508 */ public float HazardScreenEffectStrength;
        /* 0x350C */ public float ShieldSpringTime;
        /* 0x3510 */ public float ShieldPulseTime;
        /* 0x3514 */ public float ShieldHazardPulseRate;
        /* 0x3518 */ public float ShieldHazardPulseThreshold;
        /* 0x351C */ public float AlwaysOnHazardThreshold;
        /* 0x3520 */ public float AlwaysOnHazardStrengthTox;
        /* 0x3524 */ public float AlwaysOnHazardStrengthHeat;
        /* 0x3528 */ public float AlwaysOnHazardStrengthRad;
        /* 0x352C */ public float AlwaysOnHazardStrengthCold;
        /* 0x3530 */ public float AlwaysOnHazardMultiplierTox;
        /* 0x3534 */ public float AlwaysOnHazardMultiplierHeat;
        /* 0x3538 */ public float AlwaysOnHazardMultiplierRad;
        /* 0x353C */ public float AlwaysOnHazardMultiplierCold;
        /* 0x3540 */ public float HazardPulseRate;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3544 */ public NMSString0x80[] HazardTextures;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3844 */ public NMSString0x80[] HazardNormalMaps;
        [NMS(Size = 0x6, EnumType = typeof(GcPlayerHazardType.HazardEnum))]
        /* 0x3B44 */ public NMSString0x80[] HazardHeightmaps;
        /* 0x3E44 */ public float IconPulseRate;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x3E48 */ public byte[] Padding3E48;
        /* 0x3E50 */ public Colour EnergyBgColour;
        /* 0x3E60 */ public Colour EnergyBgPulseColour;
        /* 0x3E70 */ public Colour HazardBgPulseColour;
        /* 0x3E80 */ public Colour HazardDamagePulseColour;
        /* 0x3E90 */ public Colour ShieldColour;
        /* 0x3EA0 */ public Colour ShieldDamageColour;
        /* 0x3EB0 */ public Colour ShieldBgColour;
        /* 0x3EC0 */ public Colour ShieldDamageBgColour;
        /* 0x3ED0 */ public Vector2f ScanLabelOffset;
        /* 0x3ED8 */ public Vector2f InteractionLabelOffset;
        /* 0x3EE0 */ public Vector2f InteractionLabelOffset_1;
        /* 0x3EE8 */ public Vector2f InteractionLabelSize;
        /* 0x3EF0 */ public Vector2f InteractionLabelLineOffset;
        /* 0x3EF8 */ public float InteractionLabelRadiusScaler;
        /* 0x3EFC */ public float InteractionLabelHeight;
        /* 0x3F00 */ public float InteractionLabelLineAlpha;
        /* 0x3F04 */ public float InteractionIconInnerRadius;
        /* 0x3F08 */ public float InteractionIconOuterRadius;
        /* 0x3F0C */ public float InteractionLabelPixelHeightMin;
        /* 0x3F10 */ public float InteractionLabelPixelHeightMax;
        /* 0x3F14 */ public float ScanTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x3F18 */ public byte[] Padding3F18;
        /* 0x3F20 */ public GcModelViewCollection ModelViews;
        /* 0x5050 */ public Colour CursorColour;
        /* 0x5060 */ public Colour CursorConfirmColour;
        /* 0x5070 */ public Colour Unknown0x5070;
        /* 0x5080 */ public Colour CursorDeleteColour;
        /* 0x5090 */ public float CursorHoverSlowFactor;
        /* 0x5094 */ public float FrontendBGAlpha;
        /* 0x5098 */ public float FrontendConfirmTimeMouseMultiplier;
        /* 0x509C */ public float FrontendConfirmTimeFast;
        /* 0x50A0 */ public float FrontendConfirmTime;
        /* 0x50A4 */ public float FrontendConfirmSalvageTime;       // middle button time to scrap an item
        /* 0x50A8 */ public TkCurveType FrontendConfirmCurve;
        /* 0x50AC */ public float FrontendCursorSize;
        /* 0x50B0 */ public float FrontendCursorOffset;
        /* 0x50B4 */ public float PopupXClampOffset;
        /* 0x50B8 */ public float Unknown0x50B8;
        /* 0x50BC */ public float PopupSlotWidthOffset;
        /* 0x50C0 */ public float FrontendCursorWidth;
        /* 0x50C4 */ public float FrontendDeactivateTime;
        /* 0x50C8 */ public float FrontendDeactivateSplit;
        /* 0x50CC */ public float FrontendActivateTime;
        /* 0x50D0 */ public float FrontendActivateSplit;
        /* 0x50D4 */ public float FrontendStatCircleWidth;
        /* 0x50D8 */ public float FrontendStatCircleWidthExtra;
        /* 0x50DC */ public float FrontendBootTime;
        /* 0x50E0 */ public float FrontendBootBarTime;
        /* 0x50E4 */ public TkCurveType FrontendBootBarCurve;
        /* 0x50E8 */ public float PopupDebounceTime;
        /* 0x50EC */ public float PopupActivateTime;
        /* 0x50F0 */ public float PopupDeactivateTime;
        /* 0x50F4 */ public TkCurveType PopupActivateCurve1;
        /* 0x50F8 */ public TkCurveType PopupActivateCurve2;
        // surely there is a struct somewhere in this giant chunk of new unknowns...
        // Also, more of the following are likely to be Colour or Vector3/4f's
        /* 0x50FC */ public float Unknown0x50FC;
        /* 0x5100 */ public float Unknown0x5100;
        /* 0x5104 */ public float Unknown0x5104;
        /* 0x5108 */ public float Unknown0x5108;
        /* 0x510C */ public float Unknown0x510C;
        /* 0x5110 */ public float Unknown0x5110;
        /* 0x5114 */ public float Unknown0x5114;
        /* 0x5118 */ public float Unknown0x5118;
        /* 0x511C */ public float Unknown0x511C;
        /* 0x5120 */ public float Unknown0x5120;
        /* 0x5124 */ public float Unknown0x5124;
        /* 0x5128 */ public float Unknown0x5128;
        /* 0x512C */ public float Unknown0x512C;
        /* 0x5130 */ public float Unknown0x5130;
        /* 0x5134 */ public float Unknown0x5134;
        /* 0x5138 */ public float Unknown0x5138;
        /* 0x513C */ public float Unknown0x513C;
        /* 0x5140 */ public float Unknown0x5140;
        /* 0x5144 */ public float Unknown0x5144;
        /* 0x5148 */ public float Unknown0x5148;
        /* 0x514C */ public float Unknown0x514C;
        /* 0x5150 */ public float Unknown0x5150;
        /* 0x5154 */ public float Unknown0x5154;
        /* 0x5158 */ public float Unknown0x5158;
        /* 0x515C */ public float Unknown0x515C;
        /* 0x5160 */ public float Unknown0x5160;
        /* 0x5164 */ public float Unknown0x5164;
        /* 0x5168 */ public float Unknown0x5168;
        /* 0x516C */ public float Unknown0x516C;
        /* 0x5170 */ public float Unknown0x5170;
        /* 0x5174 */ public float Unknown0x5174;
        /* 0x5178 */ public float Unknown0x5178;
        /* 0x517C */ public float Unknown0x517C;
        /* 0x5180 */ public float Unknown0x5180;
        /* 0x5184 */ public float Unknown0x5184;
        /* 0x5188 */ public float Unknown0x5188;
        /* 0x518C */ public float Unknown0x518C;
        /* 0x5190 */ public float Unknown0x5190;
        /* 0x5194 */ public float Unknown0x5194;
        /* 0x5198 */ public float Unknown0x5198;
        /* 0x519C */ public float Unknown0x519C;
        /* 0x51A0 */ public float Unknown0x51A0;
        /* 0x51A4 */ public float Unknown0x51A4;
        /* 0x51A8 */ public float Unknown0x51A8;
        /* 0x51AC */ public float Unknown0x51AC;
        /* 0x51B0 */ public float Unknown0x51B0;
        /* 0x51B4 */ public float Unknown0x51B4;
        /* 0x51B8 */ public float Unknown0x51B8;
        /* 0x51BC */ public float Unknown0x51BC;
        /* 0x51C0 */ public float Unknown0x51C0;
        /* 0x51C4 */ public float Unknown0x51C4;
        /* 0x51C8 */ public float Unknown0x51C8;
        /* 0x51CC */ public float Unknown0x51CC;
        /* 0x51D0 */ public float Unknown0x51D0;
        /* 0x51D4 */ public float Unknown0x51D4;
        /* 0x51D8 */ public float Unknown0x51D8;
        /* 0x51DC */ public float Unknown0x51DC;
        /* 0x51E0 */ public Colour Unknown0x51E0;
        /* 0x51F0 */ public Colour Unknown0x51F0;
        /* 0x5200 */ public Colour Unknown0x5200;
        /* 0x5210 */ public Colour Unknown0x5210;
        /* 0x5220 */ public Colour Unknown0x5220;
        /* 0x5230 */ public Colour Unknown0x5230;
        /* 0x5240 */ public Colour Unknown0x5240;
        /* 0x5250 */ public Colour Unknown0x5250;
        /* 0x5260 */ public Colour Unknown0x5260;
        /* 0x5270 */ public Colour Unknown0x5270;
        /* 0x5280 */ public float Unknown0x5280;
        /* 0x5284 */ public float Unknown0x5284;
        /* 0x5288 */ public float Unknown0x5288;
        /* 0x528C */ public float Unknown0x528C;
        /* 0x5290 */ public float Unknown0x5290;
        /* 0x5294 */ public float Unknown0x5294;
        /* 0x5298 */ public float Unknown0x5298;
        /* 0x529C */ public float Unknown0x529C;
        /* 0x52A0 */ public float Unknown0x52A0;
        /* 0x52A4 */ public float Unknown0x52A4;
        /* 0x52A8 */ public float Unknown0x52A8;
        /* 0x52AC */ public float Unknown0x52AC;
        /* 0x52B0 */ public float Unknown0x52B0;
        /* 0x52B4 */ public float Unknown0x52B4;
        /* 0x52B8 */ public float Unknown0x52B8;
        /* 0x52BC */ public float Unknown0x52BC;
        /* 0x52C0 */ public float Unknown0x52C0;
        /* 0x52C4 */ public float Unknown0x52C4;
        /* 0x52C8 */ public float Unknown0x52C8;
        /* 0x52CC */ public float Unknown0x52CC;
        /* 0x52D0 */ public float Unknown0x52D0;
        /* 0x52D4 */ public float Unknown0x52D4;
        /* 0x52D8 */ public float HatchPulseSpeed;
        /* 0x52DC */ public float HatchPulseWidth;
        /* 0x52E0 */ public float HatchPulsePauseTime;
        /* 0x52E4 */ public int HatchCount;
        /* 0x52E8 */ public float HatchCursorRadius;
        /* 0x52EC */ public float HatchAlphaMain;
        /* 0x52F0 */ public float HatchAlphaBase;
        /* 0x52F4 */ public float HatchAlphaCursor;
        /* 0x52F8 */ public float FrontendDoFNearPlaneMin;
        /* 0x52FC */ public float FrontendDoFNearPlaneMax;
        /* 0x5300 */ public float FrontendDoFFarPlaneMin;
        /* 0x5304 */ public float FrontendDoFFarPlaneMax;
        /* 0x5308 */ public float FrontendDoFFarPlaneFadeMin;
        /* 0x530C */ public float FrontendDoFFarPlaneFadeMax;
        /* 0x5310 */ public float FrontendDoFBlurMultiplier;
        /* 0x5314 */ public bool FrontendDoFEnableBokeh;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x5315 */ public byte[] Padding5315;
        /* 0x5318 */ public TkCurveType FrontendDoFCurve;
        /* 0x531C */ public float FrontendShineSpeed;
        /* 0x5320 */ public float FrontendToolbarTextHeight;
        /* 0x5324 */ public float FrontendToolbarTextHeightSelected;
        /* 0x5328 */ public float FrontendTitleFontSpacing;
        /* 0x532C */ public float NGuiPadSensitivity;
        /* 0x5330 */ public float NGuiMouseSensitivity;
        /* 0x5334 */ public Vector2f NGuiTouchPadSensitivity;
        /* 0x5340 */ public Colour TargetMarkerColour;
        /* 0x5350 */ public Colour TargetMarkerHighlightColour;
        /* 0x5360 */ public float TargetMarkerScaleStart;
        /* 0x5364 */ public float TargetMarkerScaleEnd;
        /* 0x5368 */ public float TargetMarkerFadeAngleMin;
        /* 0x536C */ public float TargetMarkerFadeAngleRange;
        /* 0x5370 */ public float HitMarkerPulseSize;
        /* 0x5374 */ public float HitMarkerPulseTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x5378 */ public byte[] Padding5374;
        /* 0x5380 */ public Colour WantedColour;
        /* 0x5390 */ public float PlanetPoleMaxDotProduct;
        /* 0x5394 */ public float Unknown0x5394;
        /* 0x5398 */ public float Unknown0x5398;
        /* 0x539C */ public float Unknown0x539C;
        /* 0x53A0 */ public float Unknown0x53A0;
        /* 0x53A4 */ public bool Unknown0x53A4;
        /* 0x53A5 */ public bool Unknown0x53A5;
        /* 0x53A6 */ public bool Unknown0x53A6;
        /* 0x53A7 */ public bool Unknown0x53A7;
        /* 0x53A8 */ public bool Unknown0x53A8;
        /* 0x53A9 */ public bool Unknown0x53A9;
        /* 0x53AA */ public bool Unknown0x53AA;
        /* 0x53AB */ public bool Unknown0x53AB;
        /* 0x53AC */ public bool Unknown0x53AC;
        /* 0x53AD */ public bool Unknown0x53AD;
        /* 0x53B0 */ public float SpaceMapFoV;
        // This whole next section is a bit of a mess and may be inaccurate...
        /* 0x53B4 */ public float SpaceMapAspectRatio;
        /* 0x53B8 */ public float SpaceMapDistanceScale;
        /* 0x53BC */ public float SpaceMapDistanceLogScaler;
        /* 0x53C0 */ public TkCurveType Unknown0x53C0;
        /* 0x53C4 */ public float SpaceMapScaleRangeMin;
        /* 0x53C8 */ public float SpaceMapScaleRangeMax;
        /* 0x53CC */ public float SpaceMapObjectScale;
        /* 0x53D0 */ public float SpaceMapFreighterScale;
        /* 0x53D4 */ public float SpaceMapStationScale;
        /* 0x53D8 */ public float SpaceMapPlanetScale;
        /* 0x53DC */ public float SpaceMapMoonScale;
        /* 0x53E0 */ public float SpaceMapShipScale;
        /* 0x53E4 */ public float SpaceMapOtherPlayerScale;
        /* 0x53E8 */ public float SpaceMapActionScale;
        /* 0x53EC */ public float SpaceMapPlayerScale;
        /* 0x53F0 */ public float SpaceMapMarkerScale;
        /* 0x53F4 */ public float SpaceMapDistance;
        /* 0x53F8 */ public float Unknown0x53F8;
        // Up to here...
        /* 0x53FC */ public float SpaceMapDistanceMultiplier;
        /* 0x5400 */ public float SpaceMapHorizonThickness;
        /* 0x5404 */ public float SpaceMapFadeAngleMin;
        /* 0x5408 */ public float SpaceMapFadeAngleMax;
        /* 0x540C */ public float SpaceMapCamHeight;
        /* 0x5410 */ public float SpaceMapCamAngle;
        /* 0x5414 */ public float SpaceMapCamDistance;
        /* 0x5418 */ public float SpaceMapShipScaleMin;
        /* 0x541C */ public float SpaceMapLightPitch;
        /* 0x5420 */ public float SpaceMapLightYaw;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x5424 */ public byte[] Padding5424;
        /* 0x5430 */ public Colour SpaceMapOtherPlayerColour;
        /* 0x5440 */ public Colour SpaceMapThreatColour;
        /* 0x5450 */ public Vector4f SpaceMapPosScaler;
        /* 0x5460 */ public Colour SpaceMapAttackColour;
        // The order from here...
        /* 0x5470 */ public Colour Unknown0x5470;
        /* 0x5480 */ public Colour Unknown0x5480;
        /* 0x5490 */ public Colour SpaceMapNeutralColour;
        /* 0x54A0 */ public Colour SpaceMapDeathPointColour;
        // To here... Mayb be a bit off...
        /* 0x54B0 */ public GcSpaceMapObjectData SpaceMapMarkerData;
        /* 0x54E0 */ public GcSpaceMapObjectData SpaceMapPlanetData;
        /* 0x5510 */ public GcSpaceMapObjectData SpaceMapStationData;
        /* 0x5540 */ public GcSpaceMapObjectData SpaceMapShipData;
        /* 0x5570 */ public GcSpaceMapObjectData SpaceMapFreighterData;
        /* 0x55A0 */ public GcSpaceMapObjectData Unknown0x55A0;
        /* 0x55D0 */ public Vector2f HUDTargetHealthOffset;
        /* 0x55D8 */ public Vector2f HUDTargetHealthSize;
        /* 0x55E0 */ public Vector2f HUDTargetHealthIconOffset;
        /* 0x55E8 */ public float HUDTargetHealthIconSize;
        /* 0x55EC */ public float HUDTargetHealthDangerTime;
        /* 0x55F0 */ public float HUDTargetMarkerOffset;
        /* 0x55F4 */ public float HUDTargetMarkerSize;
        /* 0x55F8 */ public float HUDTargetIconOffset;
        /* 0x55FC */ public float HUDTargetIconSize;
        /* 0x5600 */ public float HUDMarkerOffset;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x5604 */ public byte[] Padding5604;
        /* 0x5610 */ public Colour HUDMarkerColour;
        /* 0x5620 */ public Colour HUDSpaceshipColour;
        /* 0x5630 */ public Colour HUDRelicMarkerColourDiscovered;
        /* 0x5640 */ public Colour HUDRelicMarkerColourUnknown;
        /* 0x5650 */ public Colour HUDOutpostColour;
        /* 0x5660 */ public Vector2f HUDMarkerPrimaryIndicatorOffset;
        /* 0x5668 */ public Vector2f HUDMarkerCompassPrimaryIndicatorOffset;
        /* 0x5670 */ public NMSString0x100 HUDMarkerIcon;
        /* 0x5770 */ public NMSString0x100 HUDMarkerPrimaryIndicatorIcon;
        /* 0x5870 */ public NMSString0x100 HUDMarkerColourIcon;
        /* 0x5970 */ public NMSString0x100 HUDPointIcon;
        /* 0x5A70 */ public NMSString0x100 HUDSpaceshipIcon;
        /* 0x5B70 */ public NMSString0x100 HUDSaveIcon;
        /* 0x5C70 */ public NMSString0x100 HUDDeathPointIcon;
        /* 0x5D70 */ public NMSString0x100 HUDHexAnimIcon;
        /* 0x5E70 */ public NMSString0x100 HUDCircleAnimIcon;
        /* 0x5F70 */ public float HUDMarkerAnimSpeed;
        /* 0x5F74 */ public float HUDMarkerAnimScale;
        /* 0x5F78 */ public float HUDMarkerAnimOffset;
        /* 0x5F7C */ public float HUDMarkerAnimLoopTime;
        /* 0x5F80 */ public TkCurveType HUDMarkerAnimAlphaCurve;
        /* 0x5F84 */ public TkCurveType HUDMarkerAnimCurve;
        /* 0x5F88 */ public float HUDMarkerPrimaryIndicatorSize;
        /* 0x5F8C */ public float HUDMarkerHoverAngleTestGround;
        /* 0x5F90 */ public float Unknown0x5F90;
        /* 0x5F94 */ public float HUDMarkerWideHoverAngleTest;
        /* 0x5F98 */ public float HUDMarkerHoverAngleTestShip;
        /* 0x5F9C */ public float Unknown0x5F9C;
        /* 0x5FA0 */ public float Unknown0x5FA0;
        /* 0x5FA4 */ public float HUDMarkerShipOffsetMaxDist;
        /* 0x5FA8 */ public float HUDMarkerShipOffsetMinDist;
        /* 0x5FAC */ public float HUDMarkerNearFadeDistance;
        /* 0x5FB0 */ public float HUDMarkerNearFadeRange;
        /* 0x5FB4 */ public float HUDMarkerFarDistance;
        /* 0x5FB8 */ public float HUDMarkerFarFadeRange;
        /* 0x5FBC */ public float HUDMarkerScalerMin;
        /* 0x5FC0 */ public float HUDMarkerScalerRange;
        /* 0x5FC4 */ public float HUDMarkerScalerSizeMin;
        /* 0x5FC8 */ public float HUDMarkerScalerSizeMax;
        /* 0x5FCC */ public float HUDMarkerHorizonBlendRange;
        /* 0x5FD0 */ public float HUDMarkerAlpha;
        /* 0x5FD4 */ public float HUDMarkerModelFadeRange;
        /* 0x5FD8 */ public float HUDMarkerModelFadeMinHeight;
        /* 0x5FDC */ public float HUDMarkerShowActualIconDistance;
        /* 0x5FE0 */ public float HUDMarkerShowActualSpaceIconDistance;
        /* 0x5FE4 */ public float HUDMarkerActiveTime;
        /* 0x5FE8 */ public TkCurveType HUDMarkerActiveCurve;
        /* 0x5FEC */ public float Unknown0x5FEC;
        /* 0x5FF0 */ public float AltimeterResolution;
        /* 0x5FF4 */ public float AltimeterLineSpacing;
        /* 0x5FF8 */ public float AltimeterWidth;
        /* 0x5FFC */ public float AltimeterMin;
        /* 0x6000 */ public float AltimeterMax;
        /* 0x6004 */ public float AltimeterTextSize;
        /* 0x6008 */ public float AltimeterMinValue;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x600C */ public byte[] Padding600Cp;
        /* 0x6010 */ public Colour AltimeterBandColour1;
        /* 0x6020 */ public Colour AltimeterBandColour2;
        /* 0x6030 */ public Colour AltimeterColour1;
        /* 0x6040 */ public Colour AltimeterColour2;
        /* 0x6050 */ public float LockOnMarkerSize;
        /* 0x6054 */ public float LockOnMarkerSizeLock;
        [NMS(Size = 0x08, Ignore = true)]
        /* 0x6058 */ public byte[] Padding6058;
        /* 0x6060 */ public Colour LockOnMarkerActiveColour;
        /* 0x6070 */ public float MissileIconAttackPulseTime;
        /* 0x6074 */ public float MissileIconAttackPulseAmount;
        /* 0x6078 */ public float NGuiModelRotationDegreesX;
        /* 0x607C */ public float NGuiModelRotationDegreesY;
        /* 0x6080 */ public float NGuiModelRotationDegreesZ;
        /* 0x6084 */ public float NGuiModelViewDistanceGlobal;
        /* 0x6088 */ public float NGuiModelViewDistanceSuitPage;
        /* 0x608C */ public float NGuiModelViewDistanceWeaponPage;
        /* 0x6090 */ public float NGuiModelViewDistanceShipPage;
        /* 0x6094 */ public float NGuiModelViewDistanceDiscoveryPage;
        /* 0x6098 */ public float NGuiModelViewFov;
        /* 0x609C */ public float NGuiModelViewCdSmoothTime;
        /* 0x60A0 */ public float NGuiAltPlacementDistanceScrollSpeed;
        /* 0x60A4 */ public float NGuiPlacementAngleScrollSpeed;
        /* 0x60A8 */ public float NGuiModelViewFractionOfBBHeightAboveReflectivePlane;
        [NMS(Size = 0x04, Ignore = true)]
        /* 0x60AC */ public byte[] Padding60AC;
        /* 0x60B0 */ public Vector4f NGuiModelTranslationFactors;
        /* 0x60C0 */ public Vector4f NGuiModelTranslationFactorsInteraction;
        /* 0x60D0 */ public Vector4f NGuiThumbnailModelTranslationFactors;
        /* 0x60E0 */ public float NGuiThumbnailModelRotationDegreesY;
        /* 0x60E4 */ public float NGuiThumbnailModelViewDistance;
        /* 0x60E8 */ public float NGuiCursorOffsetMultiplier;
        /* 0x60EC */ public float NGuiActiveAreaOffsetTime;
        /* 0x60F0 */ public Vector2f NGuiMin2DParallax;
        /* 0x60F8 */ public Vector2f NGuiMax2DParallax;
        /* 0x6100 */ public Vector2f NGuiModelParallax;
        /* 0x6108 */ public Vector2f NGuiShipInteractParallax;
        /* 0x6110 */ public Vector2f InteractionWorldParallax;
        /* 0x6118 */ public float TargetParallaxMouseMultiplier;
        /* 0x611C */ public float TargetParallaxMaintenancePageMultiplier;
        /* 0x6120 */ public float NGuiModelViewFadeInAfterRenderTime;
        /* 0x6124 */ public TkCurveType NGuiModelViewFadeInAfterRenderCurve;
        /* 0x6128 */ public bool NGuiUseSeparateLayersForModelAndReflection;
        [NMS(Size = 0x03, Ignore = true)]
        /* 0x6129 */ public byte[] Padding6129;
        /* 0x612C */ public GcDiscoveryHelperTimings DiscoveryHelperTimings;
        /* 0x6138 */ public GcHUDStartupTable IntroTiming;
        /* 0x61B8 */ public GcInventorySlotActionData InstallTechSlotAction;
        /* 0x61D4 */ public GcInventorySlotActionData BuildProductSlotAction;
        /* 0x61F0 */ public GcInventorySlotActionData ChargeSlotAction;
        /* 0x620C */ public GcInventorySlotActionData RepairSlotAction;
        /* 0x6228 */ public GcInventorySlotActionData NewSlotRevealAction;
        /* 0x6244 */ public GcInventorySlotActionData NewSlotPulseAction;
        /* 0x6260 */ public GcInventorySlotActionData Unknown0x5BA0;
        /* 0x627C */ public float ReportBaseFlashTime;
        /* 0x6280 */ public float ReportBaseFlashIntensity;
        /* 0x6284 */ public float ReportBaseFlashDelay;
        /* 0x6288 */ public int ReportBaseTexWidth;
        /* 0x628C */ public int ReportBaseTexHeight;
        /* 0x6290 */ public float ReportCameraSpeed;
        /* 0x6294 */ public float AmbientModeFadeTime;
        /* 0x6298 */ public bool HideQuickMenuControls;
        /* 0x6299 */ public bool QuickMenuAllowCycle;
        /* 0x629C */ public float TextChatMaxDisplayTime;
        /* 0x62A0 */ public float TextChatStayBigAfterTextInput;
        /* 0x62A4 */ public int BuildingShopMaxItems;
        /* 0x62A8 */ public float Unknown0x62A8;
        /* 0x62AC */ public float Unknown0x62AC;
        /* 0x62B0 */ public float Unknown0x62B0;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x62B4 */ public byte[] EndPadding;
    }
}