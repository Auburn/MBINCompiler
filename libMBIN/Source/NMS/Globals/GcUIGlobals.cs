using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0xB0B5D2A84FF03148, NameHash = 0x95C306B1A90F3E08)]
    public class GcUIGlobals : NMSTemplate
    {
        /* 0x0000 */ public float HoverPopScaleModification;
        /* 0x0004 */ public float HoverPopAnimDuration;
        /* 0x0008 */ public float EyeTrackingTimeBeforePopupsActivate;
        /* 0x000C */ public float EyeTrackingPopupLookAwayTime;
        /* 0x0010 */ public float EyeTrackingCursorBlendRateGameModeSelect;
        /* 0x0014 */ public float EyeTrackingCursorBlendRate;
        /* 0x0018 */ public float EyeTrackingStickyHoverTime;
        /* 0x0020 */ public Colour NetworkPopupTextEnabledColour;
        /* 0x0030 */ public Colour NetworkPopupTextDisabledColour;
        /* 0x0040 */ public bool ShowDifficultyForBases;
        /* 0x0041 */ public bool ShowPadlockForLockedSettings;
        /* 0x0044 */ public int DebugMedalRank;
        [NMS(Size = 0x7, EnumType = typeof(GcWonderType.WonderTypeEnum))]
        /* 0x0048 */ public TkTextureResource[] WonderTypeIcons;
        [NMS(Size = 0xB, EnumType = typeof(GcWonderPlanetCategory.WonderPlanetCategoryEnum))]
        /* 0x03E8 */ public GcWonderCategoryConfig[] WonderPlanetCategoryConfig;
        [NMS(Size = 0xF, EnumType = typeof(GcWonderCreatureCategory.WonderCreatureCategoryEnum))]
        /* 0x0650 */ public GcWonderCategoryConfig[] WonderCreatureCategoryConfig;
        [NMS(Size = 0x8, EnumType = typeof(GcWonderFloraCategory.WonderFloraCategoryEnum))]
        /* 0x0998 */ public GcWonderCategoryConfig[] WonderFloraCategoryConfig;
        [NMS(Size = 0x8, EnumType = typeof(GcWonderMineralCategory.WonderMineralCategoryEnum))]
        /* 0x0B58 */ public GcWonderCategoryConfig[] WonderMineralCategoryConfig;
        [NMS(Size = 0xD, EnumType = typeof(GcWonderTreasureCategory.WonderTreasureCategoryEnum))]
        /* 0x0D18 */ public GcWonderCategoryConfig[] WonderTreasureCategoryConfig;
        [NMS(Size = 0xB, EnumType = typeof(GcWonderWeirdBasePartCategory.WonderWeirdBasePartCategoryEnum))]
        /* 0x0FF0 */ public GcWonderCategoryConfig[] WonderWeirdBasePartCategoryConfig;
        [NMS(Size = 0xC, EnumType = typeof(GcWonderCustomCategory.WonderCustomCategoryEnum))]
        /* 0x1258 */ public GcWonderCategoryConfig[] WonderCustomCategoryConfig;
        /* 0x14F8 */ public TkCurveType PadCursorUICurve;
        /* 0x1500 */ public Colour JoaoBoxCompletedObjectiveColour;
        /* 0x1510 */ public Colour InvSlotGradientBaseColour;
        /* 0x1520 */ public float InvSlotGradientFactorMin;
        /* 0x1524 */ public float InvSlotGradientFactor;
        /* 0x1528 */ public float InvSlotGradientTime;
        /* 0x1530 */ public Colour SuperchargePopupColour;
        /* 0x1540 */ public Colour SuperchargeGradientBaseColour;
        /* 0x1550 */ public Colour SuperchargeGradientBlendColour;
        /* 0x1560 */ public Colour SuperchargeGradientTechColour;
        /* 0x1570 */ public float SuperchargeGradientFactorMin;
        /* 0x1574 */ public float SuperchargeGradientFactor;
        /* 0x1578 */ public float SuperchargeGradientTime;
        /* 0x157C */ public float GridDecayRateSwitchValue;
        /* 0x1580 */ public float PadCursorUICurveStrength;
        /* 0x1584 */ public bool ReplaceItemBarWithNumbers;
        /* 0x1588 */ public NMSString0x10 DebugInventoryHint;
        /* 0x1598 */ public int MaxSubstanceMaxAmountForAmountFraction;
        /* 0x159C */ public bool UseSquareSlots;
        /* 0x159D */ public bool BigPicking;
        /* 0x159E */ public bool BigPickingUsesNumbers;
        /* 0x15A0 */ public float FreighterMegaWarpTransitionTime;
        /* 0x15A4 */ public bool EnablePopupUses;
        /* 0x15A5 */ public bool TechBoxesCanStack;
        /* 0x15A8 */ public int UnknownWordsToShowInCatalogue;
        /* 0x15AC */ public bool UseIntermediateMissionGiverOptions;
        /* 0x15B0 */ public float SentinelsDisabledHUDMessageTime;
        /* 0x15B4 */ public float UseZoomedOutBuildCamRadius;
        /* 0x15B8 */ public float ParagraphAutoScrollSpeed;
        /* 0x15BC */ public bool AutoScrollParagraphs;
        /* 0x15C0 */ public float GameModeSelectColourFadeTime;
        /* 0x15C4 */ public float EggModifiyAnimMaxSize;
        /* 0x15C8 */ public float EggModifiyAnimLoopTime;
        /* 0x15CC */ public int SeasonFinalStageIndex;
        /* 0x15D0 */ public List<GcSeasonalRingArray> SeasonalRingTable;
        /* 0x15E0 */ public float SeasonalRingMultiplier;
        /* 0x15E4 */ public float SeasonalRingPulseTime;
        /* 0x15E8 */ public float SeasonalRingChangeTime;
        /* 0x15EC */ public float MinSeasonPlayTimeInDays;
        /* 0x15F0 */ public float ExpeditionStageChangeTime;
        /* 0x15F4 */ public float MilestoneStingDisplayTime;
        /* 0x15F8 */ public float StageStingDisplayTime;
        /* 0x15FC */ public float EndOfSeasonAlertDelay;
        /* 0x1600 */ public int ShowHoursIfLessThan;
        /* 0x1604 */ public int ShowDaysIfLessThan;
        /* 0x1608 */ public int ShowWeeksIfLessThan;
        /* 0x1610 */ public NMSString0x10 ExplorationLogMissionID;
        /* 0x1620 */ public int ForceOpenHazardProtInventoryThreshold;
        /* 0x1624 */ public float PlanetDataExtraRadius;
        /* 0x1628 */ public float StackSizeRateChangeRate;
        /* 0x162C */ public float StackSizeChangeMinRate;
        /* 0x1630 */ public float StackSizeChangeMaxRate;
        /* 0x1634 */ public float ClosestDoorMarkerBuffer;
        /* 0x1638 */ public bool SkipShopIntro;
        /* 0x163C */ public float ZoomFactorOverride;
        /* 0x1640 */ public float HandheldZoomFactor;
        /* 0x1644 */ public float PlacedMarkerFadeTime;
        /* 0x1648 */ public float LoadingTravelDistance;
        /* 0x164C */ public float LoadingScreenTravelSpeed;
        /* 0x1650 */ public float LoadingScreenTime;
        /* 0x1654 */ public float OSDMessagePauseOffscreenAngle;
        /* 0x1658 */ public float QuickMenuCentrePos;
        /* 0x165C */ public float QuickMenuSideOffset;
        /* 0x1660 */ public float QuickMenuCentreSideOffset;
        /* 0x1664 */ public float InWorldInteractLabelScale;
        /* 0x1668 */ public float InWorldInteractLabelScaleV2;
        /* 0x166C */ public float InWorldScreenScaleDistance;
        /* 0x1670 */ public Vector2f InWorldInteractLabelAlignment;
        /* 0x1680 */ public Vector3f InWorldInteractLabelCentreOffset;
        /* 0x1690 */ public Vector3f InWorldInteractLabelTopOffset;
        /* 0x16A0 */ public Vector3f InWorldInteractLabelLineOffset;
        /* 0x16B0 */ public float InWorldInteractLabelMinHeadOffset;
        /* 0x16B4 */ public float InWorldInteractLabelNearDistance;
        /* 0x16B8 */ public float InWorldInteractLabelNearRange;
        /* 0x16BC */ public float InWorldInteractLabelFarDistance;
        /* 0x16C0 */ public float InWorldInteractLabelFarRange;
        /* 0x16C4 */ public float ShipHUDMarkerHideDistance;
        /* 0x16C8 */ public float ShipHUDMarkerOffset;
        /* 0x16CC */ public float ExocraftHUDMarkerHideDistance;
        /* 0x16D0 */ public float ExocraftHUDMarkerOffset;
        /* 0x16D4 */ public float PetSlotUnlockBounceTime;
        /* 0x16D8 */ public float PetHUDMarkerExtraFollowInfoDistance;
        /* 0x16DC */ public float PetHUDMarkerHideDistance;
        /* 0x16E0 */ public float PetHUDMarkerHideDistanceShort;
        /* 0x16E4 */ public float PetHUDMarkerOffset;
        /* 0x16E8 */ public float PetMoodMarkerOffset;
        /* 0x16EC */ public float BeaconHUDMarkerOffset;
        /* 0x16F0 */ public Vector2f BinocularEdgeFade;
        /* 0x16F8 */ public float BinocularScreenOffset;
        /* 0x16FC */ public float BinocularScreenScale;
        /* 0x1700 */ public float BinocularMarkerSideAngle;
        /* 0x1704 */ public float BinocularMarkerUpAngle;
        /* 0x1708 */ public bool BinocularScanScreen;
        /* 0x170C */ public float BinocularsNearIconOpacity;
        /* 0x1710 */ public float BinocularsNearIconDist;
        /* 0x1714 */ public float BinocularsNearIconFadeDist;
        /* 0x1718 */ public float BinocularsMidIconOpacity;
        /* 0x171C */ public float BinocularsFarIconOpacity;
        /* 0x1720 */ public float BinocularsFarIconDist;
        /* 0x1724 */ public float BinocularsFarIconFadeDist;
        /* 0x1728 */ public float AlignmentRequiredToDisableFrostedGlass;
        /* 0x1730 */ public Vector3f BinocularPanelLinePointOffset;
        /* 0x1740 */ public float GalmapDiscoveryOffsetVR;
        /* 0x1744 */ public float FrontendOffsetVR;
        /* 0x1748 */ public float ProjectorScale;
        /* 0x174C */ public float MaxProjectorDistanceFromDefault;
        /* 0x1750 */ public float ProjectorGrabResetTime;
        /* 0x1754 */ public bool AllowProjectorRepositioning;
        /* 0x1758 */ public float MaxProjectorGrabDistance;
        /* 0x175C */ public float ProjectorGrabDistanceBias;
        /* 0x1760 */ public float ProjectorGrabBorderPercent;
        /* 0x1764 */ public float CockpitGlassFrostTime;
        /* 0x1768 */ public float CockpitGlassDefrostTime;
        /* 0x176C */ public float TextPrintoutMultiplier;
        /* 0x1770 */ public float TextPrintoutMultiplierAlien;
        /* 0x1774 */ public bool EnableHandMenuButtons;
        /* 0x1775 */ public bool AllowInWorldDebugBorders;
        /* 0x1778 */ public Vector2f MarkerDistanceVRAlignment;
        /* 0x1780 */ public float CompassIconOffsetVR;
        /* 0x1784 */ public float LowerHelmetScreenScale;
        /* 0x1788 */ public float LowerHelmetScreenPitch;
        /* 0x1790 */ public Vector3f LowerHelmetScreenOffset;
        /* 0x17A0 */ public float InWorldScreenMinScreenDistance;
        /* 0x17A4 */ public float InWorldScreenForwardOffset;
        /* 0x17A8 */ public float InWorldNGuiScreenScale;
        /* 0x17B0 */ public Vector3f InWorldNGuiScreenRotation;
        /* 0x17C0 */ public Vector2f InWorldNGuiParallax;
        /* 0x17C8 */ public Vector2f InWorldGameGuiAlignment;
        /* 0x17D0 */ public int InWorldInteractLabelWidth;
        /* 0x17D4 */ public int InWorldInteractLabelHeight;
        /* 0x17D8 */ public NMSString0x20 VRDistanceWarningUIFile;
        /* 0x17F8 */ public bool ShowVRDistanceWarning;
        /* 0x1800 */ public Vector3f FaceLockedScreenOffset;
        /* 0x1810 */ public int VRFaceLockedScreenWidth;
        /* 0x1814 */ public int VRFaceLockedScreenHeight;
        /* 0x1818 */ public bool OnlyShowEjectHandlesInVR;
        /* 0x181C */ public int CompassScreenWidth;
        /* 0x1820 */ public int CompassScreenHeight;
        /* 0x1824 */ public float CompassLineContractionStartAngle;
        /* 0x1828 */ public float CompassLineContractionEndAngle;
        /* 0x182C */ public float CompassLineContractionTargetAngle;
        /* 0x1830 */ public int CompassLineNumNotches;
        /* 0x1834 */ public float CompassLineThickness;
        /* 0x1838 */ public float CompassLineOffset;
        /* 0x183C */ public float CompassLineNotchAngleRange;
        /* 0x1840 */ public float CompassLineNotchThickness;
        /* 0x1844 */ public float CompassLineNotchLength;
        /* 0x1848 */ public bool EnableHandMenuDebug;
        /* 0x184C */ public float HandControlMenuCursorScale;
        /* 0x1850 */ public float QuickMenuCursorScale;
        /* 0x1854 */ public float QuickMenuAlpha;
        /* 0x1858 */ public float HandScreenGraphicsWidth;
        /* 0x185C */ public float HandScreenGraphicsHeight;
        /* 0x1860 */ public float HandScreenNearActivateDistance;
        /* 0x1864 */ public float HandButtonRadius;
        /* 0x1868 */ public float HandButtonRadiusTouch;
        /* 0x186C */ public float HandButtonRadiusTouchNear;
        /* 0x1870 */ public float HandButtonRadiusTouchNearActive;
        /* 0x1874 */ public float HandButtonPostClickTime;
        /* 0x1878 */ public float HandButtonReleaseThreshold;
        /* 0x187C */ public float HandButtonReleaseThresholdInit;
        /* 0x1880 */ public float HandButtonCursorScale;
        /* 0x1884 */ public float HandButtonPushDistance;
        /* 0x1888 */ public float HandButtonNearDistance;
        /* 0x188C */ public float HandButtonRadiusClick;
        /* 0x1890 */ public float HandButtonClickTime;
        /* 0x1894 */ public float HandButtonTouchReturnTime;
        /* 0x1898 */ public float HandButtonFrontendCursorScale;
        /* 0x189C */ public float HandButtonThickness;
        /* 0x18A0 */ public float HandButtonDotRadius;
        /* 0x18A4 */ public float HandButtonPulseRadius;
        /* 0x18A8 */ public float HandButtonPulseThickness;
        /* 0x18AC */ public float ShipSideScreenHeight;
        /* 0x18B0 */ public float SolidPointerScale;
        /* 0x18B4 */ public float SolidPointerLengthScale;
        /* 0x18B8 */ public float SolidPointerMaxLength;
        /* 0x18BC */ public float InWorldInteractionScreenScale;
        /* 0x18C0 */ public float InWorldNPCInteractionScreenScale;
        /* 0x18C4 */ public bool EnableCraftingTree;
        /* 0x18C5 */ public bool QuickMenuEnableSwipe;
        /* 0x18C8 */ public float QuickMenuSwipeHeightMin;
        /* 0x18CC */ public float QuickMenuSwipeHeightMax;
        /* 0x18D0 */ public float BuildMenuItemNavAnimTime;
        /* 0x18D4 */ public float BuildMenuItemNextNavAnimTime;
        /* 0x18D8 */ public float BuildMenuItemNextNavAnimWait;
        /* 0x18DC */ public float QuickMenuInteractAdjustX;
        /* 0x18E0 */ public float QuickMenuInteractAdjustY;
        /* 0x18E4 */ public int QuickMenuScreenWidth;
        /* 0x18E8 */ public int QuickMenuScreenHeight;
        /* 0x18EC */ public float QuickMenuHighlightRate;
        /* 0x18F0 */ public float HandControlButtonSize;
        /* 0x18F4 */ public float HandControlPointMargin;
        /* 0x18F8 */ public float HandControlPointActiveMargin;
        /* 0x18FC */ public float HandControlMenuMoveDistance;
        /* 0x1900 */ public float HandControlMenuMoveDistanceScroll;
        /* 0x1904 */ public float HandControlMenuMoveDistanceVertical;
        /* 0x1908 */ public float HandControlMenuMoveActionDistance;
        /* 0x190C */ public float HandControlMenuAngle;
        /* 0x1910 */ public float HandControlMenuSurfaceOffset;
        /* 0x1914 */ public float HandControlMenuSelectRadius;
        /* 0x1918 */ public float HandControlMenuSelectRadius1;
        /* 0x191C */ public float HandControlMenuSelectRadius2;
        /* 0x1920 */ public float HandControlTopMenuSelectRadius;
        /* 0x1924 */ public int HandScreenWeaponWidth;
        /* 0x1928 */ public int HandScreenWeaponHeight;
        /* 0x192C */ public int HandScreenWidth;
        /* 0x1930 */ public int HandScreenHeight;
        /* 0x1940 */ public Colour DebugEditorAxisColourUpInactive;
        /* 0x1950 */ public Colour DebugEditorAxisColourUpActive;
        /* 0x1960 */ public Colour DebugEditorAxisColourRightInactive;
        /* 0x1970 */ public Colour DebugEditorAxisColourRightActive;
        /* 0x1980 */ public Colour DebugEditorAxisColourAtInactive;
        /* 0x1990 */ public Colour DebugEditorAxisColourAtActive;
        /* 0x19A0 */ public Colour QuickMenuSelectedItemColour1;
        /* 0x19B0 */ public Colour QuickMenuSelectedItemColour2;
        /* 0x19C0 */ public TkModelRendererData ShipThumbnailModelView;
        /* 0x1A70 */ public TkModelRendererData PetThumbnailModelView;
        /* 0x1B20 */ public TkModelRendererData MultitoolThumbnailModelView;
        /* 0x1BD0 */ public TkModelRendererData LargeMultitoolThumbnailModelView;
        /* 0x1C80 */ public Colour FrontendCursorBackgroundColour;
        /* 0x1C90 */ public float NGuiHmdOffset;
        /* 0x1C94 */ public float HmdFramerateScreenPitch;
        /* 0x1CA0 */ public Vector3f HmdFramerateScreenOffset;
        /* 0x1CB0 */ public float CrosshairScaleHmd;
        /* 0x1CB4 */ public float CrosshairOffsetHmd;
        /* 0x1CB8 */ public float CrosshairOffsetHmdUp;
        /* 0x1CBC */ public int CrosshairScreenWidth;
        /* 0x1CC0 */ public int CrosshairScreenHeight;
        /* 0x1CC4 */ public float HUDMarkerHoverAngleTestGroundHmd;
        /* 0x1CC8 */ public float HUDMarkerWideHoverAngleTestHmd;
        /* 0x1CCC */ public bool InteractionInWorldPlayerCamAlways;
        /* 0x1CD0 */ public float InteractionInWorldPitchDistance;
        /* 0x1CD4 */ public float InteractionInWorldMinScreenDistance;
        /* 0x1CD8 */ public float InteractionInWorldMinScreenDistanceV2;
        /* 0x1CDC */ public float InteractionInWorldSeatedNPCHeightAdjust;
        /* 0x1CE0 */ public float InteractionInWorldSeatedNPCHeightAdjustV2;
        /* 0x1CE4 */ public float ShipHologramInWorldUIHeightAdjust;
        /* 0x1CE8 */ public float ShipHologramInWorldUIHeightAdjustV2;
        /* 0x1CEC */ public float ShopInteractionInWorldForcedOffset;
        /* 0x1CF0 */ public float ShopInteractionInWorldForcedOffsetV2;
        /* 0x1CF4 */ public float TravelTargetRadius;
        /* 0x1CF8 */ public float TravelLineThickness;
        /* 0x1D00 */ public Colour TravelLineColour;
        /* 0x1D10 */ public Colour TravelLineTooFarColour;
        /* 0x1D20 */ public Colour TravelLineTooSteepColour;
        /* 0x1D30 */ public Colour TravelLineInvalidColour;
        /* 0x1D40 */ public Colour TravelLineNotAllowedColour;
        /* 0x1D50 */ public Colour TravelTargetColour;
        /* 0x1D60 */ public bool AlwaysCloseQuickMenu;
        /* 0x1D61 */ public bool UseWorldNodesForRepair;
        /* 0x1D62 */ public bool RepairTechUseTechIcon;
        /* 0x1D63 */ public bool DebugMissionLogText;
        /* 0x1D64 */ public bool DebugShowMaintenanceScreenCentre;
        /* 0x1D65 */ public bool DebugPopupSizes;
        /* 0x1D66 */ public bool DebugInventoryIndices;
        /* 0x1D67 */ public bool FixedInventoryIconPositions;
        /* 0x1D70 */ public GcHUDEffectRewardData OSDRareItemRewardEffect;
        /* 0x1DD0 */ public GcHUDEffectRewardData OSDEpicItemRewardEffect;
        /* 0x1E30 */ public float OSDMessageQueueSpeedMultiplier;
        /* 0x1E34 */ public int OSDMessageQueueMin;
        /* 0x1E38 */ public int OSDMessageQueueMax;
        /* 0x1E3C */ public float PopupValueSectionBaseHeight;
        /* 0x1E40 */ public float PopupValueSectionHeight;
        /* 0x1E50 */ public Colour ProcProductColourCommon;
        /* 0x1E60 */ public Colour ProcProductColourUncommon;
        /* 0x1E70 */ public Colour ProcProductColourRare;
        /* 0x1E80 */ public List<Vector2f> InventoryIconPositions;
        /* 0x1E90 */ public Colour PickedItemBorderColour;
        /* 0x1EA0 */ public Colour MultiplayerMissionParticipantsColour;
        /* 0x1EB0 */ public NMSString0x10 MultiplayerMissionInteractStartTrigger;
        /* 0x1EC0 */ public NMSString0x10 MultiplayerMissionInteractEndTrigger;
        /* 0x1ED0 */ public float NotificationHazardMinTimeAfterRecharge;
        /* 0x1ED4 */ public float LoadFadeInDefaultTime;
        /* 0x1ED8 */ public float DroneIndicatorRadius;
        /* 0x1EDC */ public float DroneIndicatorCentreRadiusMax;
        /* 0x1EE0 */ public float DroneIndicatorCentreRadiusMin;
        /* 0x1EE4 */ public float DroneIndicatorFadeRange;
        /* 0x1EE8 */ public float WantedDetectMessageTime;
        /* 0x1EEC */ public float WantedDetectMinTimeout;
        /* 0x1EF0 */ public float TakeoffFuelMessageTime;
        /* 0x1EF4 */ public float MarkerHorizonOffsetAngle;
        /* 0x1EF8 */ public float MarkerHorizonMinOffset;
        /* 0x1EFC */ public float MarkerHorizonApproachAngle;
        /* 0x1F00 */ public float MarkerOffsetTypeAngle;
        /* 0x1F04 */ public float MarkerOffsetTypeAngleBattle;
        /* 0x1F08 */ public float MarkerOffsetTypeAngleBounty;
        /* 0x1F0C */ public float MarkerOffsetTypeAnglePlayerShip;
        /* 0x1F10 */ public float MarkerOffsetTypeAngleAsteroid;
        /* 0x1F14 */ public float MarkerHorizonOffPlanetLightBeamAngle;
        /* 0x1F18 */ public float MarkerHorizonShipApproachOffset;
        /* 0x1F1C */ public float TransferPopupCursorOffsetFactor;
        /* 0x1F20 */ public float ScannableIconMergeAngle;
        /* 0x1F24 */ public float CreatureIconMergeAngle;
        /* 0x1F28 */ public int MaxNumMessageBeaconIcons;
        /* 0x1F2C */ public float MissionObjectiveBaseHeight;
        /* 0x1F30 */ public float MissionObjectiveDoneHeight;
        /* 0x1F34 */ public float MissionObjectiveScrollingExtra;
        /* 0x1F38 */ public float MissionDetailsPageBaseHeight;
        /* 0x1F3C */ public float MarkerTagAppearDelay;
        /* 0x1F40 */ public Vector2f CompassCentre;
        /* 0x1F48 */ public float CompassHeight;
        /* 0x1F4C */ public float CompassWidth;
        /* 0x1F50 */ public float CompassDistanceScaleMin;
        /* 0x1F54 */ public float CompassDistanceScaleRange;
        /* 0x1F58 */ public float CompassDistanceSpaceScaleMin;
        /* 0x1F5C */ public float CompassDistanceSpaceScaleRange;
        /* 0x1F60 */ public float CompassDistanceScale;
        /* 0x1F64 */ public float CompassDistanceShipMinScale;
        /* 0x1F68 */ public float CompassDistanceMarkerMinScale;
        /* 0x1F6C */ public float CompassDistanceMaxAngle;
        /* 0x1F70 */ public float CompassDistanceYOffset;
        /* 0x1F74 */ public float CompassAngleClamp;
        /* 0x1F78 */ public float CompassAngleFade;
        /* 0x1F7C */ public TkCurveType CompassCurve;
        /* 0x1F80 */ public float CompassAngleClampSpace;
        /* 0x1F84 */ public float BaseComplexityDangerFactor;
        /* 0x1F88 */ public float BaseComplexityWarningFactor;
        /* 0x1F90 */ public Colour BaseComplexityDefaultColour;
        /* 0x1FA0 */ public Colour BaseComplexityWarningColour;
        /* 0x1FB0 */ public Colour BaseComplexityDangerColour;
        /* 0x1FC0 */ public float BuildMenuActionMessageDuration;
        [NMS(Size = 0x10, EnumType = typeof(GcBuildMenuOption.BuildMenuOptionEnum))]
        /* 0x1FC8 */ public NMSString0x20A[] BuildMenuOnActionLocIDs;
        [NMS(Size = 0x10, EnumType = typeof(GcBuildMenuOption.BuildMenuOptionEnum))]
        /* 0x21C8 */ public NMSString0x20A[] BuildMenuOnActionDisabledLocIDs;
        [NMS(Size = 0x10, EnumType = typeof(GcBuildMenuOption.BuildMenuOptionEnum))]
        /* 0x23C8 */ public NMSString0x20A[] BuildMenuOnActionErrorLocIDs;
        [NMS(Size = 0x10, EnumType = typeof(GcBuildMenuOption.BuildMenuOptionEnum))]
        /* 0x25C8 */ public bool[] BuildMenuUseSmallIconOnPad;
        /* 0x25E0 */ public Colour BuildMenuPassiveErrorTextColour;
        /* 0x25F0 */ public Colour BuildMenuPassiveErrorTextOutlineColour;
        /* 0x2600 */ public Colour BuildMenuErrorTextColour;
        /* 0x2610 */ public Colour BuildMenuErrorTextOutlineColour;
        /* 0x2620 */ public Colour BuildMenuErrorTextFlashColour;
        /* 0x2630 */ public Colour BuildMenuErrorTextOutlineFlashColour;
        /* 0x2640 */ public Colour BuildMenuInfoTextColour;
        /* 0x2650 */ public Colour BuildMenuInfoTextOutlineColour;
        /* 0x2660 */ public float IconGlowStrengthError;
        /* 0x2664 */ public float IconGlowStrengthActive;
        /* 0x2668 */ public float IconGlowStrengthNeutral;
        /* 0x266C */ public float IconGlowStrengthHighlight;
        /* 0x2670 */ public Colour IconGlowColourError;
        /* 0x2680 */ public Colour IconGlowColourActive;
        /* 0x2690 */ public Colour IconGlowColourNeutral;
        /* 0x26A0 */ public Colour IconGlowColourHighlight;
        /* 0x26B0 */ public float BaseBuildingPinHighlightDuration;
        /* 0x26B4 */ public float BaseBuildingInputHighlightDuration;
        /* 0x26B8 */ public float BaseBuildingInputHighlightAlpha;
        /* 0x26BC */ public float BaseBuildingScaleSpeed;
        /* 0x26C0 */ public float BaseBuildingMinFreeRotateSpeed;
        /* 0x26C4 */ public float BaseBuildingMaxFreeRotateSpeed;
        /* 0x26C8 */ public float BaseBuildingTimeToMaxRotationSpeed;
        /* 0x26CC */ public float BaseBuildingRotationResetRate;
        /* 0x26D0 */ public float BaseBuildingFreeRotateSpeedPadMultiplier;
        /* 0x26D4 */ public float BaseBuildingFreeRotateDelayBeforeReset;
        /* 0x26D8 */ public float BaseBuildingFreeRotateDelayBeforeAudioStops;
        /* 0x26DC */ public bool BaseBuildingSmoothMenuWhileSnapped;
        /* 0x26E0 */ public float BaseBuildingUIHorizontalSafeArea;
        /* 0x26E4 */ public float BaseBuildingUIVerticalSafeArea;
        /* 0x26E8 */ public float BaseBuildingUIVerticalPosWiring;
        /* 0x26EC */ public float BaseBuildingUIVerticalOffset;
        /* 0x26F0 */ public float BaseBuildingUIVerticalOffsetEdit;
        /* 0x26F4 */ public float BaseBuildingUIVerticalOffsetFromBB;
        /* 0x26F8 */ public float BaseBuildingUIErrorFadeTime;
        /* 0x26FC */ public float BaseBuildingUIAdjustTime;
        /* 0x2700 */ public float BaseBuildingPartsGridMaxCursorRestorationTime;
        /* 0x2704 */ public float BaseBuildingPartsGridBreadcrumbFlashDuration;
        /* 0x2708 */ public float BaseBuildingPartsGridMinVisibilityForActive;
        /* 0x270C */ public float BaseBuildingPartsGridScrollSpeed;
        /* 0x2710 */ public float BaseBuildingPartsGridPopupDelay;
        /* 0x2714 */ public TkTextureResource BaseBuildingPartsGridExpandableIcon;
        /* 0x2798 */ public TkTextureResource BaseBuildingPartsGridExpandedIcon;
        /* 0x281C */ public TkTextureResource BaseBuildingPartsGridRetractableIcon;
        /* 0x28A0 */ public float MarkerRingInnerRadius;
        /* 0x28A4 */ public float MarkerRingOuterRadius;
        /* 0x28B0 */ public Colour MarkerRingBGColour;
        /* 0x28C0 */ public float RepairTechRepairedWaitTime1;
        /* 0x28C4 */ public float RepairTechRepairedWaitTime2;
        /* 0x28C8 */ public float RepairTechRepairedMessageTime;
        /* 0x28CC */ public float TechPopupRepairLayerHeight;
        /* 0x28D0 */ public float TechPopupBuildLayerHeight;
        /* 0x28D4 */ public float TechPopupRequirementHeight;
        /* 0x28D8 */ public float DamageTrackArrowTime;
        /* 0x28DC */ public bool EnableBlackouts;
        /* 0x28E0 */ public float HUDMarkerObjectMinScreenDistance;
        /* 0x28E4 */ public float HUDMarkerDistanceOrTimeDistance;
        /* 0x28E8 */ public float MarkerComponentOffset;
        /* 0x28EC */ public float RepairTechLabelOffset;
        /* 0x28F0 */ public float MaintenanceIconFadeStart;
        /* 0x28F4 */ public float MaintenanceIconFadeTime;
        /* 0x2900 */ public TkModelRendererData RepairCamera;
        /* 0x29B0 */ public TkModelRendererData RepairWeaponCamera;
        /* 0x2A60 */ public TkModelRendererData RepairBackpackCamera;
        /* 0x2B10 */ public TkModelRendererData RepairShipCameraInWorld;
        /* 0x2BC0 */ public TkModelRendererData RepairShipCameraModelView;
        /* 0x2C70 */ public TkModelRendererData RepairShipCameraVR;
        /* 0x2D20 */ public List<TkModelRendererData> VehicleTypeRepairCamera;
        /* 0x2D30 */ public Vector2f BinocularsDiscoveryPos;
        /* 0x2D40 */ public Colour InteractionLabelCostColour;
        /* 0x2D50 */ public Colour InteractionLabelPickupColour;
        /* 0x2D60 */ public Colour InteractionLabelPickupFillColour;
        /* 0x2D70 */ public Vector2f PersonalRefinerInputPos;
        /* 0x2D78 */ public Vector2f PersonalRefinerOutputPos;
        /* 0x2D80 */ public TkTextureResource RefinerPopupEmptyOutputIcon;
        /* 0x2E04 */ public float RefinerPadStartTime;
        /* 0x2E08 */ public float RefinerPadStartDecayTime;
        /* 0x2E0C */ public float RefinerBeginDialInnerRadius;
        /* 0x2E10 */ public float RefinerProgressDialInnerRadius;
        /* 0x2E20 */ public Vector3f DefaultRefinerOffsetIn;
        /* 0x2E30 */ public Vector3f DefaultRefinerOffsetOut;
        /* 0x2E40 */ public Vector2f RefinerParallax;
        /* 0x2E48 */ public Vector2f ModelViewWorldParallax;
        /* 0x2E50 */ public Vector2f HUDPlayerSentinelPulseFreq;
        /* 0x2E58 */ public Vector2f HUDPlayerSentinelPulseSize;
        /* 0x2E60 */ public float HUDPlayerSentinelPulseWidth;
        /* 0x2E64 */ public float HUDPlayerSentinelRangeFactor;
        /* 0x2E68 */ public float HUDPlayerSentinelPulseScanFreq;
        /* 0x2E6C */ public float HUDPlayerPhonePulseScanFreq;
        /* 0x2E70 */ public float RefinerAutoCloseTime;
        /* 0x2E80 */ public Colour RefinerBackgroundColour;
        /* 0x2E90 */ public Colour RefinerErrorBackgroundColour;
        /* 0x2EA0 */ public Colour GridDisconnectedColour;
        /* 0x2EB0 */ public Colour GridOnlineColour;
        /* 0x2EC0 */ public Colour GridOfflineColour;
        /* 0x2ED0 */ public Colour GridBackgroundNeutralColour;
        /* 0x2EE0 */ public Colour GridBackgroundPositiveColour;
        /* 0x2EF0 */ public Colour GridBackgroundNegativeColour;
        /* 0x2F00 */ public Colour TransferSendPopupColour;
        /* 0x2F10 */ public float BountyMarkerOffset;
        /* 0x2F14 */ public float PlanetRaidMarkerOffset;
        /* 0x2F18 */ public float TransitionOffset;
        /* 0x2F1C */ public float PageTurnTime;
        /* 0x2F20 */ public TkCurveType PageTurnCurve;
        /* 0x2F21 */ public TkCurveType PageTurnFadeCurve;
        /* 0x2F24 */ public float LowHealthShieldMin;
        /* 0x2F28 */ public float LowHealthShieldFactor;
        /* 0x2F2C */ public int MaxDialogCharSizeRoman;
        /* 0x2F30 */ public NMSString0x20 MaxDialogCharSizeRomanString;
        /* 0x2F50 */ public int MaxDialogCharSizeIdeographic;
        /* 0x2F54 */ public NMSString0x20 MaxDialogCharSizeIdeographicString;
        /* 0x2F74 */ public float ShipOverheatSwitchMessageWait;
        /* 0x2F78 */ public float ShipOverheatSwitchMessageTime;
        /* 0x2F7C */ public bool LeadTargetEnabled;
        /* 0x2F7D */ public bool SpaceOnlyLeadTargetEnabled;
        /* 0x2F80 */ public Vector2f SaveIconPosition;
        /* 0x2F88 */ public float MissionStartEndTime;
        /* 0x2F8C */ public float MissionStartEndOSDTime;
        /* 0x2F90 */ public float MissionStartEndOSDTimeProcedural;
        /* 0x2F94 */ public float StandingRewardOSDTime;
        /* 0x2FA0 */ public Colour MissionOSDMessageBarColour;
        /* 0x2FB0 */ public Colour NotificationDefaultColour;
        /* 0x2FC0 */ public Colour NotificationDangerColour;
        /* 0x2FD0 */ public Colour NotificationInfoColour;
        /* 0x2FE0 */ public Colour NotificationUrgentColour;
        /* 0x2FF0 */ public float ShipDamageDirectionIndicatorRadius;
        /* 0x2FF4 */ public float ShipDamageDirectionIndicatorFadeRange;
        /* 0x2FF8 */ public float OnFootDamageDirectionIndicatorRadius;
        /* 0x2FFC */ public float OnFootDamageDirectionIndicatorFadeRange;
        /* 0x3000 */ public float DamageDirectionIndicatorOnScreenRadiusMultiplier;
        /* 0x3004 */ public Vector2f DialogPageCursorOffset;
        /* 0x300C */ public Vector2f IntermediateInteractionPageCursorOffset;
        /* 0x3014 */ public Vector2f CursorlessDialogPageCursorOffset;
        /* 0x301C */ public int MissionSpecificMissionPercent;
        /* 0x3020 */ public int MissionLoopCount;
        /* 0x3024 */ public int MissionSeedOffset;
        /* 0x3030 */ public Vector3f SpaceMapCockpitOffset;
        /* 0x3040 */ public float SpaceMapCockpitScale;
        /* 0x3044 */ public float SpaceMapCockpitScaleAdjustDropShip;
        /* 0x3048 */ public float SpaceMapCockpitScaleAdjustFighter;
        /* 0x304C */ public float SpaceMapCockpitScaleAdjustScientific;
        /* 0x3050 */ public float SpaceMapCockpitScaleAdjustShuttle;
        /* 0x3054 */ public float SpaceMapCockpitScaleAdjustRoyal;
        /* 0x3058 */ public float SpaceMapCockpitScaleAdjustSail;
        /* 0x305C */ public float SpaceMapCockpitScaleAdjustAlien;
        /* 0x3060 */ public float SpaceMapCockpitScaleAdjustRobot;
        /* 0x3064 */ public float SpaceMapCockpitAngle;
        /* 0x3068 */ public float TargetDisplayScale;
        /* 0x306C */ public float TargetDisplayShipScale;
        /* 0x3070 */ public Vector3f TargetDisplayShipOffset;
        /* 0x3080 */ public float TargetDisplayDamageFlashTime;
        /* 0x3090 */ public GcScanEffectData TargetDisplayScanEffect;
        /* 0x30E0 */ public bool ProgressiveDialogStyle;
        /* 0x30E4 */ public float CommunicatorMessageTime;
        /* 0x30F0 */ public Colour CommunicatorMessageColour;
        /* 0x3100 */ public float GridFlickerBaseAlpha;
        /* 0x3104 */ public float GridFlickerFreq;
        /* 0x3108 */ public float GridFlickerAmp;
        /* 0x310C */ public float HUDMarkerLabelWidthMultiplier;
        /* 0x3110 */ public float HUDMarkerLabelBaseWidth;
        /* 0x3114 */ public float HUDMarkerLabelArriveDistance;
        /* 0x3118 */ public float HUDMarkerLabelDisplayDistance;
        /* 0x311C */ public float HUDMarkerNonActiveMissionAlpha;
        /* 0x3120 */ public bool DebugMarkerLabels;
        /* 0x3130 */ public GcScanEffectData DebugEditorPreviewEffect;
        /* 0x3180 */ public bool ShowDamageNumbers;
        /* 0x3184 */ public float QuickMenuCloseTime;
        /* 0x3188 */ public float QuickMenuErrorTime;
        /* 0x318C */ public float FrontendWaitResponse;
        /* 0x3190 */ public float FrontendWaitInitial;
        /* 0x3194 */ public float FrontendWaitInitialTerminal;
        /* 0x3198 */ public float FrontendWaitFadeTextOut;
        /* 0x319C */ public float FrontendWaitFadeTextFrameOut;
        /* 0x31A0 */ public float FrontendWaitFadeProgressiveDialogOut;
        /* 0x31A4 */ public float FrontendWaitResponseOffset;
        /* 0x31A8 */ public float TalkBoxAlienTextSpeed;
        /* 0x31AC */ public float TalkBoxAlienTextTimeMin;
        /* 0x31B0 */ public float TalkBoxAlienTextTimeMax;
        /* 0x31B4 */ public float DescriptionTextDelay;
        /* 0x31B8 */ public float DescriptionTextSpeed;
        /* 0x31BC */ public float DescriptionTextSpeedProgressive;
        /* 0x31C0 */ public float DescriptionTextTimeMin;
        /* 0x31C4 */ public float DescriptionTextTimeMax;
        /* 0x31C8 */ public float ConsoleTextSpeed;
        /* 0x31CC */ public float ConsoleTextTimeMin;
        /* 0x31D0 */ public float ConsoleTextTimeMax;
        /* 0x31D4 */ public float HoverOffscreenBorder;
        /* 0x31D8 */ public float HoverOffscreenBorderVR;
        /* 0x31DC */ public float TransferSendOffscreenBorder;
        /* 0x31E0 */ public float TimedEventLookTime;
        /* 0x31E4 */ public float CreatureDistanceSize;
        /* 0x31E8 */ public float CreatureDistanceOffsetY;
        /* 0x31EC */ public float CreatureDistanceShadowOffset;
        /* 0x31F0 */ public float CreatureDistanceDisplayAngle;
        /* 0x31F4 */ public float CreatureDistanceFadeTime;
        /* 0x31F8 */ public float CreatureDistanceAlpha;
        /* 0x31FC */ public bool ShowOnscreenPredatorMarkers;
        /* 0x3200 */ public float DamageImpactMergeTime;
        /* 0x3204 */ public float DamageImpactTimeBetweenNumbers;
        /* 0x3208 */ public float DamageImpactMinDistance;
        /* 0x320C */ public float DamagePerSecondSampleTime;
        /* 0x3210 */ public float DamageNumberTime;
        /* 0x3214 */ public float DamageNumberSizeInShip;
        /* 0x3218 */ public float DamageNumberSize;
        /* 0x321C */ public float DamageNumberSizeCritMultiplier;
        /* 0x3220 */ public float DamageNumberSizeLaserMultiplier;
        /* 0x3224 */ public float DamageNumberLaserMinDamage;
        /* 0x3228 */ public float DamageNumberLaserMaxDamage;
        /* 0x322C */ public float DamageNumberBlackAlpha;
        /* 0x3230 */ public float DamageNumberOutline;
        /* 0x3234 */ public float DamageNumberOutline2;
        /* 0x3238 */ public float DamageNumberOffsetX;
        /* 0x323C */ public float DamageNumberOffsetY;
        /* 0x3240 */ public Vector2f DamageNumberSideSpeed;
        /* 0x3248 */ public float DamageNumberFadeIn;
        /* 0x324C */ public float DamageNumberFadeOut;
        /* 0x3250 */ public float DamageNumberUpOffset;
        /* 0x3254 */ public TkCurveType DamageNumberUpCurve;
        /* 0x3260 */ public Colour DamageNumberCriticalColour;
        /* 0x3270 */ public Colour DamageNumberIneffectiveColour;
        /* 0x3280 */ public Colour DamageNumberIneffectiveWarningColour;
        /* 0x3290 */ public Colour PhotoModeSelectedColour;
        /* 0x32A0 */ public Colour PhotoModeUnselectedColour;
        /* 0x32B0 */ public Colour FuelBgColour;
        /* 0x32C0 */ public float PhotoModeValueAlpha;
        /* 0x32C4 */ public float PhotoModeTimeofDayChange;
        /* 0x32C8 */ public float FrigateIconOffset;
        /* 0x32CC */ public float CreatureIconOffset;
        /* 0x32D0 */ public float CreatureIconOffsetPhysics;
        /* 0x32D4 */ public float DelayBeforeHidingHangarAfterGalaxyMap;
        /* 0x32D8 */ public float DelayBeforeShowingHangarIntoGalaxyMap;
        /* 0x32DC */ public float FreighterSummonTurn;
        /* 0x32E0 */ public float FreighterSummonPitch;
        /* 0x32E4 */ public float FreighterSummonOffset;
        /* 0x32E8 */ public float FreighterSummonOffsetPulse;
        /* 0x32EC */ public float FreighterSummonDelay;
        /* 0x32F0 */ public int FreighterSummonTurnNumTries;
        /* 0x32F4 */ public float FreighterSummonTurnAngleIncrement;
        /* 0x32F8 */ public float FreighterSummonGridSize;
        /* 0x32FC */ public float FreighterCommanderMarkerMinDistance;
        /* 0x3300 */ public float FreighterSurfaceMinAngle;
        /* 0x3304 */ public float FreighterSummonPulseRate;
        /* 0x3308 */ public float FreighterSummonPulseFadeAmount;
        /* 0x330C */ public float FreighterSummonPlanetOffset;
        /* 0x3310 */ public float FreighterSummonLookTime;
        /* 0x3314 */ public float FreighterHighlightRange;
        /* 0x3320 */ public GcScanEffectData FreighterSummonScanEffect;
        /* 0x3370 */ public Colour FreighterSummonScanEffectColourBlocked;
        /* 0x3380 */ public Colour FreighterSummonScanEffectColourHighlight;
        /* 0x3390 */ public float PirateCountdownTime;
        /* 0x3394 */ public float PirateAttackIndicatorWidth;
        /* 0x3398 */ public float PirateAttackIndicatorRadius;
        /* 0x339C */ public float PirateAttackProbeDisplayFinishFactor;
        /* 0x33A0 */ public float HazardArrowsLevel2Threshold;
        /* 0x33A4 */ public float HazardArrowsLevel3Threshold;
        /* 0x33A8 */ public float ArrowBounceLength;
        /* 0x33AC */ public float ArrowBounceRate;
        /* 0x33B0 */ public float ArrowBounceRightRate1;
        /* 0x33B4 */ public float ArrowBounceRightRate2;
        /* 0x33B8 */ public TkCurveType ArrowBounceRightCurve;
        /* 0x33BC */ public float ArrowBounceLeftRate1;
        /* 0x33C0 */ public float ArrowBounceLeftRate2;
        /* 0x33C4 */ public float ArrowBounceLeftRate3;
        /* 0x33C8 */ public TkCurveType ArrowBounceLeftCurve;
        /* 0x33CC */ public float PlanetScanDelayTime;
        /* 0x33D0 */ public float AlwaysShowIconFadeDistance;
        /* 0x33D4 */ public float AlwaysShowIconFadeRange;
        /* 0x33D8 */ public float FrigatePurchaseNotificationResetDistanceMultiplier;
        /* 0x33DC */ public float FrigateDamageIconVisibilityDistance;
        /* 0x33E0 */ public float FreighterLeaderIconDistance;
        /* 0x33E4 */ public float FreighterEntranceOffset;
        /* 0x33E8 */ public float ShipHeadsUpDisplayDistance;
        /* 0x33EC */ public float ShipHeadsUpLineFadeTime;
        /* 0x33F0 */ public float CrosshairAimTime;
        /* 0x33F4 */ public float CrosshairAimOffTime;
        /* 0x33F8 */ public float CrosshairInnerMinFade;
        /* 0x33FC */ public float CrosshairInnerMinFadeRange;
        /* 0x3400 */ public float CrosshairLeadScaleIn;
        /* 0x3404 */ public float CrosshairLeadInDelay;
        /* 0x3408 */ public float CrosshairLeadInTime;
        /* 0x340C */ public float CrosshairLeadCornerOffset;
        /* 0x3410 */ public float CrosshairLeadTopOffset;
        /* 0x3414 */ public float CrosshairLeadTopLock;
        /* 0x3418 */ public float CrosshairLeadPulseSize;
        /* 0x341C */ public TkCurveType CrosshairLeadScaleCurve;
        /* 0x3420 */ public float CrosshairSpringTime;
        /* 0x3424 */ public float CrosshairSpringAimTime;
        /* 0x3428 */ public float CrosshairLeadSpring;
        /* 0x342C */ public float CrosshairLeadSpringOff;
        /* 0x3430 */ public float CrosshairLeadFadeRange;
        /* 0x3434 */ public float CrosshairLeadFadeSize;
        /* 0x3440 */ public Colour CrosshairLeadThreatColour;
        /* 0x3450 */ public Colour CrosshairLeadPassiveColour;
        /* 0x3460 */ public float CrosshairInterceptSize;
        /* 0x3464 */ public float CrosshairInterceptBaseSize;
        /* 0x3468 */ public float CrosshairInterceptCentreBaseSize;
        /* 0x346C */ public float CrosshairInterceptSpringTime;
        /* 0x3470 */ public float CrosshairInterceptAlpha;
        /* 0x3474 */ public float CrosshairInterceptLockRange;
        /* 0x3478 */ public float CrosshairTargetLockSize;
        [NMS(Size = 0x13, EnumType = typeof(GcPlayerWeapons.WeaponModeEnum))]
        /* 0x347C */ public float[] CrosshairTargetLockSizeSpecific;
        /* 0x34C8 */ public TkCurveType CrosshairTargetLockCurve;
        /* 0x34C9 */ public TkCurveType CrosshairTargetLockAlphaCurve;
        /* 0x34D0 */ public Colour CrosshairColour;
        /* 0x34E0 */ public TkHitCurveData CrosshairLeadHitCurve;
        /* 0x34EC */ public TkHitCurveData ShootableHitCurve;
        /* 0x34F8 */ public int ControlScrollSteps;
        /* 0x34FC */ public float ControlScrollDistance;
        /* 0x3500 */ public Colour SelectedControlColour;
        /* 0x3510 */ public Colour RemappedControlColour;
        /* 0x3520 */ public float MissionCompassIconScaler;
        /* 0x3524 */ public float MissionMarkerSize;
        /* 0x3528 */ public float CreatureRoutineMarkerTime;
        /* 0x352C */ public int CreatureRoutineRegionsPerFrame;
        /* 0x3530 */ public float SpaceMarkersOffset;
        /* 0x3534 */ public float SpaceMarkersBattleOffset;
        /* 0x3538 */ public float LargeSpaceIconSize;
        /* 0x353C */ public float SmallSpaceIconSize;
        /* 0x3540 */ public float PetHoverIconSize;
        /* 0x3544 */ public float PetIconSize;
        /* 0x3548 */ public Vector2f TrackTypeIconOffset;
        /* 0x3550 */ public float TrackTypeIconSize;
        /* 0x3554 */ public float TrackPrimaryCentreOffset;
        /* 0x3558 */ public float TrackPoliceFreighterCentreOffset;
        /* 0x355C */ public float TrackTimerAlpha;
        /* 0x3560 */ public float TrackTimerRadarPulseSize;
        /* 0x3564 */ public float TrackTimerIconOuterRadius;
        /* 0x3568 */ public float TrackTimerIconInnerRadius;
        /* 0x356C */ public float TrackTimerIconExclaimRadius;
        /* 0x3570 */ public float MissileCentreOffset;
        /* 0x3574 */ public float TrackMissileTargetPulseRate;
        /* 0x3578 */ public float TrackScaleCritical;
        /* 0x357C */ public float TrackScaleHit;
        /* 0x3580 */ public float TrackLeadTargetInScale;
        /* 0x3584 */ public float TrackReticuleScale;
        /* 0x3588 */ public float TrackReticuleAngle;
        /* 0x358C */ public float TrackReticuleInTime;
        /* 0x3590 */ public float TrackReticuleInactiveTime;
        /* 0x3594 */ public float TrackReticuleRandomTime;
        /* 0x3598 */ public float TrackReticuleRandomDelay;
        /* 0x359C */ public TkCurveType TrackReticuleInCurve;
        /* 0x359D */ public TkCurveType TrackReticuleInAngleCurve;
        /* 0x35A0 */ public float CreatureReticuleScale;
        /* 0x35A4 */ public TkCurveType CreatureReticuleScaleCurve;
        /* 0x35A5 */ public TkCurveType CreatureReticuleAlphaCurve;
        /* 0x35A6 */ public bool CreatureInteractLabelUseBB;
        /* 0x35A8 */ public float CreatureInteractLabelOffsetY;
        /* 0x35AC */ public float HUDDroneHealingPulse;
        /* 0x35B0 */ public float HUDDroneSummoningPulse;
        /* 0x35B4 */ public float HUDDroneCombatPulse;
        /* 0x35B8 */ public float HUDPlayerTrackNoSightPulse;
        /* 0x35BC */ public float HUDPlayerTrackTimerStart;
        /* 0x35C0 */ public float HUDPlayerTrackTimerStartFade;
        /* 0x35C4 */ public float HUDPlayerTrackTimerEnd;
        /* 0x35C8 */ public float HUDPlayerTrackTimerPulseRate;
        /* 0x35CC */ public TkCurveType TrackCritCurve;
        /* 0x35D0 */ public Vector2f TrackCriticalHitOffset;
        /* 0x35D8 */ public float TrackCriticalHitSize;
        /* 0x35DC */ public float TrackCriticalPulseTime;
        /* 0x35E0 */ public float ThirdPersonCrosshairDistance;
        /* 0x35E4 */ public float ThirdPersonCrosshairCircle1Distance;
        /* 0x35E8 */ public float ThirdPersonCrosshairCircle2Distance;
        /* 0x35EC */ public float HUDPlayerTrackArrowShipLabelOffset;
        /* 0x35F0 */ public float HUDPlayerTrackArrowIconPulseTime;
        /* 0x35F4 */ public float HUDPlayerTrackArrowIconShowTime;
        /* 0x35F8 */ public float HUDPlayerTrackArrowIconFadeTime;
        /* 0x35FC */ public Vector2f HUDPlayerTrackArrowIconPulseSize;
        /* 0x3604 */ public float HUDPlayerTrackArrowIconPulseWidth1;
        /* 0x3608 */ public float HUDPlayerTrackArrowIconPulseWidth2;
        /* 0x360C */ public float HUDPlayerTrackArrowIconPulse2Alpha;
        /* 0x3610 */ public float HUDPlayerTrackArrowIconFadeDistShip;
        /* 0x3614 */ public float HUDPlayerTrackArrowIconFadeDistDrone;
        /* 0x3618 */ public float HUDPlayerTrackArrowIconFadeDist;
        /* 0x361C */ public float HUDPlayerTrackArrowIconFadeRange;
        /* 0x3620 */ public float HUDPlayerTrackArrowIconFadeRangeShip;
        /* 0x3624 */ public float HUDPlayerTrackArrowIconBorderReducerShip;
        /* 0x3628 */ public float HUDPlayerTrackArrowPulseOffset;
        /* 0x362C */ public float HUDPlayerTrackArrowPulseRate;
        /* 0x3630 */ public Vector2f HUDPlayerTrackIconOffset;
        /* 0x3638 */ public float ShipFullscreenDamperMin;
        /* 0x363C */ public float ShipFullscreenDamper;
        /* 0x3640 */ public float ShipDesatDamper;
        /* 0x3644 */ public float ScanEventArrowShipFadeRange;
        /* 0x3648 */ public float ScanEventArrowShipFadeDistance;
        /* 0x364C */ public float ScanEventArrowPlayerFadeRange;
        /* 0x3650 */ public float ScanEventArrowPlayerFadeDistance;
        /* 0x3654 */ public float ScanEventArrowOffsetMultiplier;
        /* 0x3658 */ public float ScanEventArrowOffsetMultiplierOneEvent;
        /* 0x365C */ public float ScanEventArrowSecondaryAlpha;
        /* 0x3660 */ public GcAudioWwiseEvents ScanEventIconAudio;
        /* 0x3664 */ public TkNGuiRectanglePulseEffect PulseBarData;
        /* 0x3674 */ public TkNGuiRectanglePulseEffect PulseIconData;
        /* 0x3690 */ public Colour PulseDamageColour;
        /* 0x36A0 */ public Colour PulseAlertColour;
        /* 0x36B0 */ public float TechDisplayDelayTime;
        /* 0x36B4 */ public float CriticalMessageTime;
        /* 0x36B8 */ public int NumDeathQuotes;
        /* 0x36C0 */ public NMSString0x10 ShowStatWithDeathQuote;
        /* 0x36D0 */ public bool EnableKanaConversion;
        /* 0x36D4 */ public float HUDDisplayTime;
        /* 0x36D8 */ public float HUDPlayerTrackDangerPulse;
        /* 0x36DC */ public float HUDPlayerTrackArrowTextOffset;
        /* 0x36E0 */ public float HUDPlayerTrackArrowTextHeight;
        /* 0x36F0 */ public Colour HUDPlayerTrackArrowTextColour;
        /* 0x3700 */ public float HUDPlayerTrackArrowHealthOffset;
        /* 0x3704 */ public Vector2f HUDPlayerTrackArrowHealthSize;
        /* 0x3710 */ public Colour HUDPlayerTrackArrowEnergyShieldColour;
        /* 0x3720 */ public Colour HUDPlayerTrackArrowEnergyShieldLowColour;
        /* 0x3730 */ public float HUDPlayerTrackArrowEnergyShieldLowThreshold;
        /* 0x3734 */ public float HUDPlayerTrackArrowEnergyShieldOffset;
        /* 0x3738 */ public Vector2f HUDPlayerTrackArrowEnergyShieldSize;
        /* 0x3740 */ public float HUDPlayerTrackArrowGlowBaseOpacity;
        /* 0x3744 */ public float HUDPlayerTrackArrowDamageGlowHullHitCriticalOpacityScale;
        /* 0x3748 */ public float HUDPlayerTrackArrowDamageGlowHullHitOpacityScale;
        /* 0x3750 */ public Colour HUDPlayerTrackArrowDamageGlowHullHitMaxColour;
        /* 0x3760 */ public Colour HUDPlayerTrackArrowDamageGlowHullHitMinColour;
        /* 0x3770 */ public float HUDPlayerTrackArrowDamageGlowShieldHitCriticalOpacityScale;
        /* 0x3774 */ public float HUDPlayerTrackArrowDamageGlowShieldHitOpacityScale;
        /* 0x3780 */ public Colour HUDPlayerTrackArrowDamageGlowShieldHitMaxColour;
        /* 0x3790 */ public Colour HUDPlayerTrackArrowDamageGlowShieldHitMinColour;
        /* 0x37A0 */ public float HUDPlayerTrackArrowDamageGlowOffset;
        /* 0x37A4 */ public Vector2f HUDPlayerTrackArrowDamageGlowSize;
        /* 0x37AC */ public float HUDPlayerTrackArrowEnergyShieldGlowOffset;
        /* 0x37B0 */ public Vector2f HUDPlayerTrackArrowEnergyShieldGlowSize;
        /* 0x37B8 */ public float HUDPlayerTrackArrowEnergyShieldDepletedGlowOpacityScale;
        /* 0x37BC */ public float HUDPlayerTrackArrowEnergyShieldDepletedTime;
        /* 0x37C0 */ public TkCurveType HUDPlayerTrackArrowEnergyShieldDepletedCurve;
        /* 0x37D0 */ public Colour HUDPlayerTrackArrowEnergyShieldDepletedGlowMaxColour;
        /* 0x37E0 */ public Colour HUDPlayerTrackArrowEnergyShieldDepletedGlowMinColour;
        /* 0x37F0 */ public float HUDPlayerTrackArrowEnergyShieldStartChargeGlowOpacityScale;
        /* 0x37F4 */ public float HUDPlayerTrackArrowEnergyShieldStartChargeTime;
        /* 0x37F8 */ public TkCurveType HUDPlayerTrackArrowEnergyShieldStartChargeCurve;
        /* 0x3800 */ public Colour HUDPlayerTrackArrowEnergyShieldStartChargeGlowMaxColour;
        /* 0x3810 */ public Colour HUDPlayerTrackArrowEnergyShieldStartChargeGlowMinColour;
        /* 0x3820 */ public float HUDPlayerTrackArrowTargetDistShip;
        /* 0x3824 */ public float HUDPlayerTrackArrowTargetDist;
        /* 0x3828 */ public float HUDPlayerTrackArrowOffset;
        /* 0x382C */ public float HUDPlayerTrackArrowScreenBorder;
        /* 0x3830 */ public float HUDPlayerTrackArrowSize;
        /* 0x3834 */ public float HUDPlayerTrackArrowSizeMin;
        /* 0x3838 */ public float HUDPlayerTrackArrowSizeMax;
        /* 0x383C */ public float HUDPlayerTrackArrowIconSize;
        /* 0x3840 */ public float HUDPlayerTrackArrowSmallIconSize;
        /* 0x3844 */ public float HUDPlayerTrackArrowArrowSize;
        /* 0x3848 */ public float HUDPlayerTrackArrowDotSize;
        /* 0x3850 */ public Colour HUDPlayerTrackArrowDotColour;
        /* 0x3860 */ public Colour HUDPlayerTrackArrowDotColourPolice;
        /* 0x3870 */ public Colour HUDPlayerTrackArrowDotColourPirate;
        /* 0x3880 */ public Colour HUDPlayerTrackArrowDotColourTrader;
        /* 0x3890 */ public Colour HUDWarningColour;
        /* 0x38A0 */ public Colour HUDNotifyColour;
        /* 0x38B0 */ public float HUDPlayerTrackArrowMinFadeDist;
        /* 0x38B4 */ public float HUDPlayerTrackArrowFadeRange;
        [NMS(Size = 0x4, EnumType = typeof(GcGalaxyStarTypes.GalaxyStarTypeEnum))]
        /* 0x38C0 */ public Colour[] SystemHooverLEDColours;
        [NMS(Size = 0x4, EnumType = typeof(GcGalaxyStarTypes.GalaxyStarTypeEnum))]
        /* 0x3900 */ public Colour[] SystemHooverStatusBarColours;
        /* 0x3940 */ public float GalaxyMapRadialBorder;
        /* 0x3944 */ public float GalaxyMapRadialTargetDist;
        /* 0x3948 */ public float IconBackgroundAlpha;
        /* 0x394C */ public float WantedLevelWitnessPulseRate;
        /* 0x3950 */ public float WantedLevelWitnessOffset;
        /* 0x3954 */ public float WantedLevelTimeoutPulseRate;
        /* 0x3958 */ public float WantedLevelWitnessAlpha;
        /* 0x395C */ public float WantedLevelScanAlpha;
        /* 0x3960 */ public float WantedLevelScannedRate;
        /* 0x3968 */ public List<NMSString0x80> StatIcons;
        /* 0x3978 */ public bool ShowJetpackNotificationForNonTerrain;
        /* 0x397C */ public float StatsMessageDelayTime;
        /* 0x3980 */ public float SeasonMessageDelayTime;
        /* 0x3984 */ public bool HideExtremePlanetNotifications;
        /* 0x3988 */ public float NotificationBackgroundGradientEndOffsetPercentInShip;
        /* 0x398C */ public float NotificationBackgroundGradientAlphaInShip;
        /* 0x3990 */ public int NotificationsResourceExtractHintCount;
        /* 0x3994 */ public float NotificationStaminaHintDistanceWalked;
        /* 0x3998 */ public float NotificationMinVisibleTime;
        /* 0x399C */ public float NotificationHazardSafeThreshold;
        /* 0x39A0 */ public float NotificationHazardTimer;
        /* 0x39A4 */ public float NotificationInteractHintStartTime;
        /* 0x39A8 */ public float NotificationBuildHintStartTime;
        /* 0x39AC */ public float NotificationJetpackTime;
        /* 0x39B0 */ public float NotificationShieldTime;
        /* 0x39B4 */ public float NotificationShipBoostTime;
        /* 0x39B8 */ public float NotificationShipBoostTimeVR;
        /* 0x39BC */ public float NotificationCantFireTime;
        /* 0x39C0 */ public float NotificationDangerTime;
        /* 0x39C4 */ public float NotificationScanTime;
        /* 0x39C8 */ public float NotificationScanTimeCutoff;
        /* 0x39CC */ public float NotificationMessageCycleTime;
        /* 0x39D0 */ public float NotificationMaxPageHintTime;
        /* 0x39D4 */ public float NotificationShipJumpMinTime;
        /* 0x39D8 */ public float NotificationShipJumpReminderTime;
        /* 0x39DC */ public float NotificationShipJumpReminderTutorial;
        /* 0x39E0 */ public float NotificationShipBoostMinTime;
        /* 0x39E4 */ public float NotificationShipBoostReminderTime;
        /* 0x39E8 */ public float NotificationShipBoostReminderTimeTutorial;
        /* 0x39EC */ public float LandNotifySpeedThreshold;
        /* 0x39F0 */ public float LandNotifyHeightThreshold;
        /* 0x39F4 */ public float LandNotifyTimeThreshold;
        /* 0x39F8 */ public float NotificationTimeBeforeHeridiumMarker;
        /* 0x39FC */ public float NotificationUrgentMessageTime;
        /* 0x3A00 */ public float NotificationGoToSpaceStationWait;
        /* 0x3A04 */ public float NotificationMonolithMissionWait;
        /* 0x3A08 */ public float NotificationFinalMissionWait;
        /* 0x3A0C */ public float NotificationWaypointReachDistance;
        /* 0x3A10 */ public float NotificationBridgeReachDistance;
        /* 0x3A14 */ public float NotificationDiscoveryIdleTime;
        /* 0x3A18 */ public float NotificationInfoIdleTime;
        /* 0x3A1C */ public float NotificationNewTechIdleTime;
        /* 0x3A20 */ public float NotificationScanEventMissionIdleTime;
        /* 0x3A24 */ public float NotificationDeviceIdleTime;
        /* 0x3A28 */ public float NotificationMissionHintTime;
        /* 0x3A2C */ public float NotificationMissionHintTimeCritical;
        /* 0x3A30 */ public float NotificationMissionHintTimeSecondary;
        /* 0x3A34 */ public Vector2f NotificationMissionHintPauseTime;
        /* 0x3A3C */ public Vector2f NotificationMissionHintPauseTimeCritical;
        /* 0x3A44 */ public Vector2f NotificationMissionHintPauseTimeSecondary;
        /* 0x3A4C */ public float TooltipTime;
        /* 0x3A50 */ public float InventoryIconTime;
        /* 0x3A54 */ public float MessageNotificationTime;
        /* 0x3A58 */ public float MessageTimeQuick;
        /* 0x3A5C */ public float ItemReceivedMessageTimeToAdd;
        /* 0x3A60 */ public float DeathMessageSwitchTime;
        /* 0x3A64 */ public float DeathMessageTotalTime;
        /* 0x3A70 */ public Colour DeathMessageColour;
        /* 0x3A80 */ public Colour PinnedRecipeBorder;
        /* 0x3A90 */ public NMSString0x20 DistanceUnitM;
        /* 0x3AB0 */ public NMSString0x20 DistanceUnitKM;
        /* 0x3AD0 */ public NMSString0x20 DistanceUnitMpS;
        /* 0x3AF0 */ public float ZoomHUDElementsOffsetX;
        /* 0x3AF4 */ public float ZoomHUDElementsOffsetY;
        /* 0x3AF8 */ public float ZoomHUDElementTime;
        /* 0x3AFC */ public float HUDElementsOffsetHMDSide;
        /* 0x3B00 */ public float HUDElementsOffsetHMDTop;
        /* 0x3B04 */ public float HUDElementsOffsetHMDBottom;
        /* 0x3B08 */ public float HUDElementsOffsetX_0;
        /* 0x3B0C */ public float HUDElementsOffsetY_0;
        /* 0x3B10 */ public float HUDElementsOffsetX_1;
        /* 0x3B14 */ public float HUDElementsOffsetY_1;
        /* 0x3B18 */ public float HUDElementsOffsetX_2;
        /* 0x3B1C */ public float HUDElementsOffsetY_2;
        /* 0x3B20 */ public float HUDElementsOffsetX_3;
        /* 0x3B24 */ public float HUDElementsOffsetY_3;
        /* 0x3B28 */ public float HUDElementsOffsetX_4;
        /* 0x3B2C */ public float HUDElementsOffsetY_4;
        /* 0x3B30 */ public float HUDElementsOffsetX_5;
        /* 0x3B34 */ public float HUDElementsOffsetY_5;
        /* 0x3B38 */ public GcWorldUISettings WorldUISettings;
        /* 0x3B88 */ public float PauseMenuHoldTime;
        /* 0x3B8C */ public Vector2f PlanetLabelOffset;
        /* 0x3B94 */ public Vector2f PlanetMeasureOffset;
        /* 0x3B9C */ public Vector2f PlanetLineOffset;
        /* 0x3BA4 */ public float PlanetLabelTime;
        /* 0x3BA8 */ public float PlanetLabelAngle;
        /* 0x3BB0 */ public Colour ItemSlotColourSubstance;
        /* 0x3BC0 */ public Colour ItemSlotColourTech;
        /* 0x3BD0 */ public Colour ItemSlotColourTechCharge;
        /* 0x3BE0 */ public Colour ItemSlotColourTechDamage;
        /* 0x3BF0 */ public Colour ItemSlotColourPartiallyInstalled;
        /* 0x3C00 */ public float ItemSlotColourTechChargeRate;
        /* 0x3C10 */ public Colour ItemSlotColourProduct;
        /* 0x3C20 */ public Colour ItemSlotTextColourSubstance;
        /* 0x3C30 */ public Colour ItemSlotTextColourTech;
        /* 0x3C40 */ public Colour ItemSlotTextColourProduct;
        /* 0x3C50 */ public float InteractionScanScanTime;
        /* 0x3C54 */ public float InteractionScanMinTime;
        /* 0x3C58 */ public float InteractionScanDisplayTime;
        /* 0x3C5C */ public float InteractionScanSlapTime;
        /* 0x3C60 */ public float InteractionScanSlapScale;
        /* 0x3C64 */ public float InteractionScanSlapOverallTime;
        /* 0x3C68 */ public TkCurveType InteractionScanSlapCurve;
        /* 0x3C6C */ public float ShipHUDMissileLockSizeMin;
        /* 0x3C70 */ public float ShipHUDMissileLockSizeMax;
        /* 0x3C74 */ public float ShipHUDMissileLockSpringSlow;
        /* 0x3C78 */ public float ShipHUDMissileLockSpringFast;
        /* 0x3C7C */ public float ShipHUDMaxOffscreenTargetDist;
        /* 0x3C80 */ public float ShipHUDTargetRadius;
        /* 0x3C84 */ public float ShipHUDTargetTriangleRadius;
        /* 0x3C88 */ public float ShipHUDTargetAlpha;
        /* 0x3C8C */ public float ShipHUDTargetArrowLength;
        /* 0x3C90 */ public float ShipHUDTargetMinDist;
        /* 0x3C94 */ public float ShipHUDTargetRange;
        /* 0x3C98 */ public float ShipHUDTargetScale;
        /* 0x3C9C */ public float ShipHUDTargetArrowsRotationRate;
        /* 0x3CA0 */ public Colour ShipHUDTargetArrowsColourOutOfRange;
        /* 0x3CB0 */ public Colour ShipHUDTargetArrowsColourThreat;
        /* 0x3CC0 */ public Colour ShipHUDTargetArrowsColourLocal;
        /* 0x3CD0 */ public List<Colour> ShipHUDTargetArrowsColour;
        /* 0x3CE0 */ public Colour ShipHUDAimTargetColour;
        /* 0x3CF0 */ public Colour ShipHUDAimTargetCritColour;
        /* 0x3D00 */ public float ShipHUDHitPointTime;
        /* 0x3D04 */ public float ShipHUDHitPointSize;
        /* 0x3D08 */ public float TargetScreenFoV;
        /* 0x3D0C */ public float TargetScreenDistance;
        /* 0x3D10 */ public Vector2f TargetScreenCamOffset;
        /* 0x3D18 */ public float InventoryFullMessageRepeatTime;
        /* 0x3D1C */ public float HoldTimerResetTime;
        /* 0x3D20 */ public bool ModelRendererBGPass;
        /* 0x3D21 */ public bool ModelRendererPass1;
        /* 0x3D22 */ public bool ModelRendererPass2;
        /* 0x3D24 */ public float HazardScreenEffectPulseRate;
        /* 0x3D28 */ public float KeepHazardBarActiveTime;
        /* 0x3D2C */ public float KeepSecondHazardBarActiveTime;
        /* 0x3D30 */ public float HazardBarPulseTime;
        /* 0x3D34 */ public float HazardScreenEffectPulseTime;
        /* 0x3D38 */ public float HazardScreenEffectStrength;
        /* 0x3D3C */ public float HazardWarningPulseTime;
        /* 0x3D40 */ public float HazardWarningPulseStrength;
        /* 0x3D44 */ public float HazardPainPulseStrength;
        /* 0x3D48 */ public float ShieldSpringTime;
        /* 0x3D4C */ public float ShieldPulseTime;
        /* 0x3D50 */ public float ShieldHazardPulseRate;
        /* 0x3D54 */ public bool ShieldHUDAlwaysOn;
        /* 0x3D58 */ public float ShieldHazardPulseThreshold;
        /* 0x3D5C */ public float AlwaysOnHazardThreshold;
        /* 0x3D60 */ public float AlwaysOnHazardStrengthTox;
        /* 0x3D64 */ public float AlwaysOnHazardStrengthHeat;
        /* 0x3D68 */ public float AlwaysOnHazardStrengthRad;
        /* 0x3D6C */ public float AlwaysOnHazardStrengthCold;
        /* 0x3D70 */ public float AlwaysOnHazardMultiplierTox;
        /* 0x3D74 */ public float AlwaysOnHazardMultiplierHeat;
        /* 0x3D78 */ public float AlwaysOnHazardMultiplierRad;
        /* 0x3D7C */ public float AlwaysOnHazardMultiplierCold;
        /* 0x3D80 */ public float HazardPulseRate;
        /* 0x3D88 */ public List<NMSString0x80> HazardTextures;
        /* 0x3D98 */ public List<NMSString0x80> HazardNormalMaps;
        /* 0x3DA8 */ public List<NMSString0x80> HazardHeightmaps;
        /* 0x3DB8 */ public NMSString0x80 CamoTexture;
        /* 0x3E38 */ public NMSString0x80 CamoNormalTexture;
        /* 0x3EB8 */ public float IconPulseRate;
        /* 0x3EC0 */ public Colour EnergyBgColour;
        /* 0x3ED0 */ public Colour EnergyBgPulseColour;
        /* 0x3EE0 */ public Colour HazardBgPulseColour;
        /* 0x3EF0 */ public Colour HazardDamagePulseColour;
        /* 0x3F00 */ public Colour ShieldColour;
        /* 0x3F10 */ public Colour ShieldDamageColour;
        /* 0x3F20 */ public Colour ShieldBgColour;
        /* 0x3F30 */ public Colour ShieldDamageBgColour;
        /* 0x3F40 */ public Vector2f ScanLabelOffset;
        /* 0x3F48 */ public Vector2f InteractionLabelOffset;
        /* 0x3F50 */ public Vector2f InteractionLabelOffset_1;
        /* 0x3F58 */ public Vector2f InteractionLabelSize;
        /* 0x3F60 */ public Vector2f InteractionLabelLineOffset;
        /* 0x3F68 */ public float InteractionLabelRadiusScaler;
        /* 0x3F6C */ public float InteractionLabelHeight;
        /* 0x3F70 */ public float InteractionLabelLineAlpha;
        /* 0x3F74 */ public float InteractionIconInnerRadius;
        /* 0x3F78 */ public float InteractionIconOuterRadius;
        /* 0x3F7C */ public float InteractionLabelPixelHeightMin;
        /* 0x3F80 */ public float InteractionLabelPixelHeightMax;
        /* 0x3F84 */ public float ScanTime;
        /* 0x3F90 */ public GcModelViewCollection ModelViews;
        /* 0x5BC0 */ public Colour CursorColour;
        /* 0x5BD0 */ public Colour CursorConfirmColour;
        /* 0x5BE0 */ public Colour CursorTransferUploadColour;
        /* 0x5BF0 */ public Colour CursorDeleteColour;
        /* 0x5C00 */ public float CursorHoverSlowFactor;
        /* 0x5C04 */ public float CursorHoverSlowFactorMin;
        /* 0x5C08 */ public float FrontendBGAlpha;
        /* 0x5C0C */ public float FrontendConfirmTimeMouseMultiplier;
        /* 0x5C10 */ public float FrontendConfirmTimeFast;
        /* 0x5C14 */ public float FrontendTouchConfirmTimeFastMultiplier;
        /* 0x5C18 */ public float FrontendConfirmTime;
        /* 0x5C1C */ public float FrontendConfirmTimeSlow;
        /* 0x5C20 */ public TkCurveType FrontendConfirmCurve;
        /* 0x5C24 */ public float FrontendCursorSize;
        /* 0x5C28 */ public float FrontendCursorOffset;
        /* 0x5C2C */ public float PopupXClampOffset;
        /* 0x5C30 */ public float PopupXClampOffsetRightAligned;
        /* 0x5C34 */ public float PopupSlotWidthOffset;
        /* 0x5C38 */ public float FrontendCursorWidth;
        /* 0x5C3C */ public float FrontendDeactivateTime;
        /* 0x5C40 */ public float FrontendDeactivateSplit;
        /* 0x5C44 */ public float FrontendActivateTime;
        /* 0x5C48 */ public float FrontendActivateSplit;
        /* 0x5C4C */ public float FrontendStatCircleWidth;
        /* 0x5C50 */ public float FrontendStatCircleWidthExtra;
        /* 0x5C54 */ public float FrontendBootTime;
        /* 0x5C58 */ public float FrontendBootBarTime;
        /* 0x5C5C */ public TkCurveType FrontendBootBarCurve;
        /* 0x5C60 */ public float PopupDebounceTime;
        /* 0x5C64 */ public float PopupActivateTime;
        /* 0x5C68 */ public float PopupDeactivateTime;
        /* 0x5C6C */ public TkCurveType PopupActivateCurve1;
        /* 0x5C6D */ public TkCurveType PopupActivateCurve2;
        /* 0x5C70 */ public float ByteBeatTreeLineWidth;
        /* 0x5C80 */ public Colour ByteBeatTreeLineColour;
        /* 0x5C90 */ public float ByteBeatVisLineWidth;
        /* 0x5CA0 */ public Colour ByteBeatVisLineColour;
        /* 0x5CB0 */ public Colour ByteBeatVisGridColour;
        /* 0x5CC0 */ public float ByteBeatIconLineWidth;
        /* 0x5CC4 */ public float ByteBeatIconPad;
        /* 0x5CC8 */ public float ByteBeatArpLineWidth;
        /* 0x5CCC */ public float ByteBeatArpRadius;
        /* 0x5CD0 */ public float ByteBeatArpPad;
        /* 0x5CE0 */ public Colour ByteBeatArpGridInactiveColour;
        /* 0x5CF0 */ public Colour ByteBeatArpGridActiveColour;
        /* 0x5D00 */ public Colour ByteBeatArpPipInactiveColour;
        /* 0x5D10 */ public Colour ByteBeatArpPipActiveColour;
        /* 0x5D20 */ public float ByteBeatSequencerLineWidth;
        /* 0x5D24 */ public float ByteBeatSequencerPad;
        /* 0x5D28 */ public float ByteBeatPartSequencerPad;
        /* 0x5D2C */ public float ByteBeatSequencerCornerRadius;
        /* 0x5D30 */ public float ByteBeatRhythmBeatPad;
        /* 0x5D34 */ public float ByteBeatSequencerInactiveSaturation;
        /* 0x5D38 */ public float ByteBeatSequencerActiveSaturation;
        /* 0x5D3C */ public float ByteBeatRhythmSequencerInactiveSaturation;
        /* 0x5D40 */ public float ByteBeatRhythmSequencerActiveSaturation;
        /* 0x5D44 */ public float ByteBeatSequencerUnpoweredTintStrength;
        /* 0x5D50 */ public Colour ByteBeatSequencerUnpoweredTint;
        /* 0x5D60 */ public Colour ByteBeatSequencerBGColourActive;
        /* 0x5D70 */ public Colour ByteBeatSequencerBGColourInactive;
        /* 0x5D80 */ public Colour ByteBeatSequencerRimColourActive;
        /* 0x5D90 */ public Colour ByteBeatSequencerRimColourInactive;
        /* 0x5DA0 */ public Colour ByteBeatRhythmColour0Active;
        /* 0x5DB0 */ public Colour ByteBeatRhythmColour0Inactive;
        /* 0x5DC0 */ public Colour ByteBeatRhythmColour1Active;
        /* 0x5DD0 */ public Colour ByteBeatRhythmColour1Inactive;
        /* 0x5DE0 */ public Colour ByteBeatRhythmColour2Active;
        /* 0x5DF0 */ public Colour ByteBeatRhythmColour2Inactive;
        /* 0x5E00 */ public Colour ByteBeatSequencerHighlightColour;
        /* 0x5E10 */ public float ByteBeatSequencerHighlightLineWidth;
        /* 0x5E14 */ public float ByteBeatSliderLineWidth;
        /* 0x5E18 */ public float ByteBeatSliderPad;
        /* 0x5E1C */ public float ByteBeatSliderCornerRadius;
        /* 0x5E20 */ public Colour ByteBeatSliderFGColour;
        /* 0x5E30 */ public Colour ByteBeatSliderTextActiveColour;
        /* 0x5E40 */ public Colour ByteBeatSliderTextInactiveColour;
        /* 0x5E50 */ public float ByteBeatSwitchPanelAlpha;
        /* 0x5E54 */ public float ByteBeatSwitchPanelSplit;
        /* 0x5E60 */ public Colour RadialMenuInnerColourSelected;
        /* 0x5E70 */ public Colour RadialMenuOuterColourSelected;
        /* 0x5E80 */ public Colour RadialMenuInnerColourUnselected;
        /* 0x5E90 */ public Colour RadialMenuOuterColourUnselected;
        /* 0x5EA0 */ public Colour RadialMenuInnerColourDisabled;
        /* 0x5EB0 */ public Colour RadialMenuOuterColourDisabled;
        /* 0x5EC0 */ public float RadialMenuInnerRadius;
        /* 0x5EC4 */ public float RadialMenuInnerRadiusCursor;
        /* 0x5EC8 */ public float RadialMenuWedgeOffset;
        /* 0x5ECC */ public float HatchPulseSpeed;
        /* 0x5ED0 */ public float HatchPulseWidth;
        /* 0x5ED4 */ public float HatchPulsePauseTime;
        /* 0x5ED8 */ public int HatchCount;
        /* 0x5EDC */ public float HatchCursorRadius;
        /* 0x5EE0 */ public float HatchAlphaMain;
        /* 0x5EE4 */ public float HatchAlphaBase;
        /* 0x5EE8 */ public float HatchAlphaCursor;
        /* 0x5EEC */ public float FrontendDoFNearPlaneMin;
        /* 0x5EF0 */ public float FrontendDoFNearPlaneMax;
        /* 0x5EF4 */ public float FrontendDoFFarPlaneMin;
        /* 0x5EF8 */ public float FrontendDoFFarPlaneMax;
        /* 0x5EFC */ public float FrontendDoFFarPlaneFadeMin;
        /* 0x5F00 */ public float FrontendDoFFarPlaneFadeMax;
        /* 0x5F04 */ public float FrontendDoFBlurMultiplier;
        /* 0x5F08 */ public bool FrontendDoFEnableBokeh;
        /* 0x5F09 */ public TkCurveType FrontendDoFCurve;
        /* 0x5F0C */ public float FrontendShineSpeed;
        /* 0x5F10 */ public float FrontendToolbarTextHeight;
        /* 0x5F14 */ public float FrontendToolbarTextHeightSelected;
        /* 0x5F18 */ public float FrontendTitleFontSpacing;
        /* 0x5F1C */ public float NGuiPadSensitivity;
        /* 0x5F20 */ public float NGuiMouseSensitivity;
        /* 0x5F24 */ public Vector2f NGuiTouchPadSensitivity;
        /* 0x5F30 */ public Colour TargetMarkerColour;
        /* 0x5F40 */ public Colour TargetMarkerHighlightColour;
        /* 0x5F50 */ public float TargetMarkerScaleStart;
        /* 0x5F54 */ public float TargetMarkerScaleEnd;
        /* 0x5F58 */ public float TargetMarkerFadeAngleMin;
        /* 0x5F5C */ public float TargetMarkerFadeAngleRange;
        /* 0x5F60 */ public float HitMarkerPulseSize;
        /* 0x5F64 */ public float HitMarkerPulseSizeStatic;
        /* 0x5F68 */ public float HitMarkerPulseTime;
        /* 0x5F70 */ public Colour WantedColour;
        /* 0x5F80 */ public Colour UnseenItemColour;
        /* 0x5F90 */ public float PlanetPoleMaxDotProduct;
        /* 0x5F94 */ public float SpaceMapLineWidth;
        /* 0x5F98 */ public float SpaceMapLineBaseScale;
        /* 0x5F9C */ public float SpaceMapLineBaseFade;
        /* 0x5FA0 */ public float SpaceMapShipCombineDistance;
        /* 0x5FA4 */ public bool SpaceMapShowPlanets;
        /* 0x5FA5 */ public bool SpaceMapShowPlanetLines;
        /* 0x5FA6 */ public bool SpaceMapShowStation;
        /* 0x5FA7 */ public bool SpaceMapShowStationLines;
        /* 0x5FA8 */ public bool SpaceMapShowAnomaly;
        /* 0x5FA9 */ public bool SpaceMapShowAnomalyLines;
        /* 0x5FAA */ public bool SpaceMapShowNexus;
        /* 0x5FAB */ public bool SpaceMapShowNexusLines;
        /* 0x5FAC */ public bool SpaceMapShowShips;
        /* 0x5FAD */ public bool SpaceMapShowShipLines;
        /* 0x5FAE */ public bool SpaceMapShowFrieghters;
        /* 0x5FAF */ public bool SpaceMapShowFrieghterLines;
        /* 0x5FB0 */ public bool SpaceMapShowPulseEncounters;
        /* 0x5FB1 */ public bool SpaceMapShowPulseEncounterLines;
        /* 0x5FB4 */ public float SpaceMapFoV;
        /* 0x5FB8 */ public float SpaceMapAspectRatio;
        /* 0x5FBC */ public float SpaceMapDistanceScale;
        /* 0x5FC0 */ public float SpaceMapDistanceLogScaler;
        /* 0x5FC4 */ public TkCurveType SpaceMapDistanceCurve;
        /* 0x5FC8 */ public float SpaceMapScaleMin;
        /* 0x5FCC */ public float SpaceMapScaleRangeMin;
        /* 0x5FD0 */ public float SpaceMapScaleRangeMax;
        /* 0x5FD4 */ public float SpaceMapObjectScale;
        /* 0x5FD8 */ public float SpaceMapFreighterScale;
        /* 0x5FDC */ public float SpaceMapStationScale;
        /* 0x5FE0 */ public float SpaceMapAnomalyScale;
        /* 0x5FE4 */ public float SpaceMapPlanetScale;
        /* 0x5FE8 */ public float SpaceMapPlanetLineOffset;
        /* 0x5FEC */ public float SpaceMapMoonScale;
        /* 0x5FF0 */ public float SpaceMapActionScale;
        /* 0x5FF4 */ public float SpaceMapShipScale;
        /* 0x5FF8 */ public float SpaceMapMarkerScale;
        /* 0x5FFC */ public float SpaceMapDistance;
        /* 0x6000 */ public float SpaceMapMaxTraderDistance;
        /* 0x6004 */ public float SpaceMapDistanceMultiplier;
        /* 0x6008 */ public float SpaceMapHorizonThickness;
        /* 0x600C */ public float SpaceMapFadeAngleMin;
        /* 0x6010 */ public float SpaceMapFadeAngleMax;
        /* 0x6014 */ public float SpaceMapCamHeight;
        /* 0x6018 */ public float SpaceMapCamAngle;
        /* 0x601C */ public float SpaceMapCamDistance;
        /* 0x6020 */ public float SpaceMapShipScaleMin;
        /* 0x6024 */ public float SpaceMapLightPitch;
        /* 0x6028 */ public float SpaceMapLightYaw;
        /* 0x6030 */ public Colour SpaceFriendlyShipLineColour;
        /* 0x6040 */ public Colour SpaceEnemyShipLineColour;
        /* 0x6050 */ public Vector3f SpaceMapPosScaler;
        /* 0x6060 */ public Colour SpaceMapAttackColour;
        /* 0x6070 */ public Colour SpaceMapOtherPlayerColour;
        /* 0x6080 */ public Colour SpaceMapThreatColour;
        /* 0x6090 */ public Colour SpaceMapNeutralColour;
        /* 0x60A0 */ public Colour SpaceMapSquadronColour;
        /* 0x60B0 */ public Colour SpaceMapDeathPointColour;
        /* 0x60C0 */ public GcSpaceMapObjectData SpaceMapMarkerData;
        /* 0x60F0 */ public GcSpaceMapObjectData SpaceMapPlanetData;
        /* 0x6120 */ public GcSpaceMapObjectData SpaceMapStationData;
        /* 0x6150 */ public GcSpaceMapObjectData SpaceMapNexusData;
        /* 0x6180 */ public GcSpaceMapObjectData SpaceMapAtlasData;
        /* 0x61B0 */ public GcSpaceMapObjectData SpaceMapBlackHoleData;
        /* 0x61E0 */ public GcSpaceMapObjectData SpaceMapShipData;
        /* 0x6210 */ public GcSpaceMapObjectData SpaceMapFreighterData;
        /* 0x6240 */ public GcSpaceMapObjectData SpaceMapPulseEncounterData;
        /* 0x6270 */ public Vector2f HUDTargetHealthOffset;
        /* 0x6278 */ public Vector2f HUDTargetHealthSize;
        /* 0x6280 */ public Vector2f HUDTargetHealthIconOffset;
        /* 0x6288 */ public float HUDTargetHealthIconSize;
        /* 0x628C */ public float HUDTargetHealthDangerTime;
        /* 0x6290 */ public float HUDTargetMarkerOffset;
        /* 0x6294 */ public float HUDTargetMarkerSize;
        /* 0x6298 */ public float HUDTargetIconOffset;
        /* 0x629C */ public float HUDTargetIconSize;
        /* 0x62A0 */ public float HUDMarkerOffset;
        /* 0x62B0 */ public Colour HUDMarkerColour;
        /* 0x62C0 */ public Colour HUDSpaceshipColour;
        /* 0x62D0 */ public Colour HUDRelicMarkerColourDiscovered;
        /* 0x62E0 */ public Colour HUDRelicMarkerColourUnknown;
        /* 0x62F0 */ public Colour HUDOutpostColour;
        /* 0x6300 */ public Vector2f HUDMarkerPrimaryIndicatorOffset;
        /* 0x6308 */ public Vector2f HUDMarkerCompassPrimaryIndicatorOffset;
        /* 0x6310 */ public NMSString0x100 HUDMarkerIcon;
        /* 0x6410 */ public NMSString0x100 HUDMarkerPrimaryIndicatorIcon;
        /* 0x6510 */ public NMSString0x100 HUDMarkerColourIcon;
        /* 0x6610 */ public NMSString0x100 HUDPointIcon;
        /* 0x6710 */ public NMSString0x100 HUDSpaceshipIcon;
        /* 0x6810 */ public NMSString0x100 HUDSaveIcon;
        /* 0x6910 */ public NMSString0x100 HUDDeathPointIcon;
        /* 0x6A10 */ public NMSString0x100 HUDHexAnimIcon;
        /* 0x6B10 */ public NMSString0x100 HUDCircleAnimIcon;
        /* 0x6C10 */ public float HUDMarkerAnimSpeed;
        /* 0x6C14 */ public float HUDMarkerAnimScale;
        /* 0x6C18 */ public float HUDMarkerAnimOffset;
        /* 0x6C1C */ public float HUDMarkerAnimLoopTime;
        /* 0x6C20 */ public TkCurveType HUDMarkerAnimAlphaCurve;
        /* 0x6C21 */ public TkCurveType HUDMarkerAnimCurve;
        /* 0x6C24 */ public float HUDMarkerPrimaryIndicatorSize;
        /* 0x6C28 */ public float HUDPetMarkerAngleTest;
        /* 0x6C2C */ public float HUDPetMarkerAngleVRMul;
        /* 0x6C30 */ public float HUDMarkerHoverAngleTestGround;
        /* 0x6C34 */ public float HUDPetCentreScreenAngle;
        /* 0x6C38 */ public float HUDNetworkMarkerHoverAngleTestGround;
        /* 0x6C3C */ public float HUDMarkerWideHoverAngleTest;
        /* 0x6C40 */ public float HUDMarkerHoverAngleTestShip;
        /* 0x6C44 */ public float HUDMarkerHoverShowLargeAngleTest;
        /* 0x6C48 */ public float HUDNetworkMarkerHoverShowLargeAngleTest;
        /* 0x6C4C */ public float HUDNetworkMarkerHoverAngleVRMul;
        /* 0x6C50 */ public float HUDMarkerShipOffsetMaxDist;
        /* 0x6C54 */ public float HUDMarkerShipOffsetMinDist;
        /* 0x6C58 */ public float HUDMarkerNearFadeDistance;
        /* 0x6C5C */ public float HUDMarkerNearFadeRange;
        /* 0x6C60 */ public float HUDMarkerFarDistance;
        /* 0x6C64 */ public float HUDMarkerFarFadeRange;
        /* 0x6C68 */ public float HUDMarkerScalerMin;
        /* 0x6C6C */ public float HUDMarkerScalerRange;
        /* 0x6C70 */ public float HUDMarkerScalerSizeMin;
        /* 0x6C74 */ public float HUDMarkerScalerSizeMax;
        /* 0x6C78 */ public float HUDMarkerHorizonBlendRange;
        /* 0x6C7C */ public float HUDMarkerAlpha;
        /* 0x6C80 */ public float HUDMarkerModelFadeRange;
        /* 0x6C84 */ public float HUDMarkerModelFadeMinHeight;
        /* 0x6C88 */ public float HUDMarkerShowActualIconDistance;
        /* 0x6C8C */ public float HUDMarkerShowActualSpaceIconDistance;
        /* 0x6C90 */ public float HUDMarkerActiveTime;
        /* 0x6C94 */ public TkCurveType HUDMarkerActiveCurve;
        /* 0x6C98 */ public float HUDMarkerIconHoverMinScale;
        /* 0x6C9C */ public float AltimeterResolution;
        /* 0x6CA0 */ public float AltimeterLineSpacing;
        /* 0x6CA4 */ public float AltimeterWidth;
        /* 0x6CA8 */ public float AltimeterMin;
        /* 0x6CAC */ public float AltimeterMax;
        /* 0x6CB0 */ public float AltimeterTextSize;
        /* 0x6CB4 */ public float AltimeterMinValue;
        /* 0x6CC0 */ public Colour AltimeterBandColour1;
        /* 0x6CD0 */ public Colour AltimeterBandColour2;
        /* 0x6CE0 */ public Colour AltimeterColour1;
        /* 0x6CF0 */ public Colour AltimeterColour2;
        /* 0x6D00 */ public float LockOnMarkerSize;
        /* 0x6D04 */ public float LockOnMarkerSizeLock;
        /* 0x6D10 */ public Colour LockOnMarkerActiveColour;
        /* 0x6D20 */ public float AsteroidMarkerMinDisplayDistance;
        /* 0x6D24 */ public float AsteroidMarkerMinDisplayAngleDegrees;
        /* 0x6D28 */ public float MissileIconAttackPulseTime;
        /* 0x6D2C */ public float MissileIconAttackPulseAmount;
        /* 0x6D30 */ public float NGuiModelRotationDegreesX;
        /* 0x6D34 */ public float NGuiModelRotationDegreesY;
        /* 0x6D38 */ public float NGuiModelRotationDegreesZ;
        /* 0x6D3C */ public float NGuiModelViewDistanceGlobal;
        /* 0x6D40 */ public float NGuiModelViewDistanceSuitPage;
        /* 0x6D44 */ public float NGuiModelViewDistanceWeaponPage;
        /* 0x6D48 */ public float NGuiModelViewDistanceShipPage;
        /* 0x6D4C */ public float NGuiModelViewDistanceDiscoveryPage;
        /* 0x6D50 */ public float NGuiModelViewFov;
        /* 0x6D54 */ public float NGuiModelViewCdSmoothTime;
        /* 0x6D58 */ public float NGuiAltPlacementDistanceScrollSpeed;
        /* 0x6D5C */ public float NGuiPlacementAngleScrollSpeed;
        /* 0x6D60 */ public float NGuiModelViewFractionOfBBHeightAboveReflectivePlane;
        /* 0x6D70 */ public Vector3f NGuiModelTranslationFactors;
        /* 0x6D80 */ public Vector3f NGuiModelTranslationFactorsInteraction;
        /* 0x6D90 */ public Vector3f NGuiThumbnailModelTranslationFactors;
        /* 0x6DA0 */ public float NGuiThumbnailModelRotationDegreesY;
        /* 0x6DA4 */ public float NGuiThumbnailModelViewDistance;
        /* 0x6DA8 */ public float NGuiCursorOffsetMultiplier;
        /* 0x6DAC */ public float NGuiActiveAreaOffsetTime;
        /* 0x6DB0 */ public Vector2f NGuiMin2DParallax;
        /* 0x6DB8 */ public Vector2f NGuiMax2DParallax;
        /* 0x6DC0 */ public Vector2f NGuiModelParallax;
        /* 0x6DC8 */ public Vector2f NGuiShipInteractParallax;
        /* 0x6DD0 */ public Vector2f InteractionWorldParallax;
        /* 0x6DD8 */ public float TargetParallaxMouseMultiplier;
        /* 0x6DDC */ public float TargetParallaxMaintenancePageMultiplier;
        /* 0x6DE0 */ public float NGuiModelViewFadeInAfterRenderTime;
        /* 0x6DE4 */ public TkCurveType NGuiModelViewFadeInAfterRenderCurve;
        /* 0x6DE5 */ public bool NGuiUseSeparateLayersForModelAndReflection;
        /* 0x6DE8 */ public GcDiscoveryHelperTimings DiscoveryHelperTimings;
        /* 0x6DF8 */ public GcHUDStartupTable IntroTiming;
        /* 0x6F48 */ public GcHUDStartupTable IntroTimingFreighter;
        /* 0x7098 */ public GcInventorySlotActionData InstallTechSlotAction;
        /* 0x70B4 */ public GcInventorySlotActionData BuildProductSlotAction;
        /* 0x70D0 */ public GcInventorySlotActionData ChargeSlotAction;
        /* 0x70EC */ public GcInventorySlotActionData RepairSlotAction;
        /* 0x7108 */ public GcInventorySlotActionData NewSlotRevealAction;
        /* 0x7124 */ public GcInventorySlotActionData NewSlotPulseAction;
        /* 0x7140 */ public GcInventorySlotActionData InventoryHintAction;
        /* 0x715C */ public float ReportBaseFlashTime;
        /* 0x7160 */ public float ReportBaseFlashIntensity;
        /* 0x7164 */ public float ReportBaseFlashDelay;
        /* 0x7168 */ public int ReportBaseTexWidth;
        /* 0x716C */ public int ReportBaseTexHeight;
        /* 0x7170 */ public float ReportCameraSpeed;
        /* 0x7174 */ public float AmbientModeFadeTime;
        /* 0x7178 */ public bool HideQuickMenuControls;
        /* 0x7179 */ public bool QuickMenuAllowCycle;
        /* 0x717C */ public float TextChatMaxDisplayTime;
        /* 0x7180 */ public float TextChatStayBigAfterTextInput;
        /* 0x7184 */ public int BuildingShopMaxItems;
        /* 0x7188 */ public float ShipScreenTexScale;
        /* 0x718C */ public float MultiplayerTeleportEffectDisappearTime;
        /* 0x7190 */ public float MultiplayerTeleportEffectAppearTime;
        /* 0x7194 */ public int AbandonedFreighterAirlockRoomNumber;
        /* 0x7198 */ public float SettlementStatInnerRadius;
        /* 0x719C */ public float SettlementStatOuterRadius;
        /* 0x71A0 */ public Colour SettlementStatColour;
        /* 0x71B0 */ public Colour SettlementStatBackgroundColour;
        [NMS(Size = 0x7, EnumType = typeof(GcSettlementStatType.SettlementStatTypeEnum))]
        /* 0x71C0 */ public NMSString0x20A[] SettlementStatLoc;
        [NMS(Size = 0x7, EnumType = typeof(GcSettlementStatType.SettlementStatTypeEnum))]
        /* 0x72A0 */ public NMSString0x20A[] SettlementStatFormatLoc;
        [NMS(Size = 0x7, EnumType = typeof(GcSettlementStatType.SettlementStatTypeEnum))]
        /* 0x7380 */ public TkTextureResource[] SettlementStatBasicImages;
        [NMS(Size = 0x7, EnumType = typeof(GcSettlementStatType.SettlementStatTypeEnum))]
        /* 0x771C */ public TkTextureResource[] SettlementStatPositiveImages;
        [NMS(Size = 0x7, EnumType = typeof(GcSettlementStatType.SettlementStatTypeEnum))]
        /* 0x7AB8 */ public TkTextureResource[] SettlementStatNegativeImages;
        /* 0x7E54 */ public float MinimumHoldFill;
        /* 0x7E58 */ public bool EnableAccessibleUIOnSwitch;
        /* 0x7E5C */ public float AccessibleUIPopupScale;
        /* 0x7E60 */ public float AccessibleUIHUDPopupScale;
        /* 0x7E64 */ public float DetailMessageDismissTime;
        /* 0x7E68 */ public float ManualScrollChangePerInputMin;
        /* 0x7E6C */ public float ManualScrollChangePerInputMax;
        /* 0x7E70 */ public float InfoPortalGuideCycleTime;
        /* 0x7E74 */ public float InfoPortalMilestonesCycleTime;
        /* 0x7E78 */ public float FeedFrigateAnimPeriod;
        /* 0x7E7C */ public int FeedFrigateAnimNumPeriods;
        /* 0x7E80 */ public float FeedFrigateAnimScaleChange;
        /* 0x7E84 */ public float FeedFrigateAnimAlphaChange;
        /* 0x7E88 */ public float TouchScrollMaxDelta;
        /* 0x7E8C */ public float TextTouchScrollCap;
        /* 0x7E90 */ public float TouchScrollChangePageThreshold;
    }
}
