using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0x4D50, GUID = 0xE5D683E18D8EAA63)]
    public class GcCameraGlobals : NMSTemplate
    {
        /* 0x0000 */ public TkModelRendererData FreighterCustomisationStandardCamera;
        /* 0x00B0 */ public GcCameraFollowSettings VehicleCamHmd;
        /* 0x0198 */ public GcCameraFollowSettings VehicleCam;
        /* 0x0280 */ public float SpecialVehicleMouseRecentreTime;
        /* 0x0284 */ public float SpecialVehicleMouseRecentreWeaponTime;
        /* 0x0288 */ public float HmdEyeLookAngle;
        /* 0x028C */ public float HmdEyeExtraTurnAngle;
        /* 0x0290 */ public float HmdEyeExtraTurnMinHeadAngle;
        /* 0x0294 */ public float HmdEyeExtraTurnHeadAngleRange;
        /* 0x0298 */ public bool PauseThirdPersonCamInPause;
        /* 0x029C */ public float DebugPlanetJumpNearHeight;
        /* 0x02A0 */ public float DebugPlanetJumpFarHeight;
        /* 0x02A4 */ public float TogglePerspectiveBlendTime;
        /* 0x02A8 */ public float UnderwaterCameraSurfaceOffset;
        /* 0x02AC */ public float ThirdPersonAfterIntroCamBlendTime;
        /* 0x02B0 */ public float ThirdPersonSkipIntroCamBlendTime;
        /* 0x02B4 */ public float VehicleExitFlashTime;
        /* 0x02B8 */ public float VehicleExitFlashStrength;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x02BC */ public byte[] Padding2BC;
        /* 0x02C0 */ public Colour VehicleExitFlashColour;
        /* 0x02D0 */ public float VehicleFirstToThirdExitOffsetY;
        /* 0x02D4 */ public float VehicleFirstToThirdExitOffsetZ;
        /* 0x02D8 */ public float ShipThirdPersonBlendTime;
        /* 0x02DC */ public float ShipThirdPersonBlendWithOffsetTime;
        /* 0x02E0 */ public float ShipThirdPersonBlendOffset;
        /* 0x02E4 */ public float ShipThirdPersonBlendOutTime;
        /* 0x02E8 */ public float ShipThirdPersonBlendOutOffset;
        /* 0x02EC */ public float ShipFirstPersonBlendTime;
        /* 0x02F0 */ public float ShipFirstPersonBlendOffset;
        /* 0x02F4 */ public float ShipThirdPersonEnterBlendTime;
        /* 0x02F8 */ public float ShipThirdPersonEnterBlendOffset;
        /* 0x02FC */ public float FlybyMinRange;
        /* 0x0300 */ public float FlybyRange;
        /* 0x0304 */ public float FlybyMinRelativeSpeed;
        /* 0x0308 */ public float FlybyRelativeSpeedRange;
        /* 0x030C */ public float FlybyInVehicleDamper;
        /* 0x0310 */ public float BinocularFlashTime;
        /* 0x0314 */ public float BinocularFlashStrength;
        /* 0x0318 */ public float MinFirstPersonCameraPitch;
        /* 0x031C */ public float MaxFirstPersonCameraPitch;
        /* 0x0320 */ public float MaxCreatureRidingYaw;
        /* 0x0324 */ public float VehicleThirdPersonShootOffsetReturnTime;
        /* 0x0328 */ public float VehicleThirdPersonShootOffsetBlendOutTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x032C */ public byte[] Padding32C;
        [NMSDescription("Camera settings for idling/walking player in outdoors")]
        /* 0x0330 */ public GcCameraFollowSettings CharacterUnarmedCam;
        [NMSDescription("Camera settings for when the player is running")]
        /* 0x0418 */ public GcCameraFollowSettings CharacterRunCam;
        [NMSDescription("Camera settings for when the player is using weapons")]
        /* 0x0500 */ public GcCameraFollowSettings CharacterCombatCam;
        [NMSDescription("Camera settings for idling/walking player in indoors")]
        /* 0x05E8 */ public GcCameraFollowSettings CharacterIndoorCam;
        /* 0x06D0 */ public GcCameraFollowSettings CharacterAbandCombatCam;
        /* 0x07B8 */ public GcCameraFollowSettings CharacterAbandCam;
        /* 0x08A0 */ public GcCameraFollowSettings CharacterNexusCam;
        [NMSDescription("Camera settings for when the player uses the jetpack")]
        /* 0x0988 */ public GcCameraFollowSettings CharacterAirborneCam;
        /* 0x0A70 */ public GcCameraFollowSettings CharacterMeleeBoostCam;
        /* 0x0B58 */ public GcCameraFollowSettings CharacterRocketBootsCam;
        /* 0x0C40 */ public GcCameraFollowSettings CharacterRocketBootsChargeCam;
        [NMSDescription("Camera settings for when the player is falling. This also includes when the player deactivates the jetpack in mid-air")]
        /* 0x0D28 */ public GcCameraFollowSettings CharacterFallingCam;
        /* 0x0E10 */ public GcCameraFollowSettings CharacterAirborneCombatCam;
        /* 0x0EF8 */ public GcCameraFollowSettings CharacterSpaceCam;
        [NMSDescription("Camera settings for when the player is climbing or riding a slope")]
        /* 0x0FE0 */ public GcCameraFollowSettings CharacterSteepSlopeCam;
        [NMSDescription("Camera settings for when the player is underwater")]
        /* 0x10C8 */ public GcCameraFollowSettings CharacterUnderwaterCam;
        /* 0x11B0 */ public GcCameraFollowSettings CharacterUnderwaterCombatCam;
        /* 0x1298 */ public GcCameraFollowSettings CharacterUnderwaterJetpackCam;
        /* 0x1380 */ public GcCameraFollowSettings CharacterGrabbedCam;
        /* 0x1468 */ public GcCameraFollowSettings CharacterSitCam;
        /* 0x1550 */ public GcCameraFollowSettings CharacterRideCam;
        /* 0x1638 */ public GcCameraFollowSettings CharacterRideCamMedium;
        /* 0x1720 */ public GcCameraFollowSettings CharacterRideCamLarge;
        /* 0x1808 */ public GcCameraFollowSettings CharacterRideCamHuge;
        /* 0x18F0 */ public float ThirdPersonCameraChangeBlendTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x18F4 */ public byte[] Padding18F4;
        /* 0x18F8 */ public GcCameraFollowSettings BuggyFollowCam;
        /* 0x19E0 */ public GcCameraFollowSettings HovercraftFollowCam;
        /* 0x1AC8 */ public GcCameraFollowSettings SubmarineFollowCam;
        /* 0x1BB0 */ public GcCameraFollowSettings BikeFollowCam;
        /* 0x1C98 */ public GcCameraFollowSettings WheeledBikeFollowCam;
        /* 0x1D80 */ public GcCameraFollowSettings TruckFollowCam;
        /* 0x1E68 */ public GcCameraFollowSettings MechFollowCam;
        /* 0x1F50 */ public GcCameraFollowSettings MechShootCam;
        /* 0x2038 */ public GcCameraFollowSettings MechJetpackCam;
        /* 0x2120 */ public GcCameraFollowSettings SpaceshipFollowCam;
        /* 0x2208 */ public GcCameraFollowSettings DropshipFollowCam;
        /* 0x22F0 */ public GcCameraFollowSettings ShuttleFollowCam;
        /* 0x23D8 */ public GcCameraFollowSettings RoyalShipFollowCam;
        /* 0x24C0 */ public GcCameraFollowSettings ScienceShipFollowCam;
        /* 0x25A8 */ public GcCameraFollowSettings AlienShipFollowCam;
        /* 0x2690 */ public float FrontendModelCameraSpringTime;
        /* 0x2694 */ public float ModelViewFlashTime;
        /* 0x26A0 */ public Vector4f ModelViewOffset;
        /* 0x26B0 */ public Vector2f ModelViewFocusOffset;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x26B8 */ public byte[] Padding26B8;
        /* 0x26C0 */ public Vector4f InteractionOffset;
        /* 0x26D0 */ public Vector4f InteractionOffsetExtraVR;
        /* 0x26E0 */ public Vector4f InteractionOffsetExtraVRSeated;
        /* 0x26F0 */ public Vector4f InteractionOffsetDefault;
        /* 0x2700 */ public Vector4f InteractionOffsetGek;
        /* 0x2710 */ public Vector4f InteractionShipFocusOffset;
        /* 0x2720 */ public Vector4f InteractionHailingFocusOffset;
        /* 0x2730 */ public float InteractionHeadHeightDefault;
        /* 0x2734 */ public float InteractionHeadHeightGek;
        /* 0x2738 */ public float InteractionHeadHeightVykeen;
        /* 0x273C */ public float InteractionPitchAdjustTime;
        /* 0x2740 */ public float InteractionPitchAdjustStrength;
        /* 0x2744 */ public float InteractionPitchAdjustDeadZone;
        /* 0x2748 */ public float InteractionHeadPosHeightAdjust;
        /* 0x274C */ public float NPCTradeLateralShiftAmount;
        /* 0x2750 */ public float NPCTradeLateralShiftTime;
        /* 0x2754 */ public float DistanceForFleetInteraction;
        /* 0x2758 */ public float DistanceForFrigateInteraction;
        /* 0x275C */ public float DistanceForFrigatePurchaseInteraction;
        /* 0x2760 */ public Vector4f OffsetForFleetInteraction;
        /* 0x2770 */ public Vector4f OffsetForFrigateInteraction;
        /* 0x2780 */ public float FleetUIOrbitRate;
        /* 0x2784 */ public float FleetUIVerticalMotionDuration;
        /* 0x2788 */ public float FleetUIVerticalMotionAmplitude;
        /* 0x278C */ public Vector2f PitchForFrigateInteraction;
        /* 0x2794 */ public Vector2f RotationForFrigateInteraction;
        /* 0x279C */ public float InteractionModeBlendTime;
        /* 0x27A0 */ public float InteractionModeFocusCamBlend;
        /* 0x27A4 */ public float InteractionModeFoV;
        /* 0x27A8 */ public float MinInteractFocusAngle;
        /* 0x27AC */ public float ModelViewInterpTime;
        /* 0x27B0 */ public float ThirdPersonBlendInTime;
        /* 0x27B4 */ public float ThirdPersonBlendOutTime;
        /* 0x27B8 */ public float ThirdPersonCollisionPushOffsetReducerStart;
        /* 0x27BC */ public float ThirdPersonOffsetSpringTime;
        /* 0x27C0 */ public bool MaxBob;
        [NMSDescription("Speed of the camera when photo mode is active")]
        /* 0x27C4 */ public float PhotoModeMoveSpeed;
        [NMSDescription("Turning speed of the camera when photo mode is active")]
        /* 0x27C8 */ public float PhotoModeTurnSpeed;
        [NMSDescription("Boundary distance of the photo camera relative to the player on planet")]
        /* 0x27CC */ public float PhotoModeMaxDistance;
        [NMSDescription("Boundary distance of the photo camera relative to the player in space")]
        /* 0x27D0 */ public float PhotoModeMaxDistanceSpace;
        /* 0x27D4 */ public float PhotoModeMaxDistanceClampForce;
        /* 0x27D8 */ public float PhotoModeMaxDistanceClampBuffer;
        /* 0x27DC */ public float PhotoModeCollisionRadius;
        /* 0x27E0 */ public float PhotoModeRollSpeed;
        /* 0x27E4 */ public float PhotoModeFlashDuration;
        /* 0x27E8 */ public float PhotoModeFlashIntensity;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x27EC */ public byte[] Padding27EC;
        /* 0x27F0 */ public Vector4f PhotoModeShipOffset;
        /* 0x2800 */ public Vector4f BuildingModeInitialOffset;
        /* 0x2810 */ public float BuildingModeMaxDistance;
        /* 0x2814 */ public float RunningFoVAdjust;
        /* 0x2818 */ public float MeleeBoostedFoV;
        /* 0x281C */ public float MeleeFoV;
        /* 0x2820 */ public float AerialViewDownDistance;
        /* 0x2824 */ public float AerialViewPause;
        /* 0x2828 */ public float AerialViewStartTime;
        /* 0x282C */ public float AerialViewBackTime;
        /* 0x2830 */ public float AerialViewBlendTime;
        /* 0x2834 */ public TkCurveType AerialViewCurve;
        /* 0x2838 */ public GcCameraAerialViewData BeaconTransition;
        /* 0x2868 */ public GcCameraAerialViewData SignalTransition;
        /* 0x2898 */ public GcCameraAerialViewData WaypointTransition;
        /* 0x28C8 */ public GcCameraAerialViewData RadioTowerTransition;
        /* 0x28F8 */ public float ScreenshotHorizonHeight;
        /* 0x28FC */ public float ScreenshotHorizonFaceFactor;
        /* 0x2900 */ public float ScreenshotBendDownAmount;
        /* 0x2904 */ public float ScreenshotRightDistance;
        /* 0x2908 */ public float ScreenshotBackDistance;
        /* 0x290C */ public float ScreenshotInTime;
        /* 0x2910 */ public float ScreenshotOutTime;
        /* 0x2914 */ public float ShipCamSpringStrengthMin;
        /* 0x2918 */ public float ShipCamSpringStrengthMax;
        /* 0x291C */ public float ShipCamTurn;
        /* 0x2920 */ public float ShipCamPitch;
        /* 0x2924 */ public float ShipCamPitchMod;
        /* 0x2928 */ public float ShipCamLookInterp;
        /* 0x292C */ public float ShipCamMinReturnTime;
        /* 0x2930 */ public float ShipCamReturnTime;
        /* 0x2934 */ public float ShipCamMotionTurn;
        /* 0x2938 */ public float ShipCamMotionPitch;
        /* 0x293C */ public float ShipCamMotionPitchMod;
        /* 0x2940 */ public float ShipCamMotionMaxLagTurnAngle;
        /* 0x2944 */ public float ShipCamMotionMaxLagPitchAngle;
        /* 0x2948 */ public float ShipCamMotionInterp;
        /* 0x294C */ public float ShipCamRollAmountMin;
        /* 0x2950 */ public float ShipCamRollAmountMax;
        /* 0x2954 */ public float ShipCamRollSpeedScaler;
        /* 0x2958 */ public float ShipCamAimFOV;
        /* 0x295C */ public float MouseSensitivity;
        /* 0x2960 */ public float ModelViewRotateSpeed;
        /* 0x2964 */ public float ModelViewMouseRotateSpeed;
        /* 0x2968 */ public float ModelViewMouseRotateSnapStrength;
        /* 0x296C */ public float ModelViewMouseMoveSpeed;
        /* 0x2970 */ public float ModelViewDistSpeed;
        /* 0x2974 */ public float ModelViewMinDist;
        /* 0x2978 */ public float ModelViewMaxDist;
        /* 0x297C */ public float ModelViewDefaultPitch;
        /* 0x2980 */ public float ModelViewDefaultYaw;
        /* 0x2984 */ public bool DebugMoveCam;
        /* 0x2988 */ public float DebugMoveCamSpeed;
        /* 0x298C */ public float DebugMoveCamHeight;
        /* 0x2990 */ public bool DebugAICam;
        /* 0x2994 */ public float DebugAICamUp;
        /* 0x2998 */ public float DebugAICamAt;
        /* 0x299C */ public float PainShakeTime;
        /* 0x29A0 */ public float ShipShakeDamper;
        /* 0x29A4 */ public float IndoorCamShakeDamper;
        /* 0x29A8 */ public float FirstPersonSlerpAway;
        /* 0x29AC */ public float FirstPersonSlerpTowards;
        [NMS(Size = 0x28)]
        /* 0x29B0 */ public GcCameraShakeData[] CameraShakeTable;
        /* 0x47B0 */ public float BobAmountAbandFreighter;
        /* 0x47B4 */ public float BobFactorAbandFreighter;
        /* 0x47B8 */ public float BobAmount;
        /* 0x47BC */ public float BobFactor;
        /* 0x47C0 */ public float BobFocus;
        /* 0x47C4 */ public float BobRollFactor;
        /* 0x47C8 */ public float BobRollAmount;
        /* 0x47CC */ public float BobRollOffset;
        /* 0x47D0 */ public float BobFwdAmount;
        /* 0x47D4 */ public float CamSeed1;
        /* 0x47D8 */ public float CamSeed2;
        /* 0x47DC */ public float CamWander1Phase;
        /* 0x47E0 */ public float CamWander2Phase;
        /* 0x47E4 */ public float CamWander1Amplitude;
        /* 0x47E8 */ public float CamWander2Amplitude;
        /* 0x47EC */ public float DebugSpaceStationTeleportOffset;
        /* 0x47F0 */ public float DebugCameraSlowFactor;
        /* 0x47F4 */ public float DebugCameraFastFactor;
        /* 0x47F8 */ public float DebugCameraSpaceFastFactor;
        /* 0x47FC */ public float OffsetCamFOV;
        /* 0x4800 */ public Vector4f OffsetCamOffset;
        /* 0x4810 */ public Vector4f OffsetCamRotation;
        /* 0x4820 */ public float ObjectFocusTime;
        /* 0x4824 */ public float CharCamFocusHeight;
        /* 0x4828 */ public float CharCamMaxDistance;
        /* 0x482C */ public float CharCamMinDistance;
        /* 0x4830 */ public float CharCamHeight;
        /* 0x4834 */ public float CharCamOffsetTime;
        /* 0x4838 */ public float CharCamAutoDirStartTime;
        /* 0x483C */ public float CharCamLookOffset;
        /* 0x4840 */ public float CharCamLookOffsetFactor;
        /* 0x4844 */ public float CharCamDeflectSpeed;
        /* 0x4848 */ public float CharCamMinSpeed;
        /* 0x484C */ public float CharCamRightStickX;
        /* 0x4850 */ public float CharCamRightStickY;
        /* 0x4854 */ public float FirstPersonCamHeight;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x4858 */ public byte[] Padding4858;
        [NMS(Size = 0x8)]
        /* 0x4860 */ public Vector4f[] FirstPersonCamOffset;
        /* 0x48E0 */ public Vector4f FirstPersonInShipCamOffset;
        /* 0x48F0 */ public float FirstPersonFoV;
        /* 0x48F4 */ public float ThirdPersonFoV;
        /* 0x48F8 */ public float CombatFoV;
        /* 0x48FC */ public float FirstPersonZoom1FoV;
        /* 0x4900 */ public float FirstPersonZoom2FoV;
        /* 0x4904 */ public float ShipFoVMin;
        /* 0x4908 */ public float ShipFoVMin2;
        /* 0x490C */ public float ShipFoVMax;
        /* 0x4910 */ public float ShipWarpFoV;
        /* 0x4914 */ public float ShipFoVMin3rdPerson;
        /* 0x4918 */ public float ShipFoVMax3rdPerson;
        /* 0x491C */ public float ShipFoVBoost;
        /* 0x4920 */ public float ShipFoVMiniJump;
        /* 0x4924 */ public float ShipFoVSpring;
        /* 0x4928 */ public float ShipMiniJumpFoVSpring;
        /* 0x492C */ public float FoVSpring;
        /* 0x4930 */ public float FoVSpringSights;
        /* 0x4934 */ public float FoVAdjust;
        /* 0x4938 */ public bool FollowDrawCamProbes;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x4939 */ public byte[] Padding4939;
        /* 0x493C */ public GcCameraAnimationData AmbientCameraAnimations;
        /* 0x49C0 */ public TkTextureResource AmbientDroneAnimations;
        [NMS(Size = 0x80)]
        /* 0x4A44 */ public string CameraAmbientAnimationsData;
        /* 0x4AC4 */ public float CameraAmbientAutoSwitchMinTime;
        /* 0x4AC8 */ public float CameraAmbientAutoSwitchMaxTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x4ACC */ public byte[] Padding4ACC;
        /* 0x4AD0 */ public TkModelRendererData CameraNPCShipInteraction;
        /* 0x4B80 */ public TkModelRendererData CameraNPCShopInteraction;
        [NMS(Size = 0x4)]
        /* 0x4C30 */ public TkPhysRelVectorData[] SavedCameraPositions;
        [NMS(Size = 0x4)]
        /* 0x4CB0 */ public Vector4f[] SavedCameraFacing;
        /* 0x4CF0 */ public GcCameraWarpSettings WarpSettings;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x4D44 */ public byte[] EndPadding;
    }
}
