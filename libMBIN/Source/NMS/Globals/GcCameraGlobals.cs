using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0xFF7BBC8AF057D6A6)]
    public class GcCameraGlobals : NMSTemplate
    {
        /* 0x0000 */ public GcCameraFollowSettings VehicleCamHmd;
        /* 0x00E0 */ public GcCameraFollowSettings VehicleCam;
        /* 0x01C0 */ public float SpecialVehicleMouseRecentreTime;
        /* 0x01C4 */ public float SpecialVehicleMouseRecentreWeaponTime;
        /* 0x01C8 */ public float HmdEyeLookAngle;
        /* 0x01CC */ public float HmdEyeExtraTurnAngle;
        /* 0x01D0 */ public float HmdEyeExtraTurnMinHeadAngle;
        /* 0x01D4 */ public float HmdEyeExtraTurnHeadAngleRange;
        /* 0x01D8 */ public bool PauseThirdPersonCamInPause;
        /* 0x01DC */ public float DebugPlanetJumpNearHeight;
        /* 0x01E0 */ public float DebugPlanetJumpFarHeight;
        /* 0x01E4 */ public float TogglePerspectiveBlendTime;
        /* 0x01E8 */ public float UnderwaterCameraSurfaceOffset;
        /* 0x01EC */ public float ThirdPersonAfterIntroCamBlendTime;
        /* 0x01F0 */ public float ThirdPersonSkipIntroCamBlendTime;
        /* 0x01F4 */ public float VehicleExitFlashTime;
        /* 0x01F8 */ public float VehicleExitFlashStrength;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x01FC */ public byte[] Padding1FC;
        /* 0x0200 */ public Colour VehicleExitFlashColour;
        /* 0x0210 */ public float VehicleFirstToThirdExitOffsetY;
        /* 0x0214 */ public float VehicleFirstToThirdExitOffsetZ;
        /* 0x0218 */ public float ShipThirdPersonBlendTime;
        /* 0x021C */ public float ShipThirdPersonBlendWithOffsetTime;
        /* 0x0220 */ public float ShipThirdPersonBlendOffset;
        /* 0x0224 */ public float ShipThirdPersonBlendOutTime;
        /* 0x0228 */ public float ShipThirdPersonBlendOutOffset;
        /* 0x022C */ public float ShipFirstPersonBlendTime;
        /* 0x0230 */ public float ShipFirstPersonBlendOffset;
        /* 0x0234 */ public float ShipThirdPersonEnterBlendTime;
        /* 0x0238 */ public float ShipThirdPersonEnterBlendOffset;
        /* 0x023C */ public float FlybyMinRange;
        /* 0x0240 */ public float FlybyRange;
        /* 0x0244 */ public float FlybyMinRelativeSpeed;
        /* 0x0248 */ public float FlybyRelativeSpeedRange;
        /* 0x024C */ public float FlybyInVehicleDamper;
        /* 0x0250 */ public float BinocularFlashTime;
        /* 0x0254 */ public float BinocularFlashStrength;
        /* 0x0258 */ public float MinFirstPersonCameraPitch;
        /* 0x025C */ public float MaxFirstPersonCameraPitch;
        /* 0x0260 */ public float MaxCreatureRidingYaw;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x0264 */ public byte[] Padding264;
        /* 0x0268 */ public GcCameraFollowSettings CharacterUnarmedCam;
        /* 0x0348 */ public GcCameraFollowSettings CharacterRunCam;
        /* 0x0428 */ public GcCameraFollowSettings CharacterCombatCam;
        /* 0x0508 */ public GcCameraFollowSettings CharacterIndoorCam;
        /* 0x05E8 */ public GcCameraFollowSettings CharacterNexusCam;
        /* 0x06C8 */ public GcCameraFollowSettings CharacterAirborneCam;
        /* 0x07A8 */ public GcCameraFollowSettings CharacterMeleeBoostCam;
        /* 0x0888 */ public GcCameraFollowSettings CharacterRocketBootsCam;
        /* 0x0968 */ public GcCameraFollowSettings CharacterRocketBootsChargeCam;
        /* 0x0A48 */ public GcCameraFollowSettings CharacterFallingCam;
        /* 0x0B28 */ public GcCameraFollowSettings CharacterAirborneCombatCam;
        /* 0x0C08 */ public GcCameraFollowSettings CharacterSpaceCam;
        /* 0x0CE8 */ public GcCameraFollowSettings CharacterSteepSlopeCam;
        /* 0x0DC8 */ public GcCameraFollowSettings CharacterUnderwaterCam;
        /* 0x0EA8 */ public GcCameraFollowSettings CharacterUnderwaterCombatCam;
        /* 0x0F88 */ public GcCameraFollowSettings CharacterUnderwaterJetpackCam;
        /* 0x01068 */ public GcCameraFollowSettings CharacterGrabbedCam;
        /* 0x1148 */ public GcCameraFollowSettings CharacterSitCam;
        /* 0x1228 */ public GcCameraFollowSettings CharacterRideCam;
        /* 0x1308 */ public GcCameraFollowSettings CharacterRideCamMedium;
        /* 0x13E8 */ public GcCameraFollowSettings CharacterRideCamLarge;
        /* 0x14C8 */ public GcCameraFollowSettings CharacterRideCamHuge;
        /* 0x15A8 */ public float ThirdPersonCameraChangeBlendTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x15AC */ public byte[] Padding15AC;
        /* 0x15B0 */ public GcCameraFollowSettings BuggyFollowCam;
        /* 0x1690 */ public GcCameraFollowSettings HovercraftFollowCam;
        /* 0x1770 */ public GcCameraFollowSettings SubmarineFollowCam;
        /* 0x1850 */ public GcCameraFollowSettings BikeFollowCam;
        /* 0x1930 */ public GcCameraFollowSettings WheeledBikeFollowCam;
        /* 0x1A10 */ public GcCameraFollowSettings TruckFollowCam;
        /* 0x1AF0 */ public GcCameraFollowSettings SpaceshipFollowCam;
        /* 0x1BD0 */ public GcCameraFollowSettings DropshipFollowCam;
        /* 0x1CB0 */ public GcCameraFollowSettings ShuttleFollowCam;
        /* 0x1D90 */ public GcCameraFollowSettings RoyalShipFollowCam;
        /* 0x1E70 */ public GcCameraFollowSettings ScienceShipFollowCam;
        /* 0x1F50 */ public float FrontendModelCameraSpringTime;
        /* 0x1F54 */ public float ModelViewFlashTime;
        /* 0x1F60 */ public Vector3f ModelViewOffset;
        /* 0x1F70 */ public Vector2f ModelViewFocusOffset;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x1F78 */ public byte[] Padding1F78;
        /* 0x1F80 */ public Vector3f InteractionOffset;
        /* 0x1F90 */ public Vector3f InteractionOffsetExtraVR;
        /* 0x1FA0 */ public Vector3f InteractionOffsetExtraVRSeated;
        /* 0x1FB0 */ public Vector3f InteractionOffsetDefault;
        /* 0x1FC0 */ public Vector3f InteractionOffsetGek;
        /* 0x1FD0 */ public Vector3f InteractionShipFocusOffset;
        /* 0x1FE0 */ public float InteractionHeadHeightDefault;
        /* 0x1FE4 */ public float InteractionHeadHeightGek;
        /* 0x1FE8 */ public float InteractionHeadHeightVykeen;
        /* 0x1FEC */ public float InteractionPitchAdjustTime;
        /* 0x1FF0 */ public float InteractionPitchAdjustStrength;
        /* 0x1FF4 */ public float InteractionPitchAdjustDeadZone;
        /* 0x1FF8 */ public float InteractionHeadPosHeightAdjust;
        /* 0x1FFC */ public float NPCTradeLateralShiftAmount;
        /* 0x2000 */ public float NPCTradeLateralShiftTime;
        /* 0x2004 */ public float DistanceForFleetInteraction;
        /* 0x2008 */ public float DistanceForFrigateInteraction;
        /* 0x200C */ public float DistanceForFrigatePurchaseInteraction;
        /* 0x2010 */ public Vector3f OffsetForFleetInteraction;
        /* 0x2020 */ public Vector3f OffsetForFrigateInteraction;
        /* 0x2030 */ public float FleetUIOrbitRate;
        /* 0x2034 */ public float FleetUIVerticalMotionDuration;
        /* 0x2038 */ public float FleetUIVerticalMotionAmplitude;
        /* 0x203C */ public Vector2f PitchForFrigateInteraction;
        /* 0x2044 */ public Vector2f RotationForFrigateInteraction;
        /* 0x204C */ public float InteractionModeBlendTime;
        /* 0x2050 */ public float InteractionModeFocusCamBlend;
        /* 0x2054 */ public float InteractionModeFoV;
        /* 0x2058 */ public float MinInteractFocusAngle;
        /* 0x205C */ public float ModelViewInterpTime;
        /* 0x2060 */ public float ThirdPersonBlendInTime;
        /* 0x2064 */ public float ThirdPersonBlendOutTime;
        /* 0x2068 */ public float ThirdPersonCollisionPushOffsetReducerStart;
        /* 0x206C */ public float ThirdPersonOffsetSpringTime;
        /* 0x2070 */ public bool MaxBob;
        /* 0x2074 */ public float PhotoModeMoveSpeed;
        /* 0x2078 */ public float PhotoModeTurnSpeed;
        /* 0x207C */ public float PhotoModeMaxDistance;
        /* 0x2080 */ public float PhotoModeMaxDistanceSpace;
        /* 0x2084 */ public float PhotoModeMaxDistanceClampForce;
        /* 0x2088 */ public float PhotoModeMaxDistanceClampBuffer;
        /* 0x208C */ public float PhotoModeCollisionRadius;
        /* 0x2090 */ public float PhotoModeRollSpeed;
        /* 0x2094 */ public float PhotoModeFlashDuration;
        /* 0x2098 */ public float PhotoModeFlashIntensity;
        [NMS(Size = 0x04, Ignore = true)]
        /* 0x209C */ public byte[] Padding209C;
        /* 0x20A0 */ public Vector3f PhotoModeShipOffset;
        /* 0x20B0 */ public Vector3f BuildingModeInitialOffset;
        /* 0x20C0 */ public float BuildingModeMaxDistance;
        /* 0x20C4 */ public float RunningFoVAdjust;
        /* 0x20C8 */ public float MeleeBoostedFoV;
        /* 0x20CC */ public float MeleeFoV;
        /* 0x20D0 */ public float AerialViewDownDistance;
        /* 0x20D4 */ public float AerialViewPause;
        /* 0x20D8 */ public float AerialViewStartTime;
        /* 0x20DC */ public float AerialViewBackTime;
        /* 0x20E0 */ public float AerialViewBlendTime;
        /* 0x20E4 */ public TkCurveType AerialViewCurve;
        /* 0x20E8 */ public GcCameraAerialViewData BeaconTransition;
        /* 0x2118 */ public GcCameraAerialViewData SignalTransition;
        /* 0x2148 */ public GcCameraAerialViewData WaypointTransition;
        /* 0x2178 */ public GcCameraAerialViewData RadioTowerTransition;
        /* 0x21A8 */ public float ScreenshotHorizonHeight;
        /* 0x21AC */ public float ScreenshotHorizonFaceFactor;
        /* 0x21B0 */ public float ScreenshotBendDownAmount;
        /* 0x21B4 */ public float ScreenshotRightDistance;
        /* 0x21B8 */ public float ScreenshotBackDistance;
        /* 0x21BC */ public float ScreenshotInTime;
        /* 0x21C0 */ public float ScreenshotOutTime;
        /* 0x21C4 */ public float ShipCamSpringStrengthMin;
        /* 0x21C8 */ public float ShipCamSpringStrengthMax;
        /* 0x21CC */ public float ShipCamTurn;
        /* 0x21D0 */ public float ShipCamPitch;
        /* 0x21D4 */ public float ShipCamPitchMod;
        /* 0x21D8 */ public float ShipCamLookInterp;
        /* 0x21DC */ public float ShipCamMinReturnTime;
        /* 0x21E0 */ public float ShipCamReturnTime;
        /* 0x21E4 */ public float ShipCamMotionTurn;
        /* 0x21E8 */ public float ShipCamMotionPitch;
        /* 0x21EC */ public float ShipCamMotionPitchMod;
        /* 0x21F0 */ public float ShipCamMotionMaxLagTurnAngle;
        /* 0x21F4 */ public float ShipCamMotionMaxLagPitchAngle;
        /* 0x21F8 */ public float ShipCamMotionInterp;
        /* 0x21FC */ public float ShipCamRollAmountMin;
        /* 0x2200 */ public float ShipCamRollAmountMax;
        /* 0x2204 */ public float ShipCamRollSpeedScaler;
        /* 0x2208 */ public float ShipCamAimFOV;
        /* 0x220C */ public float MouseSensitivity;
        /* 0x2210 */ public float ModelViewRotateSpeed;
        /* 0x2214 */ public float ModelViewMouseRotateSpeed;
        /* 0x2218 */ public float ModelViewMouseRotateSnapStrength;
        /* 0x221C */ public float ModelViewMouseMoveSpeed;
        /* 0x2220 */ public float ModelViewDistSpeed;
        /* 0x2224 */ public float ModelViewMinDist;
        /* 0x2228 */ public float ModelViewMaxDist;
        /* 0x222C */ public float ModelViewDefaultPitch;
        /* 0x2230 */ public float ModelViewDefaultYaw;
        /* 0x2234 */ public bool DebugMoveCam;
        /* 0x2238 */ public float DebugMoveCamSpeed;
        /* 0x223C */ public float DebugMoveCamHeight;
        /* 0x2240 */ public bool DebugAICam;
        /* 0x2244 */ public float DebugAICamUp;
        /* 0x2248 */ public float DebugAICamAt;
        /* 0x224C */ public float PainShakeTime;
        /* 0x2250 */ public float ShipShakeDamper;
        /* 0x2254 */ public float IndoorCamShakeDamper;
        /* 0x2258 */ public float FirstPersonSlerpAway;
        /* 0x225C */ public float FirstPersonSlerpTowards;
        [NMS(Size = 0x24)]
        /* 0x2260 */ public GcCameraShakeData[] CameraShakeTable;
        /* 0x3D60 */ public float BobAmount;
        /* 0x3D64 */ public float BobFactor;
        /* 0x3D68 */ public float BobFocus;
        /* 0x3D6C */ public float BobRollFactor;
        /* 0x3D70 */ public float BobRollAmount;
        /* 0x3D74 */ public float BobRollOffset;
        /* 0x3D78 */ public float BobFwdAmount;
        /* 0x3D7C */ public float CamSeed1;
        /* 0x3D80 */ public float CamSeed2;
        /* 0x3D84 */ public float CamWander1Phase;
        /* 0x3D88 */ public float CamWander2Phase;
        /* 0x3D8C */ public float CamWander1Amplitude;
        /* 0x3D90 */ public float CamWander2Amplitude;
        /* 0x3D94 */ public float DebugSpaceStationTeleportOffset;
        /* 0x3D98 */ public float DebugCameraSlowFactor;
        /* 0x3D9C */ public float DebugCameraFastFactor;
        /* 0x3DA0 */ public float DebugCameraSpaceFastFactor;
        /* 0x3DA4 */ public float OffsetCamFOV;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x3DA8 */ public byte[] Padding3DA8;
        /* 0x3DB0 */ public Vector3f OffsetCamOffset;
        /* 0x3DC0 */ public Vector3f OffsetCamRotation;
        /* 0x3DD0 */ public float ObjectFocusTime;
        /* 0x3DD4 */ public float CharCamFocusHeight;
        /* 0x3DD8 */ public float CharCamMaxDistance;
        /* 0x3DDC */ public float CharCamMinDistance;
        /* 0x3DE0 */ public float CharCamHeight;
        /* 0x3DE4 */ public float CharCamOffsetTime;
        /* 0x3DE8 */ public float CharCamAutoDirStartTime;
        /* 0x3DEC */ public float CharCamLookOffset;
        /* 0x3DF0 */ public float CharCamLookOffsetFactor;
        /* 0x3DF4 */ public float CharCamDeflectSpeed;
        /* 0x3DF8 */ public float CharCamMinSpeed;
        /* 0x3DFC */ public float CharCamRightStickX;
        /* 0x3E00 */ public float CharCamRightStickY;
        /* 0x3E04 */ public float FirstPersonCamHeight;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x3E08 */ public byte[] Padding3E08;
        [NMS(Size = 0x8)]
        /* 0x3E10 */ public Vector4f[] FirstPersonCamOffset;
        /* 0x3E90 */ public Vector3f FirstPersonInShipCamOffset;
        /* 0x3EA0 */ public float FirstPersonFoV;
        /* 0x3EA4 */ public float ThirdPersonFoV;
        /* 0x3EA8 */ public float FirstPersonZoom1FoV;
        /* 0x3EAC */ public float FirstPersonZoom2FoV;
        /* 0x3EB0 */ public float ShipFoVMin;
        /* 0x3EB4 */ public float ShipFoVMin2;
        /* 0x3EB8 */ public float ShipFoVMax;
        /* 0x3EBC */ public float ShipWarpFoV;
        /* 0x3EC0 */ public float ShipFoVMin3rdPerson;
        /* 0x3EC4 */ public float ShipFoVMax3rdPerson;
        /* 0x3EC8 */ public float ShipFoVBoost;
        /* 0x3ECC */ public float ShipFoVMiniJump;
        /* 0x3ED0 */ public float ShipFoVSpring;
        /* 0x3ED4 */ public float ShipMiniJumpFoVSpring;
        /* 0x3ED8 */ public float FoVSpring;
        /* 0x3EDC */ public float FoVAdjust;
        /* 0x3EE0 */ public bool FollowDrawCamProbes;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x3EE1 */ public byte[] Padding3EE1;
        /* 0x3EE4 */ public GcCameraAnimationData CameraAnimations;
        /* 0x3F68 */ public TkTextureResource AmbientDroneAnimations;
        [NMS(Size = 0x80)]
        /* 0x3FEC */ public string CameraAmbientAnimationsData;
        /* 0x406C */ public float CameraAmbientAutoSwitchMinTime;
        /* 0x4070 */ public float CameraAmbientAutoSwitchMaxTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x4074 */ public byte[] Padding4074;
        /* 0x4080 */ public TkModelRendererData CameraNPCShipInteraction;
        /* 0x4130 */ public TkModelRendererData CameraNPCShopInteraction;
        [NMS(Size = 0x4)]
        /* 0x41E0 */ public TkPhysRelVectorData[] SavedCameraPositions;
        [NMS(Size = 0x4)]
        /* 0x4260 */ public Vector4f[] SavedCameraFacing;
        /* 0x42A0 */ public GcCameraWarpSettings WarpSettings;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x42E4 */ public byte[] EndPadding;
    }
}
